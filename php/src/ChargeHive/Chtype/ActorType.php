<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: enum.proto

namespace ChargeHive\Chtype;

use UnexpectedValueException;

/**
 * Protobuf type <code>chtype.ActorType</code>
 */
class ActorType
{
    /**
     * Generated from protobuf enum <code>ACTOR_TYPE_INVALID = 0;</code>
     */
    const ACTOR_TYPE_INVALID = 0;
    /**
     * Generated from protobuf enum <code>ACTOR_TYPE_CONSUMER = 1;</code>
     */
    const ACTOR_TYPE_CONSUMER = 1;
    /**
     * Generated from protobuf enum <code>ACTOR_TYPE_MERCHANT = 2;</code>
     */
    const ACTOR_TYPE_MERCHANT = 2;
    /**
     * Generated from protobuf enum <code>ACTOR_TYPE_CHARGEHIVE = 3;</code>
     */
    const ACTOR_TYPE_CHARGEHIVE = 3;
    /**
     * Generated from protobuf enum <code>ACTOR_TYPE_WALLET = 4;</code>
     */
    const ACTOR_TYPE_WALLET = 4;
    /**
     * Generated from protobuf enum <code>ACTOR_TYPE_CONNECTOR = 5;</code>
     */
    const ACTOR_TYPE_CONNECTOR = 5;
    /**
     * Generated from protobuf enum <code>ACTOR_TYPE_PAYMENT_PROCESSOR = 6;</code>
     */
    const ACTOR_TYPE_PAYMENT_PROCESSOR = 6;
    /**
     * Generated from protobuf enum <code>ACTOR_TYPE_PAYMENT_NETWORK = 7;</code>
     */
    const ACTOR_TYPE_PAYMENT_NETWORK = 7;
    /**
     * Generated from protobuf enum <code>ACTOR_TYPE_ACQUIRING_BANK = 8;</code>
     */
    const ACTOR_TYPE_ACQUIRING_BANK = 8;
    /**
     * Generated from protobuf enum <code>ACTOR_TYPE_ISSUING_BANK = 9;</code>
     */
    const ACTOR_TYPE_ISSUING_BANK = 9;
    /**
     * Generated from protobuf enum <code>ACTOR_TYPE_RECOVERY_AGENT = 10;</code>
     */
    const ACTOR_TYPE_RECOVERY_AGENT = 10;
    /**
     * Generated from protobuf enum <code>ACTOR_TYPE_EXCHANGE = 11;</code>
     */
    const ACTOR_TYPE_EXCHANGE = 11;
    /**
     * Generated from protobuf enum <code>ACTOR_TYPE_POLICY = 12;</code>
     */
    const ACTOR_TYPE_POLICY = 12;

    private static $valueToName = [
        self::ACTOR_TYPE_INVALID => 'ACTOR_TYPE_INVALID',
        self::ACTOR_TYPE_CONSUMER => 'ACTOR_TYPE_CONSUMER',
        self::ACTOR_TYPE_MERCHANT => 'ACTOR_TYPE_MERCHANT',
        self::ACTOR_TYPE_CHARGEHIVE => 'ACTOR_TYPE_CHARGEHIVE',
        self::ACTOR_TYPE_WALLET => 'ACTOR_TYPE_WALLET',
        self::ACTOR_TYPE_CONNECTOR => 'ACTOR_TYPE_CONNECTOR',
        self::ACTOR_TYPE_PAYMENT_PROCESSOR => 'ACTOR_TYPE_PAYMENT_PROCESSOR',
        self::ACTOR_TYPE_PAYMENT_NETWORK => 'ACTOR_TYPE_PAYMENT_NETWORK',
        self::ACTOR_TYPE_ACQUIRING_BANK => 'ACTOR_TYPE_ACQUIRING_BANK',
        self::ACTOR_TYPE_ISSUING_BANK => 'ACTOR_TYPE_ISSUING_BANK',
        self::ACTOR_TYPE_RECOVERY_AGENT => 'ACTOR_TYPE_RECOVERY_AGENT',
        self::ACTOR_TYPE_EXCHANGE => 'ACTOR_TYPE_EXCHANGE',
        self::ACTOR_TYPE_POLICY => 'ACTOR_TYPE_POLICY',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}

