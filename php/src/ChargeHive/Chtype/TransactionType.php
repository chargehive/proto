<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: enum.proto

namespace ChargeHive\Chtype;

use UnexpectedValueException;

/**
 * Protobuf type <code>chtype.TransactionType</code>
 */
class TransactionType
{
    /**
     * Generated from protobuf enum <code>TRANSACTION_TYPE_INVALID = 0;</code>
     */
    const TRANSACTION_TYPE_INVALID = 0;
    /**
     * Generated from protobuf enum <code>TRANSACTION_TYPE_AUTHORIZE = 1;</code>
     */
    const TRANSACTION_TYPE_AUTHORIZE = 1;
    /**
     * Generated from protobuf enum <code>TRANSACTION_TYPE_CAPTURE = 2;</code>
     */
    const TRANSACTION_TYPE_CAPTURE = 2;
    /**
     * Generated from protobuf enum <code>TRANSACTION_TYPE_REFUND = 3;</code>
     */
    const TRANSACTION_TYPE_REFUND = 3;
    /**
     * Generated from protobuf enum <code>TRANSACTION_TYPE_CANCEL = 4;</code>
     */
    const TRANSACTION_TYPE_CANCEL = 4;
    /**
     * Generated from protobuf enum <code>TRANSACTION_TYPE_DISPUTE = 5;</code>
     */
    const TRANSACTION_TYPE_DISPUTE = 5;
    /**
     * Generated from protobuf enum <code>TRANSACTION_TYPE_VERIFY = 6;</code>
     */
    const TRANSACTION_TYPE_VERIFY = 6;
    /**
     * Generated from protobuf enum <code>TRANSACTION_TYPE_EXPIRED = 7;</code>
     */
    const TRANSACTION_TYPE_EXPIRED = 7;
    /**
     * Generated from protobuf enum <code>TRANSACTION_TYPE_INTERNAL = 99;</code>
     */
    const TRANSACTION_TYPE_INTERNAL = 99;

    private static $valueToName = [
        self::TRANSACTION_TYPE_INVALID => 'TRANSACTION_TYPE_INVALID',
        self::TRANSACTION_TYPE_AUTHORIZE => 'TRANSACTION_TYPE_AUTHORIZE',
        self::TRANSACTION_TYPE_CAPTURE => 'TRANSACTION_TYPE_CAPTURE',
        self::TRANSACTION_TYPE_REFUND => 'TRANSACTION_TYPE_REFUND',
        self::TRANSACTION_TYPE_CANCEL => 'TRANSACTION_TYPE_CANCEL',
        self::TRANSACTION_TYPE_DISPUTE => 'TRANSACTION_TYPE_DISPUTE',
        self::TRANSACTION_TYPE_VERIFY => 'TRANSACTION_TYPE_VERIFY',
        self::TRANSACTION_TYPE_EXPIRED => 'TRANSACTION_TYPE_EXPIRED',
        self::TRANSACTION_TYPE_INTERNAL => 'TRANSACTION_TYPE_INTERNAL',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}

