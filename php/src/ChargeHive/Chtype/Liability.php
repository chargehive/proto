<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: enum.proto

namespace ChargeHive\Chtype;

use UnexpectedValueException;

/**
 * Protobuf type <code>chtype.Liability</code>
 */
class Liability
{
    /**
     * Generated from protobuf enum <code>LIABILITY_INVALID = 0;</code>
     */
    const LIABILITY_INVALID = 0;
    /**
     * Generated from protobuf enum <code>LIABILITY_UNKNOWN = 1;</code>
     */
    const LIABILITY_UNKNOWN = 1;
    /**
     * Generated from protobuf enum <code>LIABILITY_MERCHANT = 2;</code>
     */
    const LIABILITY_MERCHANT = 2;
    /**
     * Generated from protobuf enum <code>LIABILITY_ISSUER = 3;</code>
     */
    const LIABILITY_ISSUER = 3;

    private static $valueToName = [
        self::LIABILITY_INVALID => 'LIABILITY_INVALID',
        self::LIABILITY_UNKNOWN => 'LIABILITY_UNKNOWN',
        self::LIABILITY_MERCHANT => 'LIABILITY_MERCHANT',
        self::LIABILITY_ISSUER => 'LIABILITY_ISSUER',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}

