<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: fraud.proto

namespace ChargeHive\Chtype;

use UnexpectedValueException;

/**
 * Protobuf type <code>chtype.RiskLevel</code>
 */
class RiskLevel
{
    /**
     * Generated from protobuf enum <code>RISK_LEVEL_INVALID = 0;</code>
     */
    const RISK_LEVEL_INVALID = 0;
    /**
     * Generated from protobuf enum <code>RISK_LEVEL_NOT_RATED = 1;</code>
     */
    const RISK_LEVEL_NOT_RATED = 1;
    /**
     * Generated from protobuf enum <code>RISK_LEVEL_NEGLIGIBLE = 10;</code>
     */
    const RISK_LEVEL_NEGLIGIBLE = 10;
    /**
     * Generated from protobuf enum <code>RISK_LEVEL_MINOR = 30;</code>
     */
    const RISK_LEVEL_MINOR = 30;
    /**
     * Generated from protobuf enum <code>RISK_LEVEL_MODERATE = 50;</code>
     */
    const RISK_LEVEL_MODERATE = 50;
    /**
     * Generated from protobuf enum <code>RISK_LEVEL_SIGNIFICANT = 70;</code>
     */
    const RISK_LEVEL_SIGNIFICANT = 70;
    /**
     * Generated from protobuf enum <code>RISK_LEVEL_SERVERE = 90;</code>
     */
    const RISK_LEVEL_SERVERE = 90;

    private static $valueToName = [
        self::RISK_LEVEL_INVALID => 'RISK_LEVEL_INVALID',
        self::RISK_LEVEL_NOT_RATED => 'RISK_LEVEL_NOT_RATED',
        self::RISK_LEVEL_NEGLIGIBLE => 'RISK_LEVEL_NEGLIGIBLE',
        self::RISK_LEVEL_MINOR => 'RISK_LEVEL_MINOR',
        self::RISK_LEVEL_MODERATE => 'RISK_LEVEL_MODERATE',
        self::RISK_LEVEL_SIGNIFICANT => 'RISK_LEVEL_SIGNIFICANT',
        self::RISK_LEVEL_SERVERE => 'RISK_LEVEL_SERVERE',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}

