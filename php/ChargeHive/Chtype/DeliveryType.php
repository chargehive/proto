<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: chargehive/chtype/enum.proto

namespace ChargeHive\Chtype;

use UnexpectedValueException;

/**
 * Protobuf type <code>chargehive.chtype.DeliveryType</code>
 */
class DeliveryType
{
    /**
     * Generated from protobuf enum <code>DELIVERY_TYPE_INVALID = 0;</code>
     */
    const DELIVERY_TYPE_INVALID = 0;
    /**
     * Generated from protobuf enum <code>DELIVERY_TYPE_NONE = 1;</code>
     */
    const DELIVERY_TYPE_NONE = 1;
    /**
     * Generated from protobuf enum <code>DELIVERY_TYPE_PHYSICAL = 2;</code>
     */
    const DELIVERY_TYPE_PHYSICAL = 2;
    /**
     * Generated from protobuf enum <code>DELIVERY_TYPE_VIRTUAL = 3;</code>
     */
    const DELIVERY_TYPE_VIRTUAL = 3;

    private static $valueToName = [
        self::DELIVERY_TYPE_INVALID => 'DELIVERY_TYPE_INVALID',
        self::DELIVERY_TYPE_NONE => 'DELIVERY_TYPE_NONE',
        self::DELIVERY_TYPE_PHYSICAL => 'DELIVERY_TYPE_PHYSICAL',
        self::DELIVERY_TYPE_VIRTUAL => 'DELIVERY_TYPE_VIRTUAL',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}

