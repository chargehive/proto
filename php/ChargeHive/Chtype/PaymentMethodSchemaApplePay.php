<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: chargehive/chtype/payment_method_schema.proto

namespace ChargeHive\Chtype;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>chargehive.chtype.PaymentMethodSchemaApplePay</code>
 */
class PaymentMethodSchemaApplePay extends \Google\Protobuf\Internal\Message
{
    /**
     *url issued from applePay JS used to confirm merchant identity
     *
     * Generated from protobuf field <code>string apple_pay_url = 1;</code>
     */
    protected $apple_pay_url = '';
    /**
     *domain that applePay is used on, must match registered apple pay domain
     *
     * Generated from protobuf field <code>string initiative_context = 2;</code>
     */
    protected $initiative_context = '';

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $apple_pay_url
     *          url issued from applePay JS used to confirm merchant identity
     *     @type string $initiative_context
     *          domain that applePay is used on, must match registered apple pay domain
     * }
     */
    public function __construct($data = NULL) {
        \ChargeHive\Chtype\Metadata\PaymentMethodSchema::initOnce();
        parent::__construct($data);
    }

    /**
     *url issued from applePay JS used to confirm merchant identity
     *
     * Generated from protobuf field <code>string apple_pay_url = 1;</code>
     * @return string
     */
    public function getApplePayUrl()
    {
        return $this->apple_pay_url;
    }

    /**
     *url issued from applePay JS used to confirm merchant identity
     *
     * Generated from protobuf field <code>string apple_pay_url = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setApplePayUrl($var)
    {
        GPBUtil::checkString($var, True);
        $this->apple_pay_url = $var;

        return $this;
    }

    /**
     *domain that applePay is used on, must match registered apple pay domain
     *
     * Generated from protobuf field <code>string initiative_context = 2;</code>
     * @return string
     */
    public function getInitiativeContext()
    {
        return $this->initiative_context;
    }

    /**
     *domain that applePay is used on, must match registered apple pay domain
     *
     * Generated from protobuf field <code>string initiative_context = 2;</code>
     * @param string $var
     * @return $this
     */
    public function setInitiativeContext($var)
    {
        GPBUtil::checkString($var, True);
        $this->initiative_context = $var;

        return $this;
    }

}

