<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# NO CHECKED-IN PROTOBUF GENCODE
# source: chargehive/chtype/response_codes.proto

namespace ChargeHive\Chtype;

use UnexpectedValueException;

/**
 * Protobuf type <code>chargehive.chtype.ResponseCode</code>
 */
class ResponseCode
{
    /**
     *Invalid response code
     *
     * Generated from protobuf enum <code>RESPONSE_CODE_INVALID = 0;</code>
     */
    const RESPONSE_CODE_INVALID = 0;
    /**
     *Generic Informational Response
     *
     * Generated from protobuf enum <code>RESPONSE_CODE_INFO = 1000;</code>
     */
    const RESPONSE_CODE_INFO = 1000;
    /**
     *Success Response
     *
     * Generated from protobuf enum <code>RESPONSE_CODE_OK = 2000;</code>
     */
    const RESPONSE_CODE_OK = 2000;
    /**
     *Partial Success Response
     *
     * Generated from protobuf enum <code>RESPONSE_CODE_OK_PARTIAL = 2100;</code>
     */
    const RESPONSE_CODE_OK_PARTIAL = 2100;
    /**
     *3D Secure, Pending, Come back later
     *
     * Generated from protobuf enum <code>RESPONSE_CODE_REDIRECT = 3000;</code>
     */
    const RESPONSE_CODE_REDIRECT = 3000;
    /**
     *Request is still processing, check back later
     *
     * Generated from protobuf enum <code>RESPONSE_CODE_REDIRECT_STILL_PROCESSING = 3010;</code>
     */
    const RESPONSE_CODE_REDIRECT_STILL_PROCESSING = 3010;
    /**
     *Issue with the client request
     *
     * Generated from protobuf enum <code>RESPONSE_CODE_CLIENT = 4000;</code>
     */
    const RESPONSE_CODE_CLIENT = 4000;
    /**
     *Invalid request payload
     *
     * Generated from protobuf enum <code>RESPONSE_CODE_CLIENT_PAYLOAD = 4100;</code>
     */
    const RESPONSE_CODE_CLIENT_PAYLOAD = 4100;
    /**
     *Invalid amount in request payload
     *
     * Generated from protobuf enum <code>RESPONSE_CODE_CLIENT_PAYLOAD_AMOUNT = 4110;</code>
     */
    const RESPONSE_CODE_CLIENT_PAYLOAD_AMOUNT = 4110;
    /**
     *Invalid card data in request payload
     *
     * Generated from protobuf enum <code>RESPONSE_CODE_CLIENT_PAYLOAD_CARD = 4120;</code>
     */
    const RESPONSE_CODE_CLIENT_PAYLOAD_CARD = 4120;
    /**
     *Invalid card number in request payload
     *
     * Generated from protobuf enum <code>RESPONSE_CODE_CLIENT_PAYLOAD_CARD_NUMBER = 4130;</code>
     */
    const RESPONSE_CODE_CLIENT_PAYLOAD_CARD_NUMBER = 4130;
    /**
     *Invalid card date in request payload
     *
     * Generated from protobuf enum <code>RESPONSE_CODE_CLIENT_PAYLOAD_CARD_DATE = 4140;</code>
     */
    const RESPONSE_CODE_CLIENT_PAYLOAD_CARD_DATE = 4140;
    /**
     *Invalid card CVV in request payload
     *
     * Generated from protobuf enum <code>RESPONSE_CODE_CLIENT_PAYLOAD_CARD_CVV = 4150;</code>
     */
    const RESPONSE_CODE_CLIENT_PAYLOAD_CARD_CVV = 4150;
    /**
     *Invalid card type in request payload
     *
     * Generated from protobuf enum <code>RESPONSE_CODE_CLIENT_PAYLOAD_CARD_TYPE = 4160;</code>
     */
    const RESPONSE_CODE_CLIENT_PAYLOAD_CARD_TYPE = 4160;
    /**
     *Invalid address data in request payload
     *
     * Generated from protobuf enum <code>RESPONSE_CODE_CLIENT_PAYLOAD_ADDRESS = 4170;</code>
     */
    const RESPONSE_CODE_CLIENT_PAYLOAD_ADDRESS = 4170;
    /**
     *Invalid zip data in request payload
     *
     * Generated from protobuf enum <code>RESPONSE_CODE_CLIENT_PAYLOAD_ZIP = 4180;</code>
     */
    const RESPONSE_CODE_CLIENT_PAYLOAD_ZIP = 4180;
    /**
     *Invalid currency data in request payload
     *
     * Generated from protobuf enum <code>RESPONSE_CODE_CLIENT_PAYLOAD_CURRENCY = 4190;</code>
     */
    const RESPONSE_CODE_CLIENT_PAYLOAD_CURRENCY = 4190;
    /**
     *Error with payment method source
     *
     * Generated from protobuf enum <code>RESPONSE_CODE_CLIENT_PAYMENT_METHOD = 4300;</code>
     */
    const RESPONSE_CODE_CLIENT_PAYMENT_METHOD = 4300;
    /**
     *Payment method has insufficient funds
     *
     * Generated from protobuf enum <code>RESPONSE_CODE_CLIENT_PAYMENT_METHOD_FUNDS = 4310;</code>
     */
    const RESPONSE_CODE_CLIENT_PAYMENT_METHOD_FUNDS = 4310;
    /**
     *Payment method has reached an amount or frequency limit
     *
     * Generated from protobuf enum <code>RESPONSE_CODE_CLIENT_PAYMENT_METHOD_LIMIT = 4320;</code>
     */
    const RESPONSE_CODE_CLIENT_PAYMENT_METHOD_LIMIT = 4320;
    /**
     *Payment method does not allow this request
     *
     * Generated from protobuf enum <code>RESPONSE_CODE_CLIENT_PAYMENT_METHOD_NOT_PERMITTED = 4330;</code>
     */
    const RESPONSE_CODE_CLIENT_PAYMENT_METHOD_NOT_PERMITTED = 4330;
    /**
     *Transaction declined due to security issues
     *
     * Generated from protobuf enum <code>RESPONSE_CODE_CLIENT_SECURITY = 4500;</code>
     */
    const RESPONSE_CODE_CLIENT_SECURITY = 4500;
    /**
     *Transaction likely fraudulent
     *
     * Generated from protobuf enum <code>RESPONSE_CODE_CLIENT_SECURITY_FRAUD = 4510;</code>
     */
    const RESPONSE_CODE_CLIENT_SECURITY_FRAUD = 4510;
    /**
     *Payment card may be lost
     *
     * Generated from protobuf enum <code>RESPONSE_CODE_CLIENT_SECURITY_LOST = 4520;</code>
     */
    const RESPONSE_CODE_CLIENT_SECURITY_LOST = 4520;
    /**
     *Payment card may be stolen
     *
     * Generated from protobuf enum <code>RESPONSE_CODE_CLIENT_SECURITY_STOLEN = 4530;</code>
     */
    const RESPONSE_CODE_CLIENT_SECURITY_STOLEN = 4530;
    /**
     *Payment card should be retrieved from the customer
     *
     * Generated from protobuf enum <code>RESPONSE_CODE_CLIENT_SECURITY_PICKUP = 4540;</code>
     */
    const RESPONSE_CODE_CLIENT_SECURITY_PICKUP = 4540;
    /**
     *Customer should contact their payment method provider
     *
     * Generated from protobuf enum <code>RESPONSE_CODE_CLIENT_SECURITY_CONTACT_ISSUER = 4550;</code>
     */
    const RESPONSE_CODE_CLIENT_SECURITY_CONTACT_ISSUER = 4550;
    /**
     *Transaction suspected of fraud
     *
     * Generated from protobuf enum <code>RESPONSE_CODE_CLIENT_SECURITY_SUSPECTED_FRAUD = 4560;</code>
     */
    const RESPONSE_CODE_CLIENT_SECURITY_SUSPECTED_FRAUD = 4560;
    /**
     *Velocity fraud check failed
     *
     * Generated from protobuf enum <code>RESPONSE_CODE_CLIENT_SECURITY_VELOCITY = 4570;</code>
     */
    const RESPONSE_CODE_CLIENT_SECURITY_VELOCITY = 4570;
    /**
     *AVS fraud check failed
     *
     * Generated from protobuf enum <code>RESPONSE_CODE_CLIENT_SECURITY_AVS = 4580;</code>
     */
    const RESPONSE_CODE_CLIENT_SECURITY_AVS = 4580;
    /**
     *CVV security check failed
     *
     * Generated from protobuf enum <code>RESPONSE_CODE_CLIENT_SECURITY_CVV = 4590;</code>
     */
    const RESPONSE_CODE_CLIENT_SECURITY_CVV = 4590;
    /**
     *Issues with the processing the transaction or associated transactions
     *
     * Generated from protobuf enum <code>RESPONSE_CODE_CLIENT_TRANS = 4700;</code>
     */
    const RESPONSE_CODE_CLIENT_TRANS = 4700;
    /**
     *Generic decline from payment method
     *
     * Generated from protobuf enum <code>RESPONSE_CODE_CLIENT_TRANS_DECLINED = 4710;</code>
     */
    const RESPONSE_CODE_CLIENT_TRANS_DECLINED = 4710;
    /**
     *Generic failure of payment method
     *
     * Generated from protobuf enum <code>RESPONSE_CODE_CLIENT_TRANS_FAILED = 4720;</code>
     */
    const RESPONSE_CODE_CLIENT_TRANS_FAILED = 4720;
    /**
     *Cannot complete transaction as not authorised or unable to complete
     *
     * Generated from protobuf enum <code>RESPONSE_CODE_CLIENT_TRANS_PERMISSION = 4730;</code>
     */
    const RESPONSE_CODE_CLIENT_TRANS_PERMISSION = 4730;
    /**
     *Transaction or associated transaction cannot be found
     *
     * Generated from protobuf enum <code>RESPONSE_CODE_CLIENT_TRANS_NOT_FOUND = 4740;</code>
     */
    const RESPONSE_CODE_CLIENT_TRANS_NOT_FOUND = 4740;
    /**
     *This transaction has already been sent
     *
     * Generated from protobuf enum <code>RESPONSE_CODE_CLIENT_TRANS_DUPLICATE = 4750;</code>
     */
    const RESPONSE_CODE_CLIENT_TRANS_DUPLICATE = 4750;
    /**
     *Payment method provider suggests the transaction be reattempted
     *
     * Generated from protobuf enum <code>RESPONSE_CODE_CLIENT_TRANS_RETRY = 4760;</code>
     */
    const RESPONSE_CODE_CLIENT_TRANS_RETRY = 4760;
    /**
     *Transaction or associated transaction has expired and cannot complete
     *
     * Generated from protobuf enum <code>RESPONSE_CODE_CLIENT_TRANS_EXPIRED = 4770;</code>
     */
    const RESPONSE_CODE_CLIENT_TRANS_EXPIRED = 4770;
    /**
     *Transaction or associated transaction is disputed/part of a chargeback
     *
     * Generated from protobuf enum <code>RESPONSE_CODE_CLIENT_TRANS_DISPUTE = 4780;</code>
     */
    const RESPONSE_CODE_CLIENT_TRANS_DISPUTE = 4780;
    /**
     *Payment method provider did not response in time
     *
     * Generated from protobuf enum <code>RESPONSE_CODE_CLIENT_TRANS_TIMEOUT = 4790;</code>
     */
    const RESPONSE_CODE_CLIENT_TRANS_TIMEOUT = 4790;
    /**
     *Operation has already been completed
     *
     * Generated from protobuf enum <code>RESPONSE_CODE_CLIENT_TRANS_ALREADY_DONE = 4800;</code>
     */
    const RESPONSE_CODE_CLIENT_TRANS_ALREADY_DONE = 4800;
    /**
     *Cannot complete operation now, but may be ready later
     *
     * Generated from protobuf enum <code>RESPONSE_CODE_CLIENT_TRANS_NOT_READY = 4810;</code>
     */
    const RESPONSE_CODE_CLIENT_TRANS_NOT_READY = 4810;
    /**
     *Connector does not support this payment method
     *
     * Generated from protobuf enum <code>RESPONSE_CODE_CLIENT_TRANS_PAYMENT_METHOD = 4820;</code>
     */
    const RESPONSE_CODE_CLIENT_TRANS_PAYMENT_METHOD = 4820;
    /**
     *Amount or volume exceeds some limit
     *
     * Generated from protobuf enum <code>RESPONSE_CODE_CLIENT_TRANS_EXCEEDS_LIMIT = 4830;</code>
     */
    const RESPONSE_CODE_CLIENT_TRANS_EXCEEDS_LIMIT = 4830;
    /**
     *3D Secure issues
     *
     * Generated from protobuf enum <code>RESPONSE_CODE_CLIENT_3DSEC = 4900;</code>
     */
    const RESPONSE_CODE_CLIENT_3DSEC = 4900;
    /**
     *3D Secure Authentication required
     *
     * Generated from protobuf enum <code>RESPONSE_CODE_CLIENT_3DSEC_AUTHENTICATION = 4910;</code>
     */
    const RESPONSE_CODE_CLIENT_3DSEC_AUTHENTICATION = 4910;
    /**
     *Issues with the connector
     *
     * Generated from protobuf enum <code>RESPONSE_CODE_CONN = 5000;</code>
     */
    const RESPONSE_CODE_CONN = 5000;
    /**
     *Internal ChargeHive error
     *
     * Generated from protobuf enum <code>RESPONSE_CODE_CONN_CHARGEHIVE = 5010;</code>
     */
    const RESPONSE_CODE_CONN_CHARGEHIVE = 5010;
    /**
     *Connector misconfiguration or authentication error
     *
     * Generated from protobuf enum <code>RESPONSE_CODE_CONN_CONFIG_AUTH = 5500;</code>
     */
    const RESPONSE_CODE_CONN_CONFIG_AUTH = 5500;
    /**
     *Connector does not exist
     *
     * Generated from protobuf enum <code>RESPONSE_CODE_CONN_INVALID = 5510;</code>
     */
    const RESPONSE_CODE_CONN_INVALID = 5510;
    /**
     *Cannot communicate with connector service
     *
     * Generated from protobuf enum <code>RESPONSE_CODE_CONN_UNAVAILABLE = 5520;</code>
     */
    const RESPONSE_CODE_CONN_UNAVAILABLE = 5520;
    /**
     *Internal error from connector
     *
     * Generated from protobuf enum <code>RESPONSE_CODE_CONN_ERROR = 5530;</code>
     */
    const RESPONSE_CODE_CONN_ERROR = 5530;
    /**
     *Connector rate or amount limit has been reached
     *
     * Generated from protobuf enum <code>RESPONSE_CODE_CONN_LIMIT_EXCEEDED = 5540;</code>
     */
    const RESPONSE_CODE_CONN_LIMIT_EXCEEDED = 5540;
    /**
     *Connector, or connector account does not support this type of request
     *
     * Generated from protobuf enum <code>RESPONSE_CODE_CONN_UNSUPPORTED_METHOD = 5550;</code>
     */
    const RESPONSE_CODE_CONN_UNSUPPORTED_METHOD = 5550;
    /**
     *Connection with the connector has timed out
     *
     * Generated from protobuf enum <code>RESPONSE_CODE_CONN_TIMEOUT = 5570;</code>
     */
    const RESPONSE_CODE_CONN_TIMEOUT = 5570;
    /**
     *Unknown error, if received, this should be remapped to a propper code
     *
     * Generated from protobuf enum <code>RESPONSE_CODE_UNKNOWN = 5990;</code>
     */
    const RESPONSE_CODE_UNKNOWN = 5990;

    private static $valueToName = [
        self::RESPONSE_CODE_INVALID => 'RESPONSE_CODE_INVALID',
        self::RESPONSE_CODE_INFO => 'RESPONSE_CODE_INFO',
        self::RESPONSE_CODE_OK => 'RESPONSE_CODE_OK',
        self::RESPONSE_CODE_OK_PARTIAL => 'RESPONSE_CODE_OK_PARTIAL',
        self::RESPONSE_CODE_REDIRECT => 'RESPONSE_CODE_REDIRECT',
        self::RESPONSE_CODE_REDIRECT_STILL_PROCESSING => 'RESPONSE_CODE_REDIRECT_STILL_PROCESSING',
        self::RESPONSE_CODE_CLIENT => 'RESPONSE_CODE_CLIENT',
        self::RESPONSE_CODE_CLIENT_PAYLOAD => 'RESPONSE_CODE_CLIENT_PAYLOAD',
        self::RESPONSE_CODE_CLIENT_PAYLOAD_AMOUNT => 'RESPONSE_CODE_CLIENT_PAYLOAD_AMOUNT',
        self::RESPONSE_CODE_CLIENT_PAYLOAD_CARD => 'RESPONSE_CODE_CLIENT_PAYLOAD_CARD',
        self::RESPONSE_CODE_CLIENT_PAYLOAD_CARD_NUMBER => 'RESPONSE_CODE_CLIENT_PAYLOAD_CARD_NUMBER',
        self::RESPONSE_CODE_CLIENT_PAYLOAD_CARD_DATE => 'RESPONSE_CODE_CLIENT_PAYLOAD_CARD_DATE',
        self::RESPONSE_CODE_CLIENT_PAYLOAD_CARD_CVV => 'RESPONSE_CODE_CLIENT_PAYLOAD_CARD_CVV',
        self::RESPONSE_CODE_CLIENT_PAYLOAD_CARD_TYPE => 'RESPONSE_CODE_CLIENT_PAYLOAD_CARD_TYPE',
        self::RESPONSE_CODE_CLIENT_PAYLOAD_ADDRESS => 'RESPONSE_CODE_CLIENT_PAYLOAD_ADDRESS',
        self::RESPONSE_CODE_CLIENT_PAYLOAD_ZIP => 'RESPONSE_CODE_CLIENT_PAYLOAD_ZIP',
        self::RESPONSE_CODE_CLIENT_PAYLOAD_CURRENCY => 'RESPONSE_CODE_CLIENT_PAYLOAD_CURRENCY',
        self::RESPONSE_CODE_CLIENT_PAYMENT_METHOD => 'RESPONSE_CODE_CLIENT_PAYMENT_METHOD',
        self::RESPONSE_CODE_CLIENT_PAYMENT_METHOD_FUNDS => 'RESPONSE_CODE_CLIENT_PAYMENT_METHOD_FUNDS',
        self::RESPONSE_CODE_CLIENT_PAYMENT_METHOD_LIMIT => 'RESPONSE_CODE_CLIENT_PAYMENT_METHOD_LIMIT',
        self::RESPONSE_CODE_CLIENT_PAYMENT_METHOD_NOT_PERMITTED => 'RESPONSE_CODE_CLIENT_PAYMENT_METHOD_NOT_PERMITTED',
        self::RESPONSE_CODE_CLIENT_SECURITY => 'RESPONSE_CODE_CLIENT_SECURITY',
        self::RESPONSE_CODE_CLIENT_SECURITY_FRAUD => 'RESPONSE_CODE_CLIENT_SECURITY_FRAUD',
        self::RESPONSE_CODE_CLIENT_SECURITY_LOST => 'RESPONSE_CODE_CLIENT_SECURITY_LOST',
        self::RESPONSE_CODE_CLIENT_SECURITY_STOLEN => 'RESPONSE_CODE_CLIENT_SECURITY_STOLEN',
        self::RESPONSE_CODE_CLIENT_SECURITY_PICKUP => 'RESPONSE_CODE_CLIENT_SECURITY_PICKUP',
        self::RESPONSE_CODE_CLIENT_SECURITY_CONTACT_ISSUER => 'RESPONSE_CODE_CLIENT_SECURITY_CONTACT_ISSUER',
        self::RESPONSE_CODE_CLIENT_SECURITY_SUSPECTED_FRAUD => 'RESPONSE_CODE_CLIENT_SECURITY_SUSPECTED_FRAUD',
        self::RESPONSE_CODE_CLIENT_SECURITY_VELOCITY => 'RESPONSE_CODE_CLIENT_SECURITY_VELOCITY',
        self::RESPONSE_CODE_CLIENT_SECURITY_AVS => 'RESPONSE_CODE_CLIENT_SECURITY_AVS',
        self::RESPONSE_CODE_CLIENT_SECURITY_CVV => 'RESPONSE_CODE_CLIENT_SECURITY_CVV',
        self::RESPONSE_CODE_CLIENT_TRANS => 'RESPONSE_CODE_CLIENT_TRANS',
        self::RESPONSE_CODE_CLIENT_TRANS_DECLINED => 'RESPONSE_CODE_CLIENT_TRANS_DECLINED',
        self::RESPONSE_CODE_CLIENT_TRANS_FAILED => 'RESPONSE_CODE_CLIENT_TRANS_FAILED',
        self::RESPONSE_CODE_CLIENT_TRANS_PERMISSION => 'RESPONSE_CODE_CLIENT_TRANS_PERMISSION',
        self::RESPONSE_CODE_CLIENT_TRANS_NOT_FOUND => 'RESPONSE_CODE_CLIENT_TRANS_NOT_FOUND',
        self::RESPONSE_CODE_CLIENT_TRANS_DUPLICATE => 'RESPONSE_CODE_CLIENT_TRANS_DUPLICATE',
        self::RESPONSE_CODE_CLIENT_TRANS_RETRY => 'RESPONSE_CODE_CLIENT_TRANS_RETRY',
        self::RESPONSE_CODE_CLIENT_TRANS_EXPIRED => 'RESPONSE_CODE_CLIENT_TRANS_EXPIRED',
        self::RESPONSE_CODE_CLIENT_TRANS_DISPUTE => 'RESPONSE_CODE_CLIENT_TRANS_DISPUTE',
        self::RESPONSE_CODE_CLIENT_TRANS_TIMEOUT => 'RESPONSE_CODE_CLIENT_TRANS_TIMEOUT',
        self::RESPONSE_CODE_CLIENT_TRANS_ALREADY_DONE => 'RESPONSE_CODE_CLIENT_TRANS_ALREADY_DONE',
        self::RESPONSE_CODE_CLIENT_TRANS_NOT_READY => 'RESPONSE_CODE_CLIENT_TRANS_NOT_READY',
        self::RESPONSE_CODE_CLIENT_TRANS_PAYMENT_METHOD => 'RESPONSE_CODE_CLIENT_TRANS_PAYMENT_METHOD',
        self::RESPONSE_CODE_CLIENT_TRANS_EXCEEDS_LIMIT => 'RESPONSE_CODE_CLIENT_TRANS_EXCEEDS_LIMIT',
        self::RESPONSE_CODE_CLIENT_3DSEC => 'RESPONSE_CODE_CLIENT_3DSEC',
        self::RESPONSE_CODE_CLIENT_3DSEC_AUTHENTICATION => 'RESPONSE_CODE_CLIENT_3DSEC_AUTHENTICATION',
        self::RESPONSE_CODE_CONN => 'RESPONSE_CODE_CONN',
        self::RESPONSE_CODE_CONN_CHARGEHIVE => 'RESPONSE_CODE_CONN_CHARGEHIVE',
        self::RESPONSE_CODE_CONN_CONFIG_AUTH => 'RESPONSE_CODE_CONN_CONFIG_AUTH',
        self::RESPONSE_CODE_CONN_INVALID => 'RESPONSE_CODE_CONN_INVALID',
        self::RESPONSE_CODE_CONN_UNAVAILABLE => 'RESPONSE_CODE_CONN_UNAVAILABLE',
        self::RESPONSE_CODE_CONN_ERROR => 'RESPONSE_CODE_CONN_ERROR',
        self::RESPONSE_CODE_CONN_LIMIT_EXCEEDED => 'RESPONSE_CODE_CONN_LIMIT_EXCEEDED',
        self::RESPONSE_CODE_CONN_UNSUPPORTED_METHOD => 'RESPONSE_CODE_CONN_UNSUPPORTED_METHOD',
        self::RESPONSE_CODE_CONN_TIMEOUT => 'RESPONSE_CODE_CONN_TIMEOUT',
        self::RESPONSE_CODE_UNKNOWN => 'RESPONSE_CODE_UNKNOWN',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}

