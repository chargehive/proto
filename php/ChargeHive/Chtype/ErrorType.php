<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: chargehive/chtype/enum.proto

namespace ChargeHive\Chtype;

use UnexpectedValueException;

/**
 * Protobuf type <code>chargehive.chtype.ErrorType</code>
 */
class ErrorType
{
    /**
     * Generated from protobuf enum <code>ERROR_TYPE_INVALID = 0;</code>
     */
    const ERROR_TYPE_INVALID = 0;
    /**
     * Generated from protobuf enum <code>ERROR_TYPE_NONE = 1;</code>
     */
    const ERROR_TYPE_NONE = 1;
    /**
     * Generated from protobuf enum <code>ERROR_TYPE_AVAILABLE_FUNDS = 2;</code>
     */
    const ERROR_TYPE_AVAILABLE_FUNDS = 2;
    /**
     * Generated from protobuf enum <code>ERROR_TYPE_PAYLOAD = 3;</code>
     */
    const ERROR_TYPE_PAYLOAD = 3;
    /**
     * Generated from protobuf enum <code>ERROR_TYPE_LIMIT = 4;</code>
     */
    const ERROR_TYPE_LIMIT = 4;
    /**
     * Generated from protobuf enum <code>ERROR_TYPE_EXPIRED = 5;</code>
     */
    const ERROR_TYPE_EXPIRED = 5;
    /**
     * Generated from protobuf enum <code>ERROR_TYPE_UNAVAILABLE = 6;</code>
     */
    const ERROR_TYPE_UNAVAILABLE = 6;
    /**
     * Generated from protobuf enum <code>ERROR_TYPE_UNSUPPORTED = 7;</code>
     */
    const ERROR_TYPE_UNSUPPORTED = 7;
    /**
     * Generated from protobuf enum <code>ERROR_TYPE_LOST = 8;</code>
     */
    const ERROR_TYPE_LOST = 8;
    /**
     * Generated from protobuf enum <code>ERROR_TYPE_STOLEN = 9;</code>
     */
    const ERROR_TYPE_STOLEN = 9;
    /**
     * Generated from protobuf enum <code>ERROR_TYPE_FRAUD = 10;</code>
     */
    const ERROR_TYPE_FRAUD = 10;
    /**
     * Generated from protobuf enum <code>ERROR_TYPE_PICKUP = 11;</code>
     */
    const ERROR_TYPE_PICKUP = 11;
    /**
     * Generated from protobuf enum <code>ERROR_TYPE_VELOCITY = 12;</code>
     */
    const ERROR_TYPE_VELOCITY = 12;
    /**
     * Generated from protobuf enum <code>ERROR_TYPE_ADDRESS = 13;</code>
     */
    const ERROR_TYPE_ADDRESS = 13;
    /**
     * Generated from protobuf enum <code>ERROR_TYPE_DUPLICATE = 14;</code>
     */
    const ERROR_TYPE_DUPLICATE = 14;
    /**
     * Generated from protobuf enum <code>ERROR_TYPE_TIMEOUT = 15;</code>
     */
    const ERROR_TYPE_TIMEOUT = 15;
    /**
     * Generated from protobuf enum <code>ERROR_TYPE_NOT_FOUND = 16;</code>
     */
    const ERROR_TYPE_NOT_FOUND = 16;
    /**
     * Generated from protobuf enum <code>ERROR_TYPE_DISPUTED = 17;</code>
     */
    const ERROR_TYPE_DISPUTED = 17;
    /**
     * Generated from protobuf enum <code>ERROR_TYPE_PERMISSION = 18;</code>
     */
    const ERROR_TYPE_PERMISSION = 18;
    /**
     * Generated from protobuf enum <code>ERROR_TYPE_DECLINE = 19;</code>
     */
    const ERROR_TYPE_DECLINE = 19;
    /**
     * Generated from protobuf enum <code>ERROR_TYPE_USER_INPUT = 20;</code>
     */
    const ERROR_TYPE_USER_INPUT = 20;
    /**
     * Generated from protobuf enum <code>ERROR_TYPE_USER_DEVICE = 21;</code>
     */
    const ERROR_TYPE_USER_DEVICE = 21;
    /**
     * Generated from protobuf enum <code>ERROR_TYPE_ALREADY_DONE = 22;</code>
     */
    const ERROR_TYPE_ALREADY_DONE = 22;
    /**
     * Generated from protobuf enum <code>ERROR_TYPE_RETRY = 23;</code>
     */
    const ERROR_TYPE_RETRY = 23;
    /**
     * Generated from protobuf enum <code>ERROR_TYPE_QUEUED = 24;</code>
     */
    const ERROR_TYPE_QUEUED = 24;
    /**
     * Generated from protobuf enum <code>ERROR_TYPE_SYSTEM = 25;</code>
     */
    const ERROR_TYPE_SYSTEM = 25;
    /**
     * Generated from protobuf enum <code>ERROR_TYPE_UNKNOWN = 26;</code>
     */
    const ERROR_TYPE_UNKNOWN = 26;
    /**
     * Generated from protobuf enum <code>ERROR_TYPE_NOT_READY = 27;</code>
     */
    const ERROR_TYPE_NOT_READY = 27;
    /**
     * Generated from protobuf enum <code>ERROR_TYPE_DISABLED = 28;</code>
     */
    const ERROR_TYPE_DISABLED = 28;
    /**
     * Generated from protobuf enum <code>ERROR_TYPE_CVV = 29;</code>
     */
    const ERROR_TYPE_CVV = 29;

    private static $valueToName = [
        self::ERROR_TYPE_INVALID => 'ERROR_TYPE_INVALID',
        self::ERROR_TYPE_NONE => 'ERROR_TYPE_NONE',
        self::ERROR_TYPE_AVAILABLE_FUNDS => 'ERROR_TYPE_AVAILABLE_FUNDS',
        self::ERROR_TYPE_PAYLOAD => 'ERROR_TYPE_PAYLOAD',
        self::ERROR_TYPE_LIMIT => 'ERROR_TYPE_LIMIT',
        self::ERROR_TYPE_EXPIRED => 'ERROR_TYPE_EXPIRED',
        self::ERROR_TYPE_UNAVAILABLE => 'ERROR_TYPE_UNAVAILABLE',
        self::ERROR_TYPE_UNSUPPORTED => 'ERROR_TYPE_UNSUPPORTED',
        self::ERROR_TYPE_LOST => 'ERROR_TYPE_LOST',
        self::ERROR_TYPE_STOLEN => 'ERROR_TYPE_STOLEN',
        self::ERROR_TYPE_FRAUD => 'ERROR_TYPE_FRAUD',
        self::ERROR_TYPE_PICKUP => 'ERROR_TYPE_PICKUP',
        self::ERROR_TYPE_VELOCITY => 'ERROR_TYPE_VELOCITY',
        self::ERROR_TYPE_ADDRESS => 'ERROR_TYPE_ADDRESS',
        self::ERROR_TYPE_DUPLICATE => 'ERROR_TYPE_DUPLICATE',
        self::ERROR_TYPE_TIMEOUT => 'ERROR_TYPE_TIMEOUT',
        self::ERROR_TYPE_NOT_FOUND => 'ERROR_TYPE_NOT_FOUND',
        self::ERROR_TYPE_DISPUTED => 'ERROR_TYPE_DISPUTED',
        self::ERROR_TYPE_PERMISSION => 'ERROR_TYPE_PERMISSION',
        self::ERROR_TYPE_DECLINE => 'ERROR_TYPE_DECLINE',
        self::ERROR_TYPE_USER_INPUT => 'ERROR_TYPE_USER_INPUT',
        self::ERROR_TYPE_USER_DEVICE => 'ERROR_TYPE_USER_DEVICE',
        self::ERROR_TYPE_ALREADY_DONE => 'ERROR_TYPE_ALREADY_DONE',
        self::ERROR_TYPE_RETRY => 'ERROR_TYPE_RETRY',
        self::ERROR_TYPE_QUEUED => 'ERROR_TYPE_QUEUED',
        self::ERROR_TYPE_SYSTEM => 'ERROR_TYPE_SYSTEM',
        self::ERROR_TYPE_UNKNOWN => 'ERROR_TYPE_UNKNOWN',
        self::ERROR_TYPE_NOT_READY => 'ERROR_TYPE_NOT_READY',
        self::ERROR_TYPE_DISABLED => 'ERROR_TYPE_DISABLED',
        self::ERROR_TYPE_CVV => 'ERROR_TYPE_CVV',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}

