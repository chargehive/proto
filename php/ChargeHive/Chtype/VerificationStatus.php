<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# NO CHECKED-IN PROTOBUF GENCODE
# source: chargehive/chtype/enum.proto

namespace ChargeHive\Chtype;

use UnexpectedValueException;

/**
 * Protobuf type <code>chargehive.chtype.VerificationStatus</code>
 */
class VerificationStatus
{
    /**
     * Generated from protobuf enum <code>VERIFICATION_STATUS_INVALID = 0;</code>
     */
    const VERIFICATION_STATUS_INVALID = 0;
    /**
     * Generated from protobuf enum <code>VERIFICATION_STATUS_NOT_CHECKED = 1;</code>
     */
    const VERIFICATION_STATUS_NOT_CHECKED = 1;
    /**
     * Generated from protobuf enum <code>VERIFICATION_STATUS_PASSED = 2;</code>
     */
    const VERIFICATION_STATUS_PASSED = 2;
    /**
     * Generated from protobuf enum <code>VERIFICATION_STATUS_FAILED = 3;</code>
     */
    const VERIFICATION_STATUS_FAILED = 3;
    /**
     * Generated from protobuf enum <code>VERIFICATION_STATUS_CONTINUE = 4;</code>
     */
    const VERIFICATION_STATUS_CONTINUE = 4;

    private static $valueToName = [
        self::VERIFICATION_STATUS_INVALID => 'VERIFICATION_STATUS_INVALID',
        self::VERIFICATION_STATUS_NOT_CHECKED => 'VERIFICATION_STATUS_NOT_CHECKED',
        self::VERIFICATION_STATUS_PASSED => 'VERIFICATION_STATUS_PASSED',
        self::VERIFICATION_STATUS_FAILED => 'VERIFICATION_STATUS_FAILED',
        self::VERIFICATION_STATUS_CONTINUE => 'VERIFICATION_STATUS_CONTINUE',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}

