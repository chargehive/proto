// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: charge.proto

package chtype

import (
	fmt "fmt"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion2 // please upgrade the proto package

type ChargeMetaType int32

const (
	CHARGE_META_TYPE_INVALID ChargeMetaType = 0
	CHARGE_META_TYPE_SOURCE  ChargeMetaType = 1
	CHARGE_META_TYPE_APPEND  ChargeMetaType = 2
)

var ChargeMetaType_name = map[int32]string{
	0: "CHARGE_META_TYPE_INVALID",
	1: "CHARGE_META_TYPE_SOURCE",
	2: "CHARGE_META_TYPE_APPEND",
}

var ChargeMetaType_value = map[string]int32{
	"CHARGE_META_TYPE_INVALID": 0,
	"CHARGE_META_TYPE_SOURCE":  1,
	"CHARGE_META_TYPE_APPEND":  2,
}

func (x ChargeMetaType) String() string {
	return proto.EnumName(ChargeMetaType_name, int32(x))
}

func (ChargeMetaType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_5d0de23af59a36de, []int{0}
}

type ChargeIntent int32

const (
	CHARGE_INTENT_INVALID        ChargeIntent = 0
	CHARGE_INTENT_METHOD_ADD     ChargeIntent = 1
	CHARGE_INTENT_METHOD_REFRESH ChargeIntent = 2
	CHARGE_INTENT_METHOD_VERIFY  ChargeIntent = 3
	CHARGE_INTENT_CAPTURE        ChargeIntent = 4
	CHARGE_INTENT_REFUND         ChargeIntent = 5
)

var ChargeIntent_name = map[int32]string{
	0: "CHARGE_INTENT_INVALID",
	1: "CHARGE_INTENT_METHOD_ADD",
	2: "CHARGE_INTENT_METHOD_REFRESH",
	3: "CHARGE_INTENT_METHOD_VERIFY",
	4: "CHARGE_INTENT_CAPTURE",
	5: "CHARGE_INTENT_REFUND",
}

var ChargeIntent_value = map[string]int32{
	"CHARGE_INTENT_INVALID":        0,
	"CHARGE_INTENT_METHOD_ADD":     1,
	"CHARGE_INTENT_METHOD_REFRESH": 2,
	"CHARGE_INTENT_METHOD_VERIFY":  3,
	"CHARGE_INTENT_CAPTURE":        4,
	"CHARGE_INTENT_REFUND":         5,
}

func (x ChargeIntent) String() string {
	return proto.EnumName(ChargeIntent_name, int32(x))
}

func (ChargeIntent) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_5d0de23af59a36de, []int{1}
}

type ChargeEnvironment int32

const (
	CHARGE_ENVIRONMENT_INVALID   ChargeEnvironment = 0
	CHARGE_ENVIRONMENT_RETAIL    ChargeEnvironment = 1
	CHARGE_ENVIRONMENT_ECOMMERCE ChargeEnvironment = 2
	CHARGE_ENVIRONMENT_MOTO      ChargeEnvironment = 3
	CHARGE_ENVIRONMENT_RENEWAL   ChargeEnvironment = 4
)

var ChargeEnvironment_name = map[int32]string{
	0: "CHARGE_ENVIRONMENT_INVALID",
	1: "CHARGE_ENVIRONMENT_RETAIL",
	2: "CHARGE_ENVIRONMENT_ECOMMERCE",
	3: "CHARGE_ENVIRONMENT_MOTO",
	4: "CHARGE_ENVIRONMENT_RENEWAL",
}

var ChargeEnvironment_value = map[string]int32{
	"CHARGE_ENVIRONMENT_INVALID":   0,
	"CHARGE_ENVIRONMENT_RETAIL":    1,
	"CHARGE_ENVIRONMENT_ECOMMERCE": 2,
	"CHARGE_ENVIRONMENT_MOTO":      3,
	"CHARGE_ENVIRONMENT_RENEWAL":   4,
}

func (x ChargeEnvironment) String() string {
	return proto.EnumName(ChargeEnvironment_name, int32(x))
}

func (ChargeEnvironment) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_5d0de23af59a36de, []int{2}
}

type DeviceType int32

const (
	DEVICE_TYPE_INVALID  DeviceType = 0
	DEVICE_TYPE_MOBILE   DeviceType = 1
	DEVICE_TYPE_TABLET   DeviceType = 2
	DEVICE_TYPE_DESKTOP  DeviceType = 3
	DEVICE_TYPE_WEARABLE DeviceType = 4
	DEVICE_TYPE_CONSOLE  DeviceType = 5
	DEVICE_TYPE_VEHICLE  DeviceType = 6
)

var DeviceType_name = map[int32]string{
	0: "DEVICE_TYPE_INVALID",
	1: "DEVICE_TYPE_MOBILE",
	2: "DEVICE_TYPE_TABLET",
	3: "DEVICE_TYPE_DESKTOP",
	4: "DEVICE_TYPE_WEARABLE",
	5: "DEVICE_TYPE_CONSOLE",
	6: "DEVICE_TYPE_VEHICLE",
}

var DeviceType_value = map[string]int32{
	"DEVICE_TYPE_INVALID":  0,
	"DEVICE_TYPE_MOBILE":   1,
	"DEVICE_TYPE_TABLET":   2,
	"DEVICE_TYPE_DESKTOP":  3,
	"DEVICE_TYPE_WEARABLE": 4,
	"DEVICE_TYPE_CONSOLE":  5,
	"DEVICE_TYPE_VEHICLE":  6,
}

func (x DeviceType) String() string {
	return proto.EnumName(DeviceType_name, int32(x))
}

func (DeviceType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_5d0de23af59a36de, []int{3}
}

type StatementDescriptor struct {
	Message              string   `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	Phone                string   `protobuf:"bytes,2,opt,name=phone,proto3" json:"phone,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StatementDescriptor) Reset()         { *m = StatementDescriptor{} }
func (m *StatementDescriptor) String() string { return proto.CompactTextString(m) }
func (*StatementDescriptor) ProtoMessage()    {}
func (*StatementDescriptor) Descriptor() ([]byte, []int) {
	return fileDescriptor_5d0de23af59a36de, []int{0}
}
func (m *StatementDescriptor) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StatementDescriptor.Unmarshal(m, b)
}
func (m *StatementDescriptor) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StatementDescriptor.Marshal(b, m, deterministic)
}
func (m *StatementDescriptor) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StatementDescriptor.Merge(m, src)
}
func (m *StatementDescriptor) XXX_Size() int {
	return xxx_messageInfo_StatementDescriptor.Size(m)
}
func (m *StatementDescriptor) XXX_DiscardUnknown() {
	xxx_messageInfo_StatementDescriptor.DiscardUnknown(m)
}

var xxx_messageInfo_StatementDescriptor proto.InternalMessageInfo

func (m *StatementDescriptor) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *StatementDescriptor) GetPhone() string {
	if m != nil {
		return m.Phone
	}
	return ""
}

type Charge struct {
	ChargeId             string               `protobuf:"bytes,1,opt,name=charge_id,json=chargeId,proto3" json:"charge_id,omitempty"`
	Version              string               `protobuf:"bytes,2,opt,name=version,proto3" json:"version,omitempty"`
	Intent               ChargeIntent         `protobuf:"varint,3,opt,name=intent,proto3,enum=chtype.ChargeIntent" json:"intent,omitempty"`
	Contract             ContractType         `protobuf:"varint,4,opt,name=contract,proto3,enum=chtype.ContractType" json:"contract,omitempty"`
	Amount               *Amount              `protobuf:"bytes,5,opt,name=amount,proto3" json:"amount,omitempty"`
	PaymentMethodIds     []string             `protobuf:"bytes,6,rep,name=payment_method_ids,json=paymentMethodIds,proto3" json:"payment_method_ids,omitempty"`
	ExpiryTime           *timestamp.Timestamp `protobuf:"bytes,7,opt,name=expiry_time,json=expiryTime,proto3" json:"expiry_time,omitempty"`
	MerchantReference    string               `protobuf:"bytes,8,opt,name=merchant_reference,json=merchantReference,proto3" json:"merchant_reference,omitempty"`
	StatementDescriptor  *StatementDescriptor `protobuf:"bytes,9,opt,name=statement_descriptor,json=statementDescriptor,proto3" json:"statement_descriptor,omitempty"`
	References           map[string]string    `protobuf:"bytes,10,rep,name=references,proto3" json:"references,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Labels               []*Label             `protobuf:"bytes,11,rep,name=labels,proto3" json:"labels,omitempty"`
	ChargeKey            string               `protobuf:"bytes,12,opt,name=charge_key,json=chargeKey,proto3" json:"charge_key,omitempty"`
	UserLocale           string               `protobuf:"bytes,13,opt,name=user_locale,json=userLocale,proto3" json:"user_locale,omitempty"`
	UserLocation         string               `protobuf:"bytes,14,opt,name=user_location,json=userLocation,proto3" json:"user_location,omitempty"`
	Environment          ChargeEnvironment    `protobuf:"varint,15,opt,name=environment,proto3,enum=chtype.ChargeEnvironment" json:"environment,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *Charge) Reset()         { *m = Charge{} }
func (m *Charge) String() string { return proto.CompactTextString(m) }
func (*Charge) ProtoMessage()    {}
func (*Charge) Descriptor() ([]byte, []int) {
	return fileDescriptor_5d0de23af59a36de, []int{1}
}
func (m *Charge) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Charge.Unmarshal(m, b)
}
func (m *Charge) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Charge.Marshal(b, m, deterministic)
}
func (m *Charge) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Charge.Merge(m, src)
}
func (m *Charge) XXX_Size() int {
	return xxx_messageInfo_Charge.Size(m)
}
func (m *Charge) XXX_DiscardUnknown() {
	xxx_messageInfo_Charge.DiscardUnknown(m)
}

var xxx_messageInfo_Charge proto.InternalMessageInfo

func (m *Charge) GetChargeId() string {
	if m != nil {
		return m.ChargeId
	}
	return ""
}

func (m *Charge) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

func (m *Charge) GetIntent() ChargeIntent {
	if m != nil {
		return m.Intent
	}
	return CHARGE_INTENT_INVALID
}

func (m *Charge) GetContract() ContractType {
	if m != nil {
		return m.Contract
	}
	return CONTRACT_TYPE_INVALID
}

func (m *Charge) GetAmount() *Amount {
	if m != nil {
		return m.Amount
	}
	return nil
}

func (m *Charge) GetPaymentMethodIds() []string {
	if m != nil {
		return m.PaymentMethodIds
	}
	return nil
}

func (m *Charge) GetExpiryTime() *timestamp.Timestamp {
	if m != nil {
		return m.ExpiryTime
	}
	return nil
}

func (m *Charge) GetMerchantReference() string {
	if m != nil {
		return m.MerchantReference
	}
	return ""
}

func (m *Charge) GetStatementDescriptor() *StatementDescriptor {
	if m != nil {
		return m.StatementDescriptor
	}
	return nil
}

func (m *Charge) GetReferences() map[string]string {
	if m != nil {
		return m.References
	}
	return nil
}

func (m *Charge) GetLabels() []*Label {
	if m != nil {
		return m.Labels
	}
	return nil
}

func (m *Charge) GetChargeKey() string {
	if m != nil {
		return m.ChargeKey
	}
	return ""
}

func (m *Charge) GetUserLocale() string {
	if m != nil {
		return m.UserLocale
	}
	return ""
}

func (m *Charge) GetUserLocation() string {
	if m != nil {
		return m.UserLocation
	}
	return ""
}

func (m *Charge) GetEnvironment() ChargeEnvironment {
	if m != nil {
		return m.Environment
	}
	return CHARGE_ENVIRONMENT_INVALID
}

type ChargeItem struct {
	SubscriptionId       string               `protobuf:"bytes,1,opt,name=subscription_id,json=subscriptionId,proto3" json:"subscription_id,omitempty"`
	RenewalNumber        int32                `protobuf:"varint,2,opt,name=renewal_number,json=renewalNumber,proto3" json:"renewal_number,omitempty"`
	Duration             int64                `protobuf:"varint,3,opt,name=duration,proto3" json:"duration,omitempty"`
	StartDate            *timestamp.Timestamp `protobuf:"bytes,4,opt,name=start_date,json=startDate,proto3" json:"start_date,omitempty"`
	EndDate              *timestamp.Timestamp `protobuf:"bytes,5,opt,name=end_date,json=endDate,proto3" json:"end_date,omitempty"`
	ProductType          ProductType          `protobuf:"varint,6,opt,name=product_type,json=productType,proto3,enum=chtype.ProductType" json:"product_type,omitempty"`
	SkuType              SKUType              `protobuf:"varint,7,opt,name=sku_type,json=skuType,proto3,enum=chtype.SKUType" json:"sku_type,omitempty"`
	Delivery             *Delivery            `protobuf:"bytes,8,opt,name=delivery,proto3" json:"delivery,omitempty"`
	Quantity             int64                `protobuf:"varint,9,opt,name=quantity,proto3" json:"quantity,omitempty"`
	UnitPrice            *Amount              `protobuf:"bytes,10,opt,name=unit_price,json=unitPrice,proto3" json:"unit_price,omitempty"`
	TaxAmount            *Amount              `protobuf:"bytes,11,opt,name=tax_amount,json=taxAmount,proto3" json:"tax_amount,omitempty"`
	DiscountAmount       *Amount              `protobuf:"bytes,12,opt,name=discount_amount,json=discountAmount,proto3" json:"discount_amount,omitempty"`
	Name                 string               `protobuf:"bytes,13,opt,name=name,proto3" json:"name,omitempty"`
	Description          string               `protobuf:"bytes,14,opt,name=description,proto3" json:"description,omitempty"`
	ProductCode          string               `protobuf:"bytes,15,opt,name=product_code,json=productCode,proto3" json:"product_code,omitempty"`
	SkuCode              string               `protobuf:"bytes,16,opt,name=sku_code,json=skuCode,proto3" json:"sku_code,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *ChargeItem) Reset()         { *m = ChargeItem{} }
func (m *ChargeItem) String() string { return proto.CompactTextString(m) }
func (*ChargeItem) ProtoMessage()    {}
func (*ChargeItem) Descriptor() ([]byte, []int) {
	return fileDescriptor_5d0de23af59a36de, []int{2}
}
func (m *ChargeItem) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChargeItem.Unmarshal(m, b)
}
func (m *ChargeItem) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChargeItem.Marshal(b, m, deterministic)
}
func (m *ChargeItem) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChargeItem.Merge(m, src)
}
func (m *ChargeItem) XXX_Size() int {
	return xxx_messageInfo_ChargeItem.Size(m)
}
func (m *ChargeItem) XXX_DiscardUnknown() {
	xxx_messageInfo_ChargeItem.DiscardUnknown(m)
}

var xxx_messageInfo_ChargeItem proto.InternalMessageInfo

func (m *ChargeItem) GetSubscriptionId() string {
	if m != nil {
		return m.SubscriptionId
	}
	return ""
}

func (m *ChargeItem) GetRenewalNumber() int32 {
	if m != nil {
		return m.RenewalNumber
	}
	return 0
}

func (m *ChargeItem) GetDuration() int64 {
	if m != nil {
		return m.Duration
	}
	return 0
}

func (m *ChargeItem) GetStartDate() *timestamp.Timestamp {
	if m != nil {
		return m.StartDate
	}
	return nil
}

func (m *ChargeItem) GetEndDate() *timestamp.Timestamp {
	if m != nil {
		return m.EndDate
	}
	return nil
}

func (m *ChargeItem) GetProductType() ProductType {
	if m != nil {
		return m.ProductType
	}
	return PRODUCT_TYPE_INVALID
}

func (m *ChargeItem) GetSkuType() SKUType {
	if m != nil {
		return m.SkuType
	}
	return SKU_TYPE_INVALID
}

func (m *ChargeItem) GetDelivery() *Delivery {
	if m != nil {
		return m.Delivery
	}
	return nil
}

func (m *ChargeItem) GetQuantity() int64 {
	if m != nil {
		return m.Quantity
	}
	return 0
}

func (m *ChargeItem) GetUnitPrice() *Amount {
	if m != nil {
		return m.UnitPrice
	}
	return nil
}

func (m *ChargeItem) GetTaxAmount() *Amount {
	if m != nil {
		return m.TaxAmount
	}
	return nil
}

func (m *ChargeItem) GetDiscountAmount() *Amount {
	if m != nil {
		return m.DiscountAmount
	}
	return nil
}

func (m *ChargeItem) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ChargeItem) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *ChargeItem) GetProductCode() string {
	if m != nil {
		return m.ProductCode
	}
	return ""
}

func (m *ChargeItem) GetSkuCode() string {
	if m != nil {
		return m.SkuCode
	}
	return ""
}

type ChargeMeta struct {
	BillingAddress       *Address             `protobuf:"bytes,1,opt,name=billing_address,json=billingAddress,proto3" json:"billing_address,omitempty"`
	DeliveryAddress      *Address             `protobuf:"bytes,2,opt,name=delivery_address,json=deliveryAddress,proto3" json:"delivery_address,omitempty"`
	Items                []*ChargeItem        `protobuf:"bytes,3,rep,name=items,proto3" json:"items,omitempty"`
	Terms                string               `protobuf:"bytes,4,opt,name=terms,proto3" json:"terms,omitempty"`
	Note                 string               `protobuf:"bytes,5,opt,name=note,proto3" json:"note,omitempty"`
	MerchantMemo         string               `protobuf:"bytes,6,opt,name=merchant_memo,json=merchantMemo,proto3" json:"merchant_memo,omitempty"`
	InvoiceDate          *timestamp.Timestamp `protobuf:"bytes,7,opt,name=invoice_date,json=invoiceDate,proto3" json:"invoice_date,omitempty"`
	DueDate              *timestamp.Timestamp `protobuf:"bytes,8,opt,name=due_date,json=dueDate,proto3" json:"due_date,omitempty"`
	DiscountAmount       *Amount              `protobuf:"bytes,9,opt,name=discount_amount,json=discountAmount,proto3" json:"discount_amount,omitempty"`
	DeliveryAmount       *Amount              `protobuf:"bytes,10,opt,name=delivery_amount,json=deliveryAmount,proto3" json:"delivery_amount,omitempty"`
	TaxAmount            *Amount              `protobuf:"bytes,11,opt,name=tax_amount,json=taxAmount,proto3" json:"tax_amount,omitempty"`
	TotalAmount          *Amount              `protobuf:"bytes,12,opt,name=total_amount,json=totalAmount,proto3" json:"total_amount,omitempty"`
	Person               *Person              `protobuf:"bytes,13,opt,name=person,proto3" json:"person,omitempty"`
	Company              *Company             `protobuf:"bytes,14,opt,name=company,proto3" json:"company,omitempty"`
	IpAddress            string               `protobuf:"bytes,15,opt,name=ip_address,json=ipAddress,proto3" json:"ip_address,omitempty"`
	Delivery             *Delivery            `protobuf:"bytes,16,opt,name=delivery,proto3" json:"delivery,omitempty"`
	Device               *Device              `protobuf:"bytes,17,opt,name=device,proto3" json:"device,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *ChargeMeta) Reset()         { *m = ChargeMeta{} }
func (m *ChargeMeta) String() string { return proto.CompactTextString(m) }
func (*ChargeMeta) ProtoMessage()    {}
func (*ChargeMeta) Descriptor() ([]byte, []int) {
	return fileDescriptor_5d0de23af59a36de, []int{3}
}
func (m *ChargeMeta) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChargeMeta.Unmarshal(m, b)
}
func (m *ChargeMeta) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChargeMeta.Marshal(b, m, deterministic)
}
func (m *ChargeMeta) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChargeMeta.Merge(m, src)
}
func (m *ChargeMeta) XXX_Size() int {
	return xxx_messageInfo_ChargeMeta.Size(m)
}
func (m *ChargeMeta) XXX_DiscardUnknown() {
	xxx_messageInfo_ChargeMeta.DiscardUnknown(m)
}

var xxx_messageInfo_ChargeMeta proto.InternalMessageInfo

func (m *ChargeMeta) GetBillingAddress() *Address {
	if m != nil {
		return m.BillingAddress
	}
	return nil
}

func (m *ChargeMeta) GetDeliveryAddress() *Address {
	if m != nil {
		return m.DeliveryAddress
	}
	return nil
}

func (m *ChargeMeta) GetItems() []*ChargeItem {
	if m != nil {
		return m.Items
	}
	return nil
}

func (m *ChargeMeta) GetTerms() string {
	if m != nil {
		return m.Terms
	}
	return ""
}

func (m *ChargeMeta) GetNote() string {
	if m != nil {
		return m.Note
	}
	return ""
}

func (m *ChargeMeta) GetMerchantMemo() string {
	if m != nil {
		return m.MerchantMemo
	}
	return ""
}

func (m *ChargeMeta) GetInvoiceDate() *timestamp.Timestamp {
	if m != nil {
		return m.InvoiceDate
	}
	return nil
}

func (m *ChargeMeta) GetDueDate() *timestamp.Timestamp {
	if m != nil {
		return m.DueDate
	}
	return nil
}

func (m *ChargeMeta) GetDiscountAmount() *Amount {
	if m != nil {
		return m.DiscountAmount
	}
	return nil
}

func (m *ChargeMeta) GetDeliveryAmount() *Amount {
	if m != nil {
		return m.DeliveryAmount
	}
	return nil
}

func (m *ChargeMeta) GetTaxAmount() *Amount {
	if m != nil {
		return m.TaxAmount
	}
	return nil
}

func (m *ChargeMeta) GetTotalAmount() *Amount {
	if m != nil {
		return m.TotalAmount
	}
	return nil
}

func (m *ChargeMeta) GetPerson() *Person {
	if m != nil {
		return m.Person
	}
	return nil
}

func (m *ChargeMeta) GetCompany() *Company {
	if m != nil {
		return m.Company
	}
	return nil
}

func (m *ChargeMeta) GetIpAddress() string {
	if m != nil {
		return m.IpAddress
	}
	return ""
}

func (m *ChargeMeta) GetDelivery() *Delivery {
	if m != nil {
		return m.Delivery
	}
	return nil
}

func (m *ChargeMeta) GetDevice() *Device {
	if m != nil {
		return m.Device
	}
	return nil
}

type Delivery struct {
	Standard             DeliveryStandard `protobuf:"varint,1,opt,name=standard,proto3,enum=chtype.DeliveryStandard" json:"standard,omitempty"`
	Type                 DeliveryType     `protobuf:"varint,2,opt,name=type,proto3,enum=chtype.DeliveryType" json:"type,omitempty"`
	TrackingCode         string           `protobuf:"bytes,3,opt,name=tracking_code,json=trackingCode,proto3" json:"tracking_code,omitempty"`
	Courier              string           `protobuf:"bytes,4,opt,name=courier,proto3" json:"courier,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *Delivery) Reset()         { *m = Delivery{} }
func (m *Delivery) String() string { return proto.CompactTextString(m) }
func (*Delivery) ProtoMessage()    {}
func (*Delivery) Descriptor() ([]byte, []int) {
	return fileDescriptor_5d0de23af59a36de, []int{4}
}
func (m *Delivery) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Delivery.Unmarshal(m, b)
}
func (m *Delivery) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Delivery.Marshal(b, m, deterministic)
}
func (m *Delivery) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Delivery.Merge(m, src)
}
func (m *Delivery) XXX_Size() int {
	return xxx_messageInfo_Delivery.Size(m)
}
func (m *Delivery) XXX_DiscardUnknown() {
	xxx_messageInfo_Delivery.DiscardUnknown(m)
}

var xxx_messageInfo_Delivery proto.InternalMessageInfo

func (m *Delivery) GetStandard() DeliveryStandard {
	if m != nil {
		return m.Standard
	}
	return DELIVERY_STANDARD_INVALID
}

func (m *Delivery) GetType() DeliveryType {
	if m != nil {
		return m.Type
	}
	return DELIVERY_TYPE_INVALID
}

func (m *Delivery) GetTrackingCode() string {
	if m != nil {
		return m.TrackingCode
	}
	return ""
}

func (m *Delivery) GetCourier() string {
	if m != nil {
		return m.Courier
	}
	return ""
}

type Dimension struct {
	Width                int32    `protobuf:"varint,1,opt,name=width,proto3" json:"width,omitempty"`
	Height               int32    `protobuf:"varint,2,opt,name=height,proto3" json:"height,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Dimension) Reset()         { *m = Dimension{} }
func (m *Dimension) String() string { return proto.CompactTextString(m) }
func (*Dimension) ProtoMessage()    {}
func (*Dimension) Descriptor() ([]byte, []int) {
	return fileDescriptor_5d0de23af59a36de, []int{5}
}
func (m *Dimension) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Dimension.Unmarshal(m, b)
}
func (m *Dimension) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Dimension.Marshal(b, m, deterministic)
}
func (m *Dimension) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Dimension.Merge(m, src)
}
func (m *Dimension) XXX_Size() int {
	return xxx_messageInfo_Dimension.Size(m)
}
func (m *Dimension) XXX_DiscardUnknown() {
	xxx_messageInfo_Dimension.DiscardUnknown(m)
}

var xxx_messageInfo_Dimension proto.InternalMessageInfo

func (m *Dimension) GetWidth() int32 {
	if m != nil {
		return m.Width
	}
	return 0
}

func (m *Dimension) GetHeight() int32 {
	if m != nil {
		return m.Height
	}
	return 0
}

type Device struct {
	BrowserAcceptHeader  string     `protobuf:"bytes,1,opt,name=browser_accept_header,json=browserAcceptHeader,proto3" json:"browser_accept_header,omitempty"`
	ColorDepth           int32      `protobuf:"varint,2,opt,name=color_depth,json=colorDepth,proto3" json:"color_depth,omitempty"`
	JavaEnabled          bool       `protobuf:"varint,3,opt,name=java_enabled,json=javaEnabled,proto3" json:"java_enabled,omitempty"`
	JavascriptEnabled    bool       `protobuf:"varint,4,opt,name=javascript_enabled,json=javascriptEnabled,proto3" json:"javascript_enabled,omitempty"`
	Language             string     `protobuf:"bytes,5,opt,name=language,proto3" json:"language,omitempty"`
	Screen               *Dimension `protobuf:"bytes,6,opt,name=screen,proto3" json:"screen,omitempty"`
	ScreenAvailable      *Dimension `protobuf:"bytes,7,opt,name=screen_available,json=screenAvailable,proto3" json:"screen_available,omitempty"`
	WindowInner          *Dimension `protobuf:"bytes,8,opt,name=window_inner,json=windowInner,proto3" json:"window_inner,omitempty"`
	WindowOuter          *Dimension `protobuf:"bytes,9,opt,name=window_outer,json=windowOuter,proto3" json:"window_outer,omitempty"`
	TimezoneOffset       string     `protobuf:"bytes,10,opt,name=timezone_offset,json=timezoneOffset,proto3" json:"timezone_offset,omitempty"`
	UserAgent            string     `protobuf:"bytes,11,opt,name=user_agent,json=userAgent,proto3" json:"user_agent,omitempty"`
	IpAddress            string     `protobuf:"bytes,12,opt,name=ip_address,json=ipAddress,proto3" json:"ip_address,omitempty"`
	CookiesEnabled       bool       `protobuf:"varint,13,opt,name=cookies_enabled,json=cookiesEnabled,proto3" json:"cookies_enabled,omitempty"`
	FlashVersion         string     `protobuf:"bytes,14,opt,name=flash_version,json=flashVersion,proto3" json:"flash_version,omitempty"`
	IsTouch              bool       `protobuf:"varint,15,opt,name=is_touch,json=isTouch,proto3" json:"is_touch,omitempty"`
	Os                   string     `protobuf:"bytes,16,opt,name=os,proto3" json:"os,omitempty"`
	OsVersion            string     `protobuf:"bytes,17,opt,name=os_version,json=osVersion,proto3" json:"os_version,omitempty"`
	Browser              string     `protobuf:"bytes,18,opt,name=browser,proto3" json:"browser,omitempty"`
	BrowserVersion       string     `protobuf:"bytes,19,opt,name=browser_version,json=browserVersion,proto3" json:"browser_version,omitempty"`
	DeviceManufacturer   string     `protobuf:"bytes,20,opt,name=device_manufacturer,json=deviceManufacturer,proto3" json:"device_manufacturer,omitempty"`
	DeviceName           string     `protobuf:"bytes,21,opt,name=device_name,json=deviceName,proto3" json:"device_name,omitempty"`
	DeviceVersion        string     `protobuf:"bytes,22,opt,name=device_version,json=deviceVersion,proto3" json:"device_version,omitempty"`
	Fingerprint          string     `protobuf:"bytes,23,opt,name=fingerprint,proto3" json:"fingerprint,omitempty"`
	Type                 DeviceType `protobuf:"varint,24,opt,name=type,proto3,enum=chtype.DeviceType" json:"type,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *Device) Reset()         { *m = Device{} }
func (m *Device) String() string { return proto.CompactTextString(m) }
func (*Device) ProtoMessage()    {}
func (*Device) Descriptor() ([]byte, []int) {
	return fileDescriptor_5d0de23af59a36de, []int{6}
}
func (m *Device) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Device.Unmarshal(m, b)
}
func (m *Device) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Device.Marshal(b, m, deterministic)
}
func (m *Device) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Device.Merge(m, src)
}
func (m *Device) XXX_Size() int {
	return xxx_messageInfo_Device.Size(m)
}
func (m *Device) XXX_DiscardUnknown() {
	xxx_messageInfo_Device.DiscardUnknown(m)
}

var xxx_messageInfo_Device proto.InternalMessageInfo

func (m *Device) GetBrowserAcceptHeader() string {
	if m != nil {
		return m.BrowserAcceptHeader
	}
	return ""
}

func (m *Device) GetColorDepth() int32 {
	if m != nil {
		return m.ColorDepth
	}
	return 0
}

func (m *Device) GetJavaEnabled() bool {
	if m != nil {
		return m.JavaEnabled
	}
	return false
}

func (m *Device) GetJavascriptEnabled() bool {
	if m != nil {
		return m.JavascriptEnabled
	}
	return false
}

func (m *Device) GetLanguage() string {
	if m != nil {
		return m.Language
	}
	return ""
}

func (m *Device) GetScreen() *Dimension {
	if m != nil {
		return m.Screen
	}
	return nil
}

func (m *Device) GetScreenAvailable() *Dimension {
	if m != nil {
		return m.ScreenAvailable
	}
	return nil
}

func (m *Device) GetWindowInner() *Dimension {
	if m != nil {
		return m.WindowInner
	}
	return nil
}

func (m *Device) GetWindowOuter() *Dimension {
	if m != nil {
		return m.WindowOuter
	}
	return nil
}

func (m *Device) GetTimezoneOffset() string {
	if m != nil {
		return m.TimezoneOffset
	}
	return ""
}

func (m *Device) GetUserAgent() string {
	if m != nil {
		return m.UserAgent
	}
	return ""
}

func (m *Device) GetIpAddress() string {
	if m != nil {
		return m.IpAddress
	}
	return ""
}

func (m *Device) GetCookiesEnabled() bool {
	if m != nil {
		return m.CookiesEnabled
	}
	return false
}

func (m *Device) GetFlashVersion() string {
	if m != nil {
		return m.FlashVersion
	}
	return ""
}

func (m *Device) GetIsTouch() bool {
	if m != nil {
		return m.IsTouch
	}
	return false
}

func (m *Device) GetOs() string {
	if m != nil {
		return m.Os
	}
	return ""
}

func (m *Device) GetOsVersion() string {
	if m != nil {
		return m.OsVersion
	}
	return ""
}

func (m *Device) GetBrowser() string {
	if m != nil {
		return m.Browser
	}
	return ""
}

func (m *Device) GetBrowserVersion() string {
	if m != nil {
		return m.BrowserVersion
	}
	return ""
}

func (m *Device) GetDeviceManufacturer() string {
	if m != nil {
		return m.DeviceManufacturer
	}
	return ""
}

func (m *Device) GetDeviceName() string {
	if m != nil {
		return m.DeviceName
	}
	return ""
}

func (m *Device) GetDeviceVersion() string {
	if m != nil {
		return m.DeviceVersion
	}
	return ""
}

func (m *Device) GetFingerprint() string {
	if m != nil {
		return m.Fingerprint
	}
	return ""
}

func (m *Device) GetType() DeviceType {
	if m != nil {
		return m.Type
	}
	return DEVICE_TYPE_INVALID
}

func init() {
	proto.RegisterEnum("chtype.ChargeMetaType", ChargeMetaType_name, ChargeMetaType_value)
	proto.RegisterEnum("chtype.ChargeIntent", ChargeIntent_name, ChargeIntent_value)
	proto.RegisterEnum("chtype.ChargeEnvironment", ChargeEnvironment_name, ChargeEnvironment_value)
	proto.RegisterEnum("chtype.DeviceType", DeviceType_name, DeviceType_value)
	proto.RegisterType((*StatementDescriptor)(nil), "chtype.StatementDescriptor")
	proto.RegisterType((*Charge)(nil), "chtype.Charge")
	proto.RegisterMapType((map[string]string)(nil), "chtype.Charge.ReferencesEntry")
	proto.RegisterType((*ChargeItem)(nil), "chtype.ChargeItem")
	proto.RegisterType((*ChargeMeta)(nil), "chtype.ChargeMeta")
	proto.RegisterType((*Delivery)(nil), "chtype.Delivery")
	proto.RegisterType((*Dimension)(nil), "chtype.Dimension")
	proto.RegisterType((*Device)(nil), "chtype.Device")
}

func init() { proto.RegisterFile("charge.proto", fileDescriptor_5d0de23af59a36de) }

var fileDescriptor_5d0de23af59a36de = []byte{
	// 1872 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x58, 0xcf, 0x72, 0x1b, 0xc7,
	0xf1, 0x36, 0x00, 0x02, 0x04, 0x1a, 0x20, 0xb8, 0x1c, 0x52, 0xd2, 0x8a, 0xb2, 0x25, 0xfe, 0xe8,
	0x92, 0x4c, 0xab, 0x24, 0xea, 0x17, 0xc6, 0x49, 0x6c, 0x27, 0x4e, 0x15, 0x04, 0xac, 0x22, 0x94,
	0x88, 0x3f, 0x35, 0x84, 0xe8, 0x72, 0x2e, 0x5b, 0xc3, 0xdd, 0x21, 0xb0, 0x21, 0x76, 0x06, 0xde,
	0x9d, 0x25, 0x85, 0xbc, 0x43, 0x9e, 0x22, 0x95, 0x43, 0x8e, 0xb9, 0xe6, 0x92, 0x57, 0xc8, 0x2b,
	0xe4, 0x31, 0x72, 0x4b, 0xcd, 0xbf, 0x05, 0x08, 0x41, 0x56, 0x72, 0xdb, 0xfe, 0xfa, 0xeb, 0x19,
	0x4c, 0xcf, 0xd7, 0x3d, 0x4d, 0x42, 0x23, 0x98, 0x90, 0x64, 0x4c, 0x8f, 0x67, 0x09, 0x17, 0x1c,
	0x55, 0x82, 0x89, 0x98, 0xcf, 0xe8, 0xfe, 0xd6, 0x98, 0x32, 0x9a, 0x44, 0x81, 0x86, 0xf7, 0xb7,
	0x02, 0xce, 0x04, 0x09, 0x84, 0x31, 0x81, 0xb2, 0x2c, 0x36, 0xdf, 0xcf, 0xc7, 0x91, 0x98, 0x64,
	0x17, 0xc7, 0x01, 0x8f, 0x5f, 0x8c, 0xf9, 0x98, 0xbf, 0x50, 0xf0, 0x45, 0x76, 0xa9, 0x2c, 0x65,
	0xa8, 0x2f, 0x43, 0x7f, 0x34, 0xe6, 0x7c, 0x3c, 0xa5, 0x0b, 0x96, 0x88, 0x62, 0x9a, 0x0a, 0x12,
	0xcf, 0x34, 0xe1, 0xd0, 0x83, 0xdd, 0x33, 0x41, 0x04, 0x8d, 0x29, 0x13, 0x1d, 0x9a, 0x06, 0x49,
	0x34, 0x13, 0x3c, 0x41, 0x2e, 0x6c, 0xc6, 0x34, 0x4d, 0xc9, 0x98, 0xba, 0x85, 0x83, 0xc2, 0x51,
	0x0d, 0x5b, 0x13, 0xed, 0x41, 0x79, 0x36, 0xe1, 0x8c, 0xba, 0x45, 0x85, 0x6b, 0xe3, 0xf0, 0xdf,
	0x65, 0xa8, 0xb4, 0xd5, 0xc9, 0xd0, 0x03, 0xa8, 0xe9, 0x33, 0xfa, 0x51, 0x68, 0x82, 0xab, 0x1a,
	0xe8, 0x86, 0x72, 0xdd, 0x6b, 0x9a, 0xa4, 0x11, 0x67, 0x26, 0xde, 0x9a, 0xe8, 0x19, 0x54, 0x22,
	0x26, 0x28, 0x13, 0x6e, 0xe9, 0xa0, 0x70, 0xd4, 0x3c, 0xd9, 0x3b, 0xd6, 0xb9, 0x39, 0xd6, 0xcb,
	0x76, 0x95, 0x0f, 0x1b, 0x0e, 0xfa, 0x7f, 0xa8, 0xca, 0x1c, 0x25, 0x24, 0x10, 0xee, 0xc6, 0x0a,
	0xdf, 0xe0, 0xa3, 0xf9, 0x8c, 0xe2, 0x9c, 0x85, 0x9e, 0x40, 0x85, 0xc4, 0x3c, 0x63, 0xc2, 0x2d,
	0x1f, 0x14, 0x8e, 0xea, 0x27, 0x4d, 0xcb, 0x6f, 0x29, 0x14, 0x1b, 0x2f, 0x7a, 0x06, 0x68, 0x46,
	0xe6, 0x32, 0x1d, 0x7e, 0x4c, 0xc5, 0x84, 0x87, 0x7e, 0x14, 0xa6, 0x6e, 0xe5, 0xa0, 0x74, 0x54,
	0xc3, 0x8e, 0xf1, 0xf4, 0x94, 0xa3, 0x1b, 0xa6, 0xe8, 0xd7, 0x50, 0xa7, 0xef, 0x66, 0x51, 0x32,
	0xf7, 0x65, 0x62, 0xdd, 0x4d, 0xb5, 0xf4, 0xfe, 0xb1, 0xce, 0xfa, 0xb1, 0xcd, 0xfa, 0xf1, 0xc8,
	0x66, 0x1d, 0x83, 0xa6, 0x4b, 0x00, 0x3d, 0x07, 0x14, 0xd3, 0x24, 0x98, 0x10, 0x26, 0xfc, 0x84,
	0x5e, 0xd2, 0x84, 0xb2, 0x80, 0xba, 0x55, 0x95, 0x97, 0x1d, 0xeb, 0xc1, 0xd6, 0x81, 0xfa, 0xb0,
	0x97, 0xda, 0xab, 0xf2, 0xc3, 0xfc, 0xae, 0xdc, 0x9a, 0xda, 0xf4, 0x81, 0x3d, 0xcf, 0x9a, 0xeb,
	0xc4, 0xbb, 0xe9, 0x9a, 0x3b, 0xfe, 0x2d, 0x40, 0xbe, 0x6b, 0xea, 0xc2, 0x41, 0xe9, 0xa8, 0x7e,
	0xf2, 0xf0, 0x76, 0xd6, 0x8f, 0xf3, 0xdd, 0x53, 0x8f, 0x89, 0x64, 0x8e, 0x97, 0x22, 0xd0, 0x63,
	0xa8, 0x4c, 0xc9, 0x05, 0x9d, 0xa6, 0x6e, 0x5d, 0xc5, 0x6e, 0xd9, 0xd8, 0x53, 0x89, 0x62, 0xe3,
	0x44, 0x9f, 0x01, 0x18, 0x3d, 0x5c, 0xd1, 0xb9, 0xdb, 0x50, 0xa7, 0x33, 0x0a, 0x79, 0x43, 0xe7,
	0xe8, 0x11, 0xd4, 0xb3, 0x94, 0x26, 0xfe, 0x94, 0x07, 0x64, 0x4a, 0xdd, 0x2d, 0xe5, 0x07, 0x09,
	0x9d, 0x2a, 0x04, 0x7d, 0x0e, 0x5b, 0x39, 0x41, 0x48, 0xe1, 0x34, 0x15, 0xa5, 0x61, 0x29, 0x12,
	0x53, 0xf7, 0xc0, 0xae, 0xa3, 0x84, 0x33, 0x79, 0x48, 0x77, 0x5b, 0x49, 0xe2, 0xfe, 0xed, 0xc3,
	0x78, 0x0b, 0x02, 0x5e, 0x66, 0xef, 0x7f, 0x07, 0xdb, 0x2b, 0xe7, 0x44, 0x0e, 0x94, 0xe4, 0xaf,
	0xd5, 0xf2, 0x95, 0x9f, 0x52, 0xf7, 0xd7, 0x64, 0x9a, 0xe5, 0xba, 0x57, 0xc6, 0xb7, 0xc5, 0xaf,
	0x0b, 0x87, 0x7f, 0x2e, 0x03, 0x18, 0x91, 0x0a, 0x1a, 0xa3, 0x2f, 0x60, 0x3b, 0xcd, 0x2e, 0x74,
	0x96, 0x23, 0xce, 0x16, 0x55, 0xd0, 0x5c, 0x86, 0xbb, 0x21, 0x7a, 0x0c, 0xcd, 0x84, 0x32, 0x7a,
	0x43, 0xa6, 0x3e, 0xcb, 0xe2, 0x0b, 0x9a, 0xa8, 0xa5, 0xcb, 0x78, 0xcb, 0xa0, 0x7d, 0x05, 0xa2,
	0x7d, 0xa8, 0x86, 0x59, 0xa2, 0x8f, 0x2e, 0x4b, 0xa3, 0x84, 0x73, 0x1b, 0x7d, 0x03, 0x90, 0x0a,
	0x92, 0x08, 0x3f, 0x24, 0x82, 0xaa, 0x42, 0xf8, 0x69, 0xf5, 0xd5, 0x14, 0xbb, 0x43, 0x04, 0x45,
	0xbf, 0x80, 0x2a, 0x65, 0xa1, 0x0e, 0x2c, 0x7f, 0x34, 0x70, 0x93, 0xb2, 0x50, 0x85, 0xfd, 0x12,
	0x1a, 0xb3, 0x84, 0x87, 0x59, 0x20, 0x7c, 0x99, 0x5a, 0xb7, 0xa2, 0x32, 0xbd, 0x6b, 0x33, 0x3d,
	0xd4, 0x3e, 0x55, 0x7b, 0xf5, 0xd9, 0xc2, 0x40, 0x4f, 0xa1, 0x9a, 0x5e, 0x65, 0x3a, 0x66, 0x53,
	0xc5, 0x6c, 0xe7, 0x82, 0x7d, 0xf3, 0x56, 0xf1, 0x37, 0xd3, 0xab, 0x4c, 0x71, 0x9f, 0x41, 0x35,
	0xa4, 0xd3, 0xe8, 0x9a, 0x26, 0x73, 0x55, 0x0d, 0xf5, 0x13, 0xc7, 0x72, 0x3b, 0x06, 0xc7, 0x39,
	0x43, 0xe6, 0xe7, 0xc7, 0x8c, 0x30, 0x11, 0x89, 0xb9, 0x2a, 0x85, 0x12, 0xce, 0x6d, 0xf4, 0x1c,
	0x20, 0x63, 0x91, 0xf0, 0x67, 0x49, 0x14, 0x50, 0x17, 0xd6, 0x16, 0x7e, 0x4d, 0x32, 0x86, 0x92,
	0x20, 0xe9, 0x82, 0xbc, 0xf3, 0x4d, 0x9f, 0xa8, 0xaf, 0xa7, 0x0b, 0xf2, 0x4e, 0x7f, 0xa2, 0x5f,
	0xc1, 0x76, 0x18, 0xa5, 0x81, 0xfc, 0xb6, 0x31, 0x8d, 0xb5, 0x31, 0x4d, 0x4b, 0x33, 0x81, 0x08,
	0x36, 0x18, 0x89, 0xad, 0xd8, 0xd5, 0x37, 0x3a, 0x80, 0xba, 0xad, 0xe9, 0x85, 0xc8, 0x97, 0x21,
	0xf4, 0x7f, 0x8b, 0xd4, 0x07, 0x3c, 0xa4, 0x4a, 0xe4, 0xb5, 0x3c, 0xcb, 0x6d, 0x1e, 0x52, 0x74,
	0x5f, 0x67, 0x59, 0xb9, 0x1d, 0xdd, 0x5f, 0xd3, 0xab, 0x4c, 0xba, 0x0e, 0xff, 0x54, 0xb1, 0x2a,
	0xed, 0x51, 0x41, 0xd0, 0xd7, 0xb0, 0x7d, 0x11, 0x4d, 0xa7, 0x11, 0x1b, 0xfb, 0x24, 0x0c, 0x13,
	0x9a, 0xa6, 0x4a, 0xa5, 0xf5, 0xc5, 0xb5, 0xb4, 0x34, 0x8c, 0x9b, 0x86, 0x67, 0x6c, 0xf4, 0x2d,
	0x38, 0x36, 0xf7, 0x79, 0x68, 0x71, 0x7d, 0xe8, 0xb6, 0x25, 0xda, 0xd8, 0x23, 0x28, 0x47, 0x82,
	0xc6, 0xa9, 0x5b, 0x52, 0x1d, 0x03, 0xad, 0xf4, 0x78, 0x41, 0x63, 0xac, 0x09, 0xb2, 0xdc, 0x04,
	0x4d, 0xe2, 0x54, 0x89, 0xba, 0x86, 0xb5, 0xa1, 0x12, 0xc7, 0x8d, 0x60, 0x65, 0xe2, 0xb8, 0x50,
	0xfd, 0x21, 0xef, 0xa2, 0x31, 0x8d, 0xb9, 0x92, 0x64, 0x0d, 0x37, 0x2c, 0xd8, 0xa3, 0x31, 0x47,
	0xdf, 0x41, 0x23, 0x62, 0xd7, 0x3c, 0x0a, 0xa8, 0x56, 0xfc, 0xc7, 0x1b, 0x75, 0xdd, 0xf0, 0x6d,
	0xb1, 0x84, 0x99, 0x09, 0xad, 0x7e, 0xbc, 0x58, 0xc2, 0x4c, 0x87, 0xad, 0x11, 0x48, 0xed, 0xbf,
	0x12, 0x88, 0x0c, 0xcc, 0x73, 0xac, 0x03, 0xe1, 0x03, 0x81, 0x36, 0xc3, 0x3a, 0xf0, 0x7f, 0x54,
	0xf0, 0xcf, 0xa0, 0x21, 0xb8, 0x20, 0xd3, 0x9f, 0x96, 0x6f, 0x5d, 0x71, 0x4c, 0xc8, 0x13, 0xa8,
	0xcc, 0x68, 0x92, 0x72, 0xa6, 0xd4, 0xbb, 0x44, 0x1e, 0x2a, 0x14, 0x1b, 0x2f, 0xfa, 0x12, 0x36,
	0x03, 0x1e, 0xcf, 0x08, 0x9b, 0x2b, 0x2d, 0x2f, 0xa9, 0xa3, 0xad, 0x61, 0x6c, 0xfd, 0xf2, 0x85,
	0x88, 0x66, 0xb9, 0x96, 0xb4, 0xac, 0x6b, 0xd1, 0xcc, 0x8a, 0x66, 0xb9, 0x1d, 0x38, 0x1f, 0x6d,
	0x07, 0x4f, 0xa0, 0x12, 0xd2, 0x6b, 0x59, 0xee, 0x3b, 0xb7, 0x7f, 0x5f, 0x47, 0xa1, 0xd8, 0x78,
	0x0f, 0xff, 0x5a, 0x80, 0xaa, 0x0d, 0x47, 0x5f, 0x41, 0x35, 0x15, 0x84, 0x85, 0x24, 0xd1, 0xcd,
	0xba, 0x79, 0xe2, 0xae, 0x6e, 0x71, 0x66, 0xfc, 0x38, 0x67, 0xa2, 0x23, 0xd8, 0x50, 0xfd, 0xac,
	0x78, 0x7b, 0x00, 0xb1, 0x11, 0xaa, 0xa9, 0x29, 0x86, 0xd4, 0xa8, 0x9c, 0x42, 0xae, 0x64, 0xb9,
	0xa9, 0xe2, 0x2c, 0x69, 0x8d, 0x5a, 0x50, 0x15, 0xaf, 0x2b, 0x33, 0x96, 0x25, 0x11, 0x4d, 0x8c,
	0xe8, 0xad, 0x79, 0xf8, 0x0d, 0xd4, 0x3a, 0x51, 0x4c, 0x99, 0x1a, 0x94, 0xf6, 0xa0, 0x7c, 0x13,
	0x85, 0x62, 0xa2, 0x7e, 0x68, 0x19, 0x6b, 0x03, 0xdd, 0x85, 0xca, 0x84, 0x46, 0xe3, 0x89, 0x30,
	0x8f, 0x88, 0xb1, 0x0e, 0xff, 0xb2, 0x09, 0x15, 0x7d, 0x72, 0x74, 0x02, 0x77, 0x2e, 0x12, 0x7e,
	0x23, 0xdf, 0x52, 0x12, 0x04, 0x74, 0x26, 0xfc, 0x09, 0x25, 0x21, 0x4d, 0xcc, 0xf3, 0xb4, 0x6b,
	0x9c, 0x2d, 0xe5, 0x7b, 0xad, 0x5c, 0xf2, 0x75, 0x0e, 0xf8, 0x94, 0x27, 0x7e, 0x48, 0x67, 0x62,
	0x62, 0xd6, 0x06, 0x05, 0x75, 0x24, 0x22, 0x9b, 0xd2, 0x1f, 0xc8, 0x35, 0xf1, 0x29, 0x23, 0x17,
	0x53, 0x1a, 0xaa, 0x83, 0x55, 0x71, 0x5d, 0x62, 0x9e, 0x86, 0xe4, 0x98, 0x23, 0x4d, 0xdd, 0xc8,
	0x72, 0xe2, 0x86, 0x22, 0xee, 0x2c, 0x3c, 0x96, 0xbe, 0x0f, 0xd5, 0x29, 0x61, 0xe3, 0x4c, 0xce,
	0x9e, 0xba, 0xce, 0x73, 0x1b, 0x7d, 0x09, 0x95, 0x34, 0x48, 0x28, 0x65, 0xaa, 0xc8, 0xeb, 0x27,
	0x3b, 0x79, 0xce, 0x6d, 0x7a, 0xb0, 0x21, 0xa0, 0xdf, 0x80, 0xa3, 0xbf, 0x7c, 0x72, 0x4d, 0xa2,
	0xa9, 0x5c, 0xdb, 0x54, 0xfd, 0x9a, 0xa0, 0x6d, 0x4d, 0x6d, 0x59, 0x26, 0xfa, 0x0a, 0x1a, 0x37,
	0x11, 0x0b, 0xf9, 0x8d, 0x1f, 0x31, 0x46, 0x13, 0x53, 0xf4, 0x6b, 0x22, 0xeb, 0x9a, 0xd6, 0x95,
	0xac, 0xa5, 0x28, 0x9e, 0x09, 0x6a, 0x27, 0xb3, 0x0f, 0x47, 0x0d, 0x24, 0x4b, 0x0e, 0x0c, 0x72,
	0x78, 0xfc, 0x23, 0x67, 0xd4, 0xe7, 0x97, 0x97, 0x29, 0xd5, 0xc5, 0x5e, 0xc3, 0x4d, 0x0b, 0x0f,
	0x14, 0x2a, 0xeb, 0x44, 0x4d, 0x42, 0x64, 0x4c, 0x4d, 0x71, 0xd7, 0x70, 0x4d, 0x22, 0x2d, 0x09,
	0xac, 0x94, 0x51, 0x63, 0xb5, 0x8c, 0xbe, 0x80, 0xed, 0x80, 0xf3, 0xab, 0x88, 0xa6, 0xf9, 0x1d,
	0x6c, 0xa9, 0x3b, 0x68, 0x1a, 0xd8, 0x5e, 0xc0, 0xe7, 0xb0, 0x75, 0x39, 0x25, 0xe9, 0xc4, 0xb7,
	0x93, 0xba, 0x19, 0xb8, 0x14, 0x78, 0x6e, 0xc6, 0xf5, 0xfb, 0x50, 0x8d, 0x52, 0x5f, 0xf0, 0x2c,
	0x98, 0xa8, 0x8a, 0xad, 0xe2, 0xcd, 0x28, 0x1d, 0x49, 0x13, 0x35, 0xa1, 0xc8, 0x53, 0xf3, 0xfc,
	0x14, 0xb9, 0x1a, 0x00, 0x79, 0x9a, 0x2f, 0xb6, 0xa3, 0x7f, 0x17, 0x4f, 0xed, 0x4a, 0x2e, 0x6c,
	0x1a, 0xe5, 0xb9, 0x48, 0xcb, 0xde, 0x98, 0xf2, 0x17, 0x5b, 0xc1, 0xda, 0xe8, 0x5d, 0x9d, 0x18,
	0x03, 0xdb, 0x25, 0x5e, 0xc0, 0xae, 0xae, 0x6a, 0x3f, 0x26, 0x2c, 0xbb, 0x24, 0x81, 0xc8, 0x12,
	0x9a, 0xb8, 0x7b, 0x8a, 0x8c, 0xb4, 0xab, 0xb7, 0xe4, 0x91, 0xb2, 0x36, 0x01, 0xea, 0x1d, 0xbe,
	0xa3, 0x87, 0x4e, 0x0d, 0xf5, 0xe5, 0x6b, 0xfc, 0x18, 0x9a, 0x86, 0x60, 0x77, 0xbe, 0xab, 0x38,
	0x5b, 0x1a, 0xb5, 0x1b, 0x1f, 0x40, 0xfd, 0x32, 0x62, 0x63, 0x9a, 0xcc, 0x92, 0x88, 0x09, 0xf7,
	0x9e, 0x7e, 0x91, 0x97, 0x20, 0xf4, 0xc4, 0xf4, 0x08, 0x57, 0xf5, 0x08, 0x74, 0xbb, 0x19, 0x2d,
	0x3a, 0xc4, 0xd3, 0x09, 0x34, 0x17, 0xaf, 0xb3, 0x9a, 0x82, 0x3e, 0x05, 0xb7, 0xfd, 0xba, 0x85,
	0x7f, 0xe7, 0xf9, 0x3d, 0x6f, 0xd4, 0xf2, 0x47, 0x3f, 0x0c, 0x3d, 0xbf, 0xdb, 0x3f, 0x6f, 0x9d,
	0x76, 0x3b, 0xce, 0x27, 0xe8, 0x01, 0xdc, 0x7b, 0xcf, 0x7b, 0x36, 0x78, 0x8b, 0xdb, 0x9e, 0x53,
	0x58, 0xeb, 0x6c, 0x0d, 0x87, 0x5e, 0xbf, 0xe3, 0x14, 0x9f, 0xfe, 0xa3, 0x00, 0x8d, 0xe5, 0xbf,
	0xa9, 0xd0, 0x7d, 0xb8, 0x63, 0xd8, 0xdd, 0xfe, 0xc8, 0xeb, 0x8f, 0x96, 0x76, 0x59, 0xfc, 0x06,
	0xe3, 0xea, 0x79, 0xa3, 0xd7, 0x83, 0x8e, 0xdf, 0xea, 0x74, 0x9c, 0x02, 0x3a, 0x80, 0x4f, 0xd7,
	0x7a, 0xb1, 0xf7, 0x0a, 0x7b, 0x67, 0xaf, 0x9d, 0x22, 0x7a, 0x04, 0x0f, 0xd6, 0x32, 0xce, 0x3d,
	0xdc, 0x7d, 0xf5, 0x83, 0x53, 0x7a, 0x7f, 0xef, 0x76, 0x6b, 0x38, 0x7a, 0x8b, 0x3d, 0x67, 0x03,
	0xb9, 0xb0, 0x77, 0xdb, 0x85, 0xbd, 0x57, 0x6f, 0xfb, 0x1d, 0xa7, 0xfc, 0xf4, 0x6f, 0x05, 0xd8,
	0x79, 0x6f, 0xa4, 0x47, 0x0f, 0x61, 0xdf, 0xf0, 0xbd, 0xfe, 0x79, 0x17, 0x0f, 0xfa, 0xbd, 0xdb,
	0x67, 0xf9, 0x0c, 0xee, 0xaf, 0xf1, 0x63, 0x6f, 0xd4, 0xea, 0x9e, 0xde, 0x3a, 0xcc, 0xb2, 0xdb,
	0x6b, 0x0f, 0x7a, 0x3d, 0x4f, 0x66, 0xb5, 0xb8, 0x94, 0xd5, 0x65, 0x46, 0x6f, 0x30, 0x1a, 0x38,
	0xa5, 0x0f, 0xec, 0x8e, 0xbd, 0xbe, 0xf7, 0x7d, 0xeb, 0xd4, 0xd9, 0x78, 0xfa, 0xf7, 0x02, 0xc0,
	0xe2, 0xd2, 0xd1, 0x3d, 0xd8, 0xed, 0x78, 0xe7, 0xdd, 0xb6, 0xb7, 0x7a, 0xaf, 0x77, 0x01, 0x2d,
	0x3b, 0x7a, 0x83, 0x97, 0xdd, 0x53, 0x79, 0xa5, 0x2b, 0xf8, 0xa8, 0xf5, 0xf2, 0xd4, 0x1b, 0x39,
	0xc5, 0xd5, 0x85, 0x3a, 0xde, 0xd9, 0x9b, 0xd1, 0x60, 0xe8, 0x94, 0x64, 0xfa, 0x96, 0x1d, 0xdf,
	0x7b, 0x2d, 0x2c, 0x63, 0x9c, 0x8d, 0xd5, 0x90, 0xf6, 0xa0, 0x7f, 0x36, 0x38, 0xf5, 0x9c, 0xf2,
	0xaa, 0xe3, 0xdc, 0x7b, 0xdd, 0x6d, 0x9f, 0x7a, 0x4e, 0xe5, 0xe5, 0xb3, 0x7f, 0xfe, 0xeb, 0xe1,
	0x27, 0xd0, 0x0c, 0x78, 0x7c, 0xac, 0xff, 0x70, 0x9b, 0x44, 0xd7, 0xf4, 0x65, 0x03, 0xd3, 0x1f,
	0x33, 0x9a, 0x8a, 0xa1, 0x9c, 0x80, 0x86, 0x85, 0xdf, 0x9b, 0x7f, 0x66, 0x5c, 0x54, 0xd4, 0x48,
	0xf4, 0xf3, 0xff, 0x04, 0x00, 0x00, 0xff, 0xff, 0xae, 0xb9, 0x33, 0xde, 0xeb, 0x10, 0x00, 0x00,
}
