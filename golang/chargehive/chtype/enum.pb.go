// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: chargehive/chtype/enum.proto

package chtype

import (
	fmt "fmt"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	golang_proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = golang_proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type Status int32

const (
	STATUS_INVALID Status = 0
	//Pre Setup 1-9
	STATUS_PENDING Status = 1
	//Setup 10-29
	STATUS_SETUP        Status = 10
	STATUS_PROVISIONING Status = 20
	//Active 30-49
	STATUS_ACTIVE Status = 30
	//Inactive 50-69
	STATUS_SUSPENDED Status = 50
	STATUS_CANCELLED Status = 60
	//Unavailable 70+
	STATUS_ARCHIVED Status = 70
	STATUS_DELETED  Status = 90
)

var Status_name = map[int32]string{
	0:  "STATUS_INVALID",
	1:  "STATUS_PENDING",
	10: "STATUS_SETUP",
	20: "STATUS_PROVISIONING",
	30: "STATUS_ACTIVE",
	50: "STATUS_SUSPENDED",
	60: "STATUS_CANCELLED",
	70: "STATUS_ARCHIVED",
	90: "STATUS_DELETED",
}

var Status_value = map[string]int32{
	"STATUS_INVALID":      0,
	"STATUS_PENDING":      1,
	"STATUS_SETUP":        10,
	"STATUS_PROVISIONING": 20,
	"STATUS_ACTIVE":       30,
	"STATUS_SUSPENDED":    50,
	"STATUS_CANCELLED":    60,
	"STATUS_ARCHIVED":     70,
	"STATUS_DELETED":      90,
}

func (x Status) String() string {
	return proto.EnumName(Status_name, int32(x))
}

func (Status) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_79326afc23833508, []int{0}
}

type ActorType int32

const (
	ACTOR_TYPE_INVALID           ActorType = 0
	ACTOR_TYPE_CONSUMER          ActorType = 1
	ACTOR_TYPE_MERCHANT          ActorType = 2
	ACTOR_TYPE_CHARGEHIVE        ActorType = 3
	ACTOR_TYPE_WALLET            ActorType = 4
	ACTOR_TYPE_CONNECTOR         ActorType = 5
	ACTOR_TYPE_PAYMENT_PROCESSOR ActorType = 6
	ACTOR_TYPE_PAYMENT_NETWORK   ActorType = 7
	ACTOR_TYPE_ACQUIRING_BANK    ActorType = 8
	ACTOR_TYPE_ISSUING_BANK      ActorType = 9
	ACTOR_TYPE_RECOVERY_AGENT    ActorType = 10
	ACTOR_TYPE_EXCHANGE          ActorType = 11
	ACTOR_TYPE_POLICY            ActorType = 12
)

var ActorType_name = map[int32]string{
	0:  "ACTOR_TYPE_INVALID",
	1:  "ACTOR_TYPE_CONSUMER",
	2:  "ACTOR_TYPE_MERCHANT",
	3:  "ACTOR_TYPE_CHARGEHIVE",
	4:  "ACTOR_TYPE_WALLET",
	5:  "ACTOR_TYPE_CONNECTOR",
	6:  "ACTOR_TYPE_PAYMENT_PROCESSOR",
	7:  "ACTOR_TYPE_PAYMENT_NETWORK",
	8:  "ACTOR_TYPE_ACQUIRING_BANK",
	9:  "ACTOR_TYPE_ISSUING_BANK",
	10: "ACTOR_TYPE_RECOVERY_AGENT",
	11: "ACTOR_TYPE_EXCHANGE",
	12: "ACTOR_TYPE_POLICY",
}

var ActorType_value = map[string]int32{
	"ACTOR_TYPE_INVALID":           0,
	"ACTOR_TYPE_CONSUMER":          1,
	"ACTOR_TYPE_MERCHANT":          2,
	"ACTOR_TYPE_CHARGEHIVE":        3,
	"ACTOR_TYPE_WALLET":            4,
	"ACTOR_TYPE_CONNECTOR":         5,
	"ACTOR_TYPE_PAYMENT_PROCESSOR": 6,
	"ACTOR_TYPE_PAYMENT_NETWORK":   7,
	"ACTOR_TYPE_ACQUIRING_BANK":    8,
	"ACTOR_TYPE_ISSUING_BANK":      9,
	"ACTOR_TYPE_RECOVERY_AGENT":    10,
	"ACTOR_TYPE_EXCHANGE":          11,
	"ACTOR_TYPE_POLICY":            12,
}

func (x ActorType) String() string {
	return proto.EnumName(ActorType_name, int32(x))
}

func (ActorType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_79326afc23833508, []int{1}
}

type HandlerType int32

const (
	HANDLER_TYPE_INVALID     HandlerType = 0
	HANDLER_TYPE_WEB         HandlerType = 1
	HANDLER_TYPE_CLI         HandlerType = 2
	HANDLER_TYPE_API         HandlerType = 3
	HANDLER_TYPE_MOBILE      HandlerType = 4
	HANDLER_TYPE_PASSTHROUGH HandlerType = 5
)

var HandlerType_name = map[int32]string{
	0: "HANDLER_TYPE_INVALID",
	1: "HANDLER_TYPE_WEB",
	2: "HANDLER_TYPE_CLI",
	3: "HANDLER_TYPE_API",
	4: "HANDLER_TYPE_MOBILE",
	5: "HANDLER_TYPE_PASSTHROUGH",
}

var HandlerType_value = map[string]int32{
	"HANDLER_TYPE_INVALID":     0,
	"HANDLER_TYPE_WEB":         1,
	"HANDLER_TYPE_CLI":         2,
	"HANDLER_TYPE_API":         3,
	"HANDLER_TYPE_MOBILE":      4,
	"HANDLER_TYPE_PASSTHROUGH": 5,
}

func (x HandlerType) String() string {
	return proto.EnumName(HandlerType_name, int32(x))
}

func (HandlerType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_79326afc23833508, []int{2}
}

type TransactionType int32

const (
	TRANSACTION_TYPE_INVALID   TransactionType = 0
	TRANSACTION_TYPE_AUTHORIZE TransactionType = 1
	TRANSACTION_TYPE_CAPTURE   TransactionType = 2
	TRANSACTION_TYPE_REFUND    TransactionType = 3
	TRANSACTION_TYPE_CANCEL    TransactionType = 4
	TRANSACTION_TYPE_DISPUTE   TransactionType = 5
	TRANSACTION_TYPE_VERIFY    TransactionType = 6
	TRANSACTION_TYPE_EXPIRED   TransactionType = 7
	TRANSACTION_TYPE_INTERNAL  TransactionType = 99
)

var TransactionType_name = map[int32]string{
	0:  "TRANSACTION_TYPE_INVALID",
	1:  "TRANSACTION_TYPE_AUTHORIZE",
	2:  "TRANSACTION_TYPE_CAPTURE",
	3:  "TRANSACTION_TYPE_REFUND",
	4:  "TRANSACTION_TYPE_CANCEL",
	5:  "TRANSACTION_TYPE_DISPUTE",
	6:  "TRANSACTION_TYPE_VERIFY",
	7:  "TRANSACTION_TYPE_EXPIRED",
	99: "TRANSACTION_TYPE_INTERNAL",
}

var TransactionType_value = map[string]int32{
	"TRANSACTION_TYPE_INVALID":   0,
	"TRANSACTION_TYPE_AUTHORIZE": 1,
	"TRANSACTION_TYPE_CAPTURE":   2,
	"TRANSACTION_TYPE_REFUND":    3,
	"TRANSACTION_TYPE_CANCEL":    4,
	"TRANSACTION_TYPE_DISPUTE":   5,
	"TRANSACTION_TYPE_VERIFY":    6,
	"TRANSACTION_TYPE_EXPIRED":   7,
	"TRANSACTION_TYPE_INTERNAL":  99,
}

func (x TransactionType) String() string {
	return proto.EnumName(TransactionType_name, int32(x))
}

func (TransactionType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_79326afc23833508, []int{3}
}

type TransactionSubType int32

const (
	TRANSACTION_SUB_TYPE_INVALID      TransactionSubType = 0
	TRANSACTION_SUB_TYPE_IDENTIFY     TransactionSubType = 1
	TRANSACTION_SUB_TYPE_CHALLENGE    TransactionSubType = 2
	TRANSACTION_SUB_TYPE_CAPTURE_AUTH TransactionSubType = 3
	TRANSACTION_SUB_TYPE_NONE         TransactionSubType = 4
)

var TransactionSubType_name = map[int32]string{
	0: "TRANSACTION_SUB_TYPE_INVALID",
	1: "TRANSACTION_SUB_TYPE_IDENTIFY",
	2: "TRANSACTION_SUB_TYPE_CHALLENGE",
	3: "TRANSACTION_SUB_TYPE_CAPTURE_AUTH",
	4: "TRANSACTION_SUB_TYPE_NONE",
}

var TransactionSubType_value = map[string]int32{
	"TRANSACTION_SUB_TYPE_INVALID":      0,
	"TRANSACTION_SUB_TYPE_IDENTIFY":     1,
	"TRANSACTION_SUB_TYPE_CHALLENGE":    2,
	"TRANSACTION_SUB_TYPE_CAPTURE_AUTH": 3,
	"TRANSACTION_SUB_TYPE_NONE":         4,
}

func (x TransactionSubType) String() string {
	return proto.EnumName(TransactionSubType_name, int32(x))
}

func (TransactionSubType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_79326afc23833508, []int{4}
}

type PaymentMethodType int32

const (
	PAYMENT_METHOD_TYPE_INVALID        PaymentMethodType = 0
	PAYMENT_METHOD_TYPE_CARD           PaymentMethodType = 1
	PAYMENT_METHOD_TYPE_DIGITALWALLET  PaymentMethodType = 2
	PAYMENT_METHOD_TYPE_DIRECTDEBIT    PaymentMethodType = 3
	PAYMENT_METHOD_TYPE_CRYPTOCURRENCY PaymentMethodType = 4
)

var PaymentMethodType_name = map[int32]string{
	0: "PAYMENT_METHOD_TYPE_INVALID",
	1: "PAYMENT_METHOD_TYPE_CARD",
	2: "PAYMENT_METHOD_TYPE_DIGITALWALLET",
	3: "PAYMENT_METHOD_TYPE_DIRECTDEBIT",
	4: "PAYMENT_METHOD_TYPE_CRYPTOCURRENCY",
}

var PaymentMethodType_value = map[string]int32{
	"PAYMENT_METHOD_TYPE_INVALID":        0,
	"PAYMENT_METHOD_TYPE_CARD":           1,
	"PAYMENT_METHOD_TYPE_DIGITALWALLET":  2,
	"PAYMENT_METHOD_TYPE_DIRECTDEBIT":    3,
	"PAYMENT_METHOD_TYPE_CRYPTOCURRENCY": 4,
}

func (x PaymentMethodType) String() string {
	return proto.EnumName(PaymentMethodType_name, int32(x))
}

func (PaymentMethodType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_79326afc23833508, []int{5}
}

type PaymentMethodProvider int32

const (
	PAYMENT_METHOD_PROVIDER_INVALID   PaymentMethodProvider = 0
	PAYMENT_METHOD_PROVIDER_FORM      PaymentMethodProvider = 1
	PAYMENT_METHOD_PROVIDER_PAYPAL    PaymentMethodProvider = 2
	PAYMENT_METHOD_PROVIDER_APPLEPAY  PaymentMethodProvider = 3
	PAYMENT_METHOD_PROVIDER_GOOGLEPAY PaymentMethodProvider = 4
	PAYMENT_METHOD_PROVIDER_AMAZONPAY PaymentMethodProvider = 5
)

var PaymentMethodProvider_name = map[int32]string{
	0: "PAYMENT_METHOD_PROVIDER_INVALID",
	1: "PAYMENT_METHOD_PROVIDER_FORM",
	2: "PAYMENT_METHOD_PROVIDER_PAYPAL",
	3: "PAYMENT_METHOD_PROVIDER_APPLEPAY",
	4: "PAYMENT_METHOD_PROVIDER_GOOGLEPAY",
	5: "PAYMENT_METHOD_PROVIDER_AMAZONPAY",
}

var PaymentMethodProvider_value = map[string]int32{
	"PAYMENT_METHOD_PROVIDER_INVALID":   0,
	"PAYMENT_METHOD_PROVIDER_FORM":      1,
	"PAYMENT_METHOD_PROVIDER_PAYPAL":    2,
	"PAYMENT_METHOD_PROVIDER_APPLEPAY":  3,
	"PAYMENT_METHOD_PROVIDER_GOOGLEPAY": 4,
	"PAYMENT_METHOD_PROVIDER_AMAZONPAY": 5,
}

func (x PaymentMethodProvider) String() string {
	return proto.EnumName(PaymentMethodProvider_name, int32(x))
}

func (PaymentMethodProvider) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_79326afc23833508, []int{6}
}

type PaymentMethodInputType int32

const (
	INPUT_TYPE_INVALID  PaymentMethodInputType = 0
	INPUT_TYPE_PHYSICAL PaymentMethodInputType = 1
	INPUT_TYPE_VIRTUAL  PaymentMethodInputType = 2
	INPUT_TYPE_PROXY    PaymentMethodInputType = 3
)

var PaymentMethodInputType_name = map[int32]string{
	0: "INPUT_TYPE_INVALID",
	1: "INPUT_TYPE_PHYSICAL",
	2: "INPUT_TYPE_VIRTUAL",
	3: "INPUT_TYPE_PROXY",
}

var PaymentMethodInputType_value = map[string]int32{
	"INPUT_TYPE_INVALID":  0,
	"INPUT_TYPE_PHYSICAL": 1,
	"INPUT_TYPE_VIRTUAL":  2,
	"INPUT_TYPE_PROXY":    3,
}

func (x PaymentMethodInputType) String() string {
	return proto.EnumName(PaymentMethodInputType_name, int32(x))
}

func (PaymentMethodInputType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_79326afc23833508, []int{7}
}

type ContractType int32

const (
	CONTRACT_TYPE_INVALID              ContractType = 0
	CONTRACT_TYPE_NONE                 ContractType = 1
	CONTRACT_TYPE_PAYMENT              ContractType = 2
	CONTRACT_TYPE_SUBSCRIPTION_INITIAL ContractType = 3
	CONTRACT_TYPE_SUBSCRIPTION_RENEWAL ContractType = 4
	CONTRACT_TYPE_ONECLICK             ContractType = 5
)

var ContractType_name = map[int32]string{
	0: "CONTRACT_TYPE_INVALID",
	1: "CONTRACT_TYPE_NONE",
	2: "CONTRACT_TYPE_PAYMENT",
	3: "CONTRACT_TYPE_SUBSCRIPTION_INITIAL",
	4: "CONTRACT_TYPE_SUBSCRIPTION_RENEWAL",
	5: "CONTRACT_TYPE_ONECLICK",
}

var ContractType_value = map[string]int32{
	"CONTRACT_TYPE_INVALID":              0,
	"CONTRACT_TYPE_NONE":                 1,
	"CONTRACT_TYPE_PAYMENT":              2,
	"CONTRACT_TYPE_SUBSCRIPTION_INITIAL": 3,
	"CONTRACT_TYPE_SUBSCRIPTION_RENEWAL": 4,
	"CONTRACT_TYPE_ONECLICK":             5,
}

func (x ContractType) String() string {
	return proto.EnumName(ContractType_name, int32(x))
}

func (ContractType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_79326afc23833508, []int{8}
}

type Environment int32

const (
	ENVIRONMENT_INVALID  Environment = 0
	ENVIRONMENT_BLACKBOX Environment = 1
	ENVIRONMENT_TEST     Environment = 2
	ENVIRONMENT_LIVE     Environment = 3
	ENVIRONMENT_MOCK     Environment = 4
)

var Environment_name = map[int32]string{
	0: "ENVIRONMENT_INVALID",
	1: "ENVIRONMENT_BLACKBOX",
	2: "ENVIRONMENT_TEST",
	3: "ENVIRONMENT_LIVE",
	4: "ENVIRONMENT_MOCK",
}

var Environment_value = map[string]int32{
	"ENVIRONMENT_INVALID":  0,
	"ENVIRONMENT_BLACKBOX": 1,
	"ENVIRONMENT_TEST":     2,
	"ENVIRONMENT_LIVE":     3,
	"ENVIRONMENT_MOCK":     4,
}

func (x Environment) String() string {
	return proto.EnumName(Environment_name, int32(x))
}

func (Environment) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_79326afc23833508, []int{9}
}

type ProductType int32

const (
	PRODUCT_TYPE_INVALID      ProductType = 0
	PRODUCT_TYPE_PRODUCT      ProductType = 1
	PRODUCT_TYPE_SERVICE      ProductType = 2
	PRODUCT_TYPE_SUBSCRIPTION ProductType = 3
)

var ProductType_name = map[int32]string{
	0: "PRODUCT_TYPE_INVALID",
	1: "PRODUCT_TYPE_PRODUCT",
	2: "PRODUCT_TYPE_SERVICE",
	3: "PRODUCT_TYPE_SUBSCRIPTION",
}

var ProductType_value = map[string]int32{
	"PRODUCT_TYPE_INVALID":      0,
	"PRODUCT_TYPE_PRODUCT":      1,
	"PRODUCT_TYPE_SERVICE":      2,
	"PRODUCT_TYPE_SUBSCRIPTION": 3,
}

func (x ProductType) String() string {
	return proto.EnumName(ProductType_name, int32(x))
}

func (ProductType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_79326afc23833508, []int{10}
}

type SKUType int32

const (
	SKU_TYPE_INVALID SKUType = 0
	SKU_TYPE_PRIMARY SKUType = 1
	SKU_TYPE_ADDON   SKUType = 2
	SKU_TYPE_UPSELL  SKUType = 3
)

var SKUType_name = map[int32]string{
	0: "SKU_TYPE_INVALID",
	1: "SKU_TYPE_PRIMARY",
	2: "SKU_TYPE_ADDON",
	3: "SKU_TYPE_UPSELL",
}

var SKUType_value = map[string]int32{
	"SKU_TYPE_INVALID": 0,
	"SKU_TYPE_PRIMARY": 1,
	"SKU_TYPE_ADDON":   2,
	"SKU_TYPE_UPSELL":  3,
}

func (x SKUType) String() string {
	return proto.EnumName(SKUType_name, int32(x))
}

func (SKUType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_79326afc23833508, []int{11}
}

type DeliveryType int32

const (
	DELIVERY_TYPE_INVALID  DeliveryType = 0
	DELIVERY_TYPE_NONE     DeliveryType = 1
	DELIVERY_TYPE_PHYSICAL DeliveryType = 2
	DELIVERY_TYPE_VIRTUAL  DeliveryType = 3
)

var DeliveryType_name = map[int32]string{
	0: "DELIVERY_TYPE_INVALID",
	1: "DELIVERY_TYPE_NONE",
	2: "DELIVERY_TYPE_PHYSICAL",
	3: "DELIVERY_TYPE_VIRTUAL",
}

var DeliveryType_value = map[string]int32{
	"DELIVERY_TYPE_INVALID":  0,
	"DELIVERY_TYPE_NONE":     1,
	"DELIVERY_TYPE_PHYSICAL": 2,
	"DELIVERY_TYPE_VIRTUAL":  3,
}

func (x DeliveryType) String() string {
	return proto.EnumName(DeliveryType_name, int32(x))
}

func (DeliveryType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_79326afc23833508, []int{12}
}

type DeliveryStandard int32

const (
	DELIVERY_STANDARD_INVALID  DeliveryStandard = 0
	DELIVERY_STANDARD_SAME_DAY DeliveryStandard = 1
	DELIVERY_STANDARD_NEXT_DAY DeliveryStandard = 2
	DELIVERY_STANDARD_TWO_DAY  DeliveryStandard = 3
	DELIVERY_STANDARD_ECONOMY  DeliveryStandard = 4
	DELIVERY_STANDARD_OTHER    DeliveryStandard = 5
	DELIVERY_STANDARD_NONE     DeliveryStandard = 6
)

var DeliveryStandard_name = map[int32]string{
	0: "DELIVERY_STANDARD_INVALID",
	1: "DELIVERY_STANDARD_SAME_DAY",
	2: "DELIVERY_STANDARD_NEXT_DAY",
	3: "DELIVERY_STANDARD_TWO_DAY",
	4: "DELIVERY_STANDARD_ECONOMY",
	5: "DELIVERY_STANDARD_OTHER",
	6: "DELIVERY_STANDARD_NONE",
}

var DeliveryStandard_value = map[string]int32{
	"DELIVERY_STANDARD_INVALID":  0,
	"DELIVERY_STANDARD_SAME_DAY": 1,
	"DELIVERY_STANDARD_NEXT_DAY": 2,
	"DELIVERY_STANDARD_TWO_DAY":  3,
	"DELIVERY_STANDARD_ECONOMY":  4,
	"DELIVERY_STANDARD_OTHER":    5,
	"DELIVERY_STANDARD_NONE":     6,
}

func (x DeliveryStandard) String() string {
	return proto.EnumName(DeliveryStandard_name, int32(x))
}

func (DeliveryStandard) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_79326afc23833508, []int{13}
}

type TermType int32

const (
	TERM_TYPE_INVALID  TermType = 0
	TERM_TYPE_ONE_TIME TermType = 1
	TERM_TYPE_MINUTE   TermType = 3
	TERM_TYPE_DAY      TermType = 4
	TERM_TYPE_WEEK     TermType = 5
	TERM_TYPE_MONTH    TermType = 6
	TERM_TYPE_YEAR     TermType = 7
	TERM_TYPE_NONE     TermType = 8
)

var TermType_name = map[int32]string{
	0: "TERM_TYPE_INVALID",
	1: "TERM_TYPE_ONE_TIME",
	3: "TERM_TYPE_MINUTE",
	4: "TERM_TYPE_DAY",
	5: "TERM_TYPE_WEEK",
	6: "TERM_TYPE_MONTH",
	7: "TERM_TYPE_YEAR",
	8: "TERM_TYPE_NONE",
}

var TermType_value = map[string]int32{
	"TERM_TYPE_INVALID":  0,
	"TERM_TYPE_ONE_TIME": 1,
	"TERM_TYPE_MINUTE":   3,
	"TERM_TYPE_DAY":      4,
	"TERM_TYPE_WEEK":     5,
	"TERM_TYPE_MONTH":    6,
	"TERM_TYPE_YEAR":     7,
	"TERM_TYPE_NONE":     8,
}

func (x TermType) String() string {
	return proto.EnumName(TermType_name, int32(x))
}

func (TermType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_79326afc23833508, []int{14}
}

type FailureType int32

const (
	FAILURE_TYPE_INVALID  FailureType = 0
	FAILURE_TYPE_NONE     FailureType = 1
	FAILURE_TYPE_SOFT     FailureType = 2
	FAILURE_TYPE_HARD     FailureType = 3
	FAILURE_TYPE_RETRY    FailureType = 4
	FAILURE_TYPE_INTERNAL FailureType = 5
)

var FailureType_name = map[int32]string{
	0: "FAILURE_TYPE_INVALID",
	1: "FAILURE_TYPE_NONE",
	2: "FAILURE_TYPE_SOFT",
	3: "FAILURE_TYPE_HARD",
	4: "FAILURE_TYPE_RETRY",
	5: "FAILURE_TYPE_INTERNAL",
}

var FailureType_value = map[string]int32{
	"FAILURE_TYPE_INVALID":  0,
	"FAILURE_TYPE_NONE":     1,
	"FAILURE_TYPE_SOFT":     2,
	"FAILURE_TYPE_HARD":     3,
	"FAILURE_TYPE_RETRY":    4,
	"FAILURE_TYPE_INTERNAL": 5,
}

func (x FailureType) String() string {
	return proto.EnumName(FailureType_name, int32(x))
}

func (FailureType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_79326afc23833508, []int{15}
}

type TransactionResult int32

const (
	TRANSACTION_RESULT_INVALID         TransactionResult = 0
	TRANSACTION_RESULT_SUCCESS         TransactionResult = 1
	TRANSACTION_RESULT_DECLINED        TransactionResult = 2
	TRANSACTION_RESULT_VERIFY          TransactionResult = 3
	TRANSACTION_RESULT_PENDING         TransactionResult = 5
	TRANSACTION_RESULT_PENDING_SUCCESS TransactionResult = 6
	TRANSACTION_RESULT_RETRY           TransactionResult = 7
	TRANSACTION_RESULT_EXPIRED         TransactionResult = 8
	TRANSACTION_RESULT_PARTIAL_SUCCESS TransactionResult = 9
	TRANSACTION_RESULT_FAILURE         TransactionResult = 10
)

var TransactionResult_name = map[int32]string{
	0:  "TRANSACTION_RESULT_INVALID",
	1:  "TRANSACTION_RESULT_SUCCESS",
	2:  "TRANSACTION_RESULT_DECLINED",
	3:  "TRANSACTION_RESULT_VERIFY",
	5:  "TRANSACTION_RESULT_PENDING",
	6:  "TRANSACTION_RESULT_PENDING_SUCCESS",
	7:  "TRANSACTION_RESULT_RETRY",
	8:  "TRANSACTION_RESULT_EXPIRED",
	9:  "TRANSACTION_RESULT_PARTIAL_SUCCESS",
	10: "TRANSACTION_RESULT_FAILURE",
}

var TransactionResult_value = map[string]int32{
	"TRANSACTION_RESULT_INVALID":         0,
	"TRANSACTION_RESULT_SUCCESS":         1,
	"TRANSACTION_RESULT_DECLINED":        2,
	"TRANSACTION_RESULT_VERIFY":          3,
	"TRANSACTION_RESULT_PENDING":         5,
	"TRANSACTION_RESULT_PENDING_SUCCESS": 6,
	"TRANSACTION_RESULT_RETRY":           7,
	"TRANSACTION_RESULT_EXPIRED":         8,
	"TRANSACTION_RESULT_PARTIAL_SUCCESS": 9,
	"TRANSACTION_RESULT_FAILURE":         10,
}

func (x TransactionResult) String() string {
	return proto.EnumName(TransactionResult_name, int32(x))
}

func (TransactionResult) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_79326afc23833508, []int{16}
}

type VerificationStatus int32

const (
	VERIFICATION_STATUS_INVALID     VerificationStatus = 0
	VERIFICATION_STATUS_NOT_CHECKED VerificationStatus = 1
	VERIFICATION_STATUS_PASSED      VerificationStatus = 2
	VERIFICATION_STATUS_FAILED      VerificationStatus = 3
	VERIFICATION_STATUS_CONTINUE    VerificationStatus = 4
)

var VerificationStatus_name = map[int32]string{
	0: "VERIFICATION_STATUS_INVALID",
	1: "VERIFICATION_STATUS_NOT_CHECKED",
	2: "VERIFICATION_STATUS_PASSED",
	3: "VERIFICATION_STATUS_FAILED",
	4: "VERIFICATION_STATUS_CONTINUE",
}

var VerificationStatus_value = map[string]int32{
	"VERIFICATION_STATUS_INVALID":     0,
	"VERIFICATION_STATUS_NOT_CHECKED": 1,
	"VERIFICATION_STATUS_PASSED":      2,
	"VERIFICATION_STATUS_FAILED":      3,
	"VERIFICATION_STATUS_CONTINUE":    4,
}

func (x VerificationStatus) String() string {
	return proto.EnumName(VerificationStatus_name, int32(x))
}

func (VerificationStatus) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_79326afc23833508, []int{17}
}

type VerifyRequestType int32

const (
	VERIFY_REQUEST_TYPE_INVALID   VerifyRequestType = 0
	VERIFY_REQUEST_TYPE_IDENTIFY  VerifyRequestType = 1
	VERIFY_REQUEST_TYPE_CHALLENGE VerifyRequestType = 2
	VERIFY_REQUEST_TYPE_NONE      VerifyRequestType = 3
)

var VerifyRequestType_name = map[int32]string{
	0: "VERIFY_REQUEST_TYPE_INVALID",
	1: "VERIFY_REQUEST_TYPE_IDENTIFY",
	2: "VERIFY_REQUEST_TYPE_CHALLENGE",
	3: "VERIFY_REQUEST_TYPE_NONE",
}

var VerifyRequestType_value = map[string]int32{
	"VERIFY_REQUEST_TYPE_INVALID":   0,
	"VERIFY_REQUEST_TYPE_IDENTIFY":  1,
	"VERIFY_REQUEST_TYPE_CHALLENGE": 2,
	"VERIFY_REQUEST_TYPE_NONE":      3,
}

func (x VerifyRequestType) String() string {
	return proto.EnumName(VerifyRequestType_name, int32(x))
}

func (VerifyRequestType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_79326afc23833508, []int{18}
}

type Liability int32

const (
	LIABILITY_INVALID  Liability = 0
	LIABILITY_UNKNOWN  Liability = 1
	LIABILITY_MERCHANT Liability = 2
	LIABILITY_ISSUER   Liability = 3
)

var Liability_name = map[int32]string{
	0: "LIABILITY_INVALID",
	1: "LIABILITY_UNKNOWN",
	2: "LIABILITY_MERCHANT",
	3: "LIABILITY_ISSUER",
}

var Liability_value = map[string]int32{
	"LIABILITY_INVALID":  0,
	"LIABILITY_UNKNOWN":  1,
	"LIABILITY_MERCHANT": 2,
	"LIABILITY_ISSUER":   3,
}

func (x Liability) String() string {
	return proto.EnumName(Liability_name, int32(x))
}

func (Liability) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_79326afc23833508, []int{19}
}

type PlacementCapability int32

const (
	PLACEMENT_CAPABILITY_INVALID    PlacementCapability = 0
	PLACEMENT_CAPABILITY_CARD_FORM  PlacementCapability = 1
	PLACEMENT_CAPABILITY_APPLE_PAY  PlacementCapability = 2
	PLACEMENT_CAPABILITY_GOOGLE_PAY PlacementCapability = 3
	PLACEMENT_CAPABILITY_PAYPAL     PlacementCapability = 4
	PLACEMENT_CAPABILITY_TOKEN      PlacementCapability = 5
)

var PlacementCapability_name = map[int32]string{
	0: "PLACEMENT_CAPABILITY_INVALID",
	1: "PLACEMENT_CAPABILITY_CARD_FORM",
	2: "PLACEMENT_CAPABILITY_APPLE_PAY",
	3: "PLACEMENT_CAPABILITY_GOOGLE_PAY",
	4: "PLACEMENT_CAPABILITY_PAYPAL",
	5: "PLACEMENT_CAPABILITY_TOKEN",
}

var PlacementCapability_value = map[string]int32{
	"PLACEMENT_CAPABILITY_INVALID":    0,
	"PLACEMENT_CAPABILITY_CARD_FORM":  1,
	"PLACEMENT_CAPABILITY_APPLE_PAY":  2,
	"PLACEMENT_CAPABILITY_GOOGLE_PAY": 3,
	"PLACEMENT_CAPABILITY_PAYPAL":     4,
	"PLACEMENT_CAPABILITY_TOKEN":      5,
}

func (x PlacementCapability) String() string {
	return proto.EnumName(PlacementCapability_name, int32(x))
}

func (PlacementCapability) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_79326afc23833508, []int{20}
}

func init() {
	proto.RegisterEnum("chargehive.chtype.Status", Status_name, Status_value)
	golang_proto.RegisterEnum("chargehive.chtype.Status", Status_name, Status_value)
	proto.RegisterEnum("chargehive.chtype.ActorType", ActorType_name, ActorType_value)
	golang_proto.RegisterEnum("chargehive.chtype.ActorType", ActorType_name, ActorType_value)
	proto.RegisterEnum("chargehive.chtype.HandlerType", HandlerType_name, HandlerType_value)
	golang_proto.RegisterEnum("chargehive.chtype.HandlerType", HandlerType_name, HandlerType_value)
	proto.RegisterEnum("chargehive.chtype.TransactionType", TransactionType_name, TransactionType_value)
	golang_proto.RegisterEnum("chargehive.chtype.TransactionType", TransactionType_name, TransactionType_value)
	proto.RegisterEnum("chargehive.chtype.TransactionSubType", TransactionSubType_name, TransactionSubType_value)
	golang_proto.RegisterEnum("chargehive.chtype.TransactionSubType", TransactionSubType_name, TransactionSubType_value)
	proto.RegisterEnum("chargehive.chtype.PaymentMethodType", PaymentMethodType_name, PaymentMethodType_value)
	golang_proto.RegisterEnum("chargehive.chtype.PaymentMethodType", PaymentMethodType_name, PaymentMethodType_value)
	proto.RegisterEnum("chargehive.chtype.PaymentMethodProvider", PaymentMethodProvider_name, PaymentMethodProvider_value)
	golang_proto.RegisterEnum("chargehive.chtype.PaymentMethodProvider", PaymentMethodProvider_name, PaymentMethodProvider_value)
	proto.RegisterEnum("chargehive.chtype.PaymentMethodInputType", PaymentMethodInputType_name, PaymentMethodInputType_value)
	golang_proto.RegisterEnum("chargehive.chtype.PaymentMethodInputType", PaymentMethodInputType_name, PaymentMethodInputType_value)
	proto.RegisterEnum("chargehive.chtype.ContractType", ContractType_name, ContractType_value)
	golang_proto.RegisterEnum("chargehive.chtype.ContractType", ContractType_name, ContractType_value)
	proto.RegisterEnum("chargehive.chtype.Environment", Environment_name, Environment_value)
	golang_proto.RegisterEnum("chargehive.chtype.Environment", Environment_name, Environment_value)
	proto.RegisterEnum("chargehive.chtype.ProductType", ProductType_name, ProductType_value)
	golang_proto.RegisterEnum("chargehive.chtype.ProductType", ProductType_name, ProductType_value)
	proto.RegisterEnum("chargehive.chtype.SKUType", SKUType_name, SKUType_value)
	golang_proto.RegisterEnum("chargehive.chtype.SKUType", SKUType_name, SKUType_value)
	proto.RegisterEnum("chargehive.chtype.DeliveryType", DeliveryType_name, DeliveryType_value)
	golang_proto.RegisterEnum("chargehive.chtype.DeliveryType", DeliveryType_name, DeliveryType_value)
	proto.RegisterEnum("chargehive.chtype.DeliveryStandard", DeliveryStandard_name, DeliveryStandard_value)
	golang_proto.RegisterEnum("chargehive.chtype.DeliveryStandard", DeliveryStandard_name, DeliveryStandard_value)
	proto.RegisterEnum("chargehive.chtype.TermType", TermType_name, TermType_value)
	golang_proto.RegisterEnum("chargehive.chtype.TermType", TermType_name, TermType_value)
	proto.RegisterEnum("chargehive.chtype.FailureType", FailureType_name, FailureType_value)
	golang_proto.RegisterEnum("chargehive.chtype.FailureType", FailureType_name, FailureType_value)
	proto.RegisterEnum("chargehive.chtype.TransactionResult", TransactionResult_name, TransactionResult_value)
	golang_proto.RegisterEnum("chargehive.chtype.TransactionResult", TransactionResult_name, TransactionResult_value)
	proto.RegisterEnum("chargehive.chtype.VerificationStatus", VerificationStatus_name, VerificationStatus_value)
	golang_proto.RegisterEnum("chargehive.chtype.VerificationStatus", VerificationStatus_name, VerificationStatus_value)
	proto.RegisterEnum("chargehive.chtype.VerifyRequestType", VerifyRequestType_name, VerifyRequestType_value)
	golang_proto.RegisterEnum("chargehive.chtype.VerifyRequestType", VerifyRequestType_name, VerifyRequestType_value)
	proto.RegisterEnum("chargehive.chtype.Liability", Liability_name, Liability_value)
	golang_proto.RegisterEnum("chargehive.chtype.Liability", Liability_name, Liability_value)
	proto.RegisterEnum("chargehive.chtype.PlacementCapability", PlacementCapability_name, PlacementCapability_value)
	golang_proto.RegisterEnum("chargehive.chtype.PlacementCapability", PlacementCapability_name, PlacementCapability_value)
}

func init() { proto.RegisterFile("chargehive/chtype/enum.proto", fileDescriptor_79326afc23833508) }
func init() {
	golang_proto.RegisterFile("chargehive/chtype/enum.proto", fileDescriptor_79326afc23833508)
}

var fileDescriptor_79326afc23833508 = []byte{
	// 1676 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x58, 0x41, 0x6f, 0xdb, 0xc8,
	0x15, 0x5e, 0x4a, 0xb6, 0x93, 0x3c, 0xa7, 0xbb, 0x23, 0x46, 0x76, 0x6c, 0x47, 0x71, 0x9c, 0xdd,
	0xb6, 0x07, 0x02, 0x8d, 0x81, 0xb6, 0xc7, 0x5e, 0x46, 0xc3, 0x67, 0x69, 0x20, 0x6a, 0x86, 0x3b,
	0x1c, 0xca, 0x56, 0xb0, 0xa8, 0x40, 0xcb, 0x5c, 0x5b, 0x80, 0x23, 0xb9, 0x8a, 0xe4, 0xd6, 0x3d,
	0xf6, 0x4f, 0xf4, 0xb8, 0xfd, 0x0f, 0xbd, 0xf6, 0x50, 0xa0, 0x40, 0x51, 0xf4, 0xd4, 0xbf, 0xb0,
	0x2d, 0x0a, 0xf4, 0xd4, 0x63, 0xcf, 0xc5, 0x90, 0x92, 0x45, 0x8a, 0x54, 0x6e, 0xd2, 0xfb, 0xbe,
	0x99, 0x37, 0xef, 0xe3, 0x9b, 0x99, 0x8f, 0x84, 0xc6, 0xf0, 0x26, 0x9a, 0x5e, 0xc7, 0x37, 0xa3,
	0xfb, 0xf8, 0x74, 0x78, 0x33, 0x7b, 0xb8, 0x8b, 0x4f, 0xe3, 0xf1, 0xfc, 0xc3, 0xbb, 0xbb, 0xe9,
	0x64, 0x36, 0xb1, 0x6b, 0x2b, 0xf4, 0x5d, 0x8a, 0x1e, 0xfd, 0xe4, 0x7a, 0x34, 0xbb, 0x99, 0x5f,
	0xbe, 0x1b, 0x4e, 0x3e, 0x9c, 0x5e, 0x4f, 0xae, 0x27, 0xa7, 0x09, 0xf3, 0x72, 0xfe, 0x6d, 0xf2,
	0x2f, 0xf9, 0x93, 0xfc, 0x4a, 0x67, 0x70, 0xfe, 0x62, 0xc1, 0x4e, 0x30, 0x8b, 0x66, 0xf3, 0x8f,
	0xb6, 0x0d, 0x9f, 0x07, 0x9a, 0xea, 0x30, 0x18, 0x70, 0xd1, 0xa3, 0x1e, 0x77, 0xc9, 0x67, 0x99,
	0x98, 0x8f, 0xc2, 0xe5, 0xa2, 0x45, 0x2c, 0x9b, 0xc0, 0xf3, 0x45, 0x2c, 0x40, 0x1d, 0xfa, 0x04,
	0xec, 0x97, 0xf0, 0x62, 0xc9, 0x52, 0xb2, 0xc7, 0x03, 0x2e, 0x85, 0xa1, 0xd6, 0xed, 0x1a, 0xfc,
	0x60, 0x01, 0x50, 0xa6, 0x79, 0x0f, 0xc9, 0xb1, 0x5d, 0x07, 0xb2, 0x1c, 0x1d, 0x06, 0x66, 0x52,
	0x74, 0xc9, 0x4f, 0x33, 0x51, 0x46, 0x05, 0x43, 0xcf, 0x43, 0x97, 0xfc, 0xc2, 0x7e, 0x01, 0x5f,
	0x2c, 0x87, 0x2b, 0xd6, 0xe6, 0x3d, 0x74, 0xc9, 0x59, 0x66, 0x49, 0x2e, 0x7a, 0xa8, 0xd1, 0x25,
	0xef, 0x9d, 0xff, 0x56, 0xe0, 0x19, 0x1d, 0xce, 0x26, 0x53, 0xfd, 0x70, 0x17, 0xdb, 0xfb, 0x60,
	0x53, 0xa6, 0xa5, 0x1a, 0xe8, 0xbe, 0x8f, 0x99, 0x62, 0x5e, 0xc2, 0x8b, 0x4c, 0x9c, 0x49, 0x11,
	0x84, 0x5d, 0x54, 0xc4, 0x5a, 0x03, 0xba, 0xa8, 0x58, 0x9b, 0x0a, 0x4d, 0x2a, 0xf6, 0x21, 0xec,
	0x65, 0x47, 0xb4, 0xa9, 0x6a, 0xa1, 0x59, 0x07, 0xa9, 0xda, 0x7b, 0x50, 0xcb, 0x40, 0xe7, 0xd4,
	0xf3, 0x50, 0x93, 0x2d, 0xfb, 0x00, 0xea, 0xf9, 0x1c, 0x02, 0xcd, 0x5f, 0xb2, 0x6d, 0x9f, 0x40,
	0x23, 0x83, 0xf8, 0xb4, 0xdf, 0x45, 0xa1, 0x8d, 0x60, 0x0c, 0x83, 0x40, 0x2a, 0xb2, 0x63, 0x1f,
	0xc3, 0x51, 0x09, 0x43, 0xa0, 0x3e, 0x97, 0xaa, 0x43, 0x9e, 0xd8, 0xaf, 0xe1, 0x30, 0x83, 0x53,
	0xf6, 0x75, 0xc8, 0x15, 0x17, 0xad, 0x41, 0x93, 0x8a, 0x0e, 0x79, 0x6a, 0xbf, 0x82, 0x97, 0xd9,
	0xb2, 0x83, 0x20, 0x7c, 0x04, 0x9f, 0xad, 0x8d, 0x55, 0xc8, 0x64, 0x0f, 0x55, 0x7f, 0x40, 0x5b,
	0x28, 0x74, 0xfa, 0x04, 0x33, 0x30, 0x5e, 0x18, 0x01, 0x5a, 0x48, 0x76, 0xd7, 0xca, 0xf4, 0xa5,
	0xc7, 0x59, 0x9f, 0x3c, 0x77, 0xfe, 0x60, 0xc1, 0x6e, 0x3b, 0x1a, 0x5f, 0xdd, 0xc6, 0xa9, 0xe4,
	0x07, 0x50, 0x6f, 0x53, 0xe1, 0x7a, 0x58, 0x10, 0xbd, 0x0e, 0x24, 0x87, 0x9c, 0x63, 0x93, 0x58,
	0x85, 0x28, 0xf3, 0x38, 0xa9, 0x14, 0xa2, 0xd4, 0xe7, 0xa4, 0x6a, 0xd6, 0x96, 0x8b, 0x76, 0x65,
	0x93, 0x7b, 0x48, 0xb6, 0xec, 0x06, 0x1c, 0xe4, 0x00, 0x9f, 0x06, 0x81, 0x6e, 0x2b, 0x19, 0xb6,
	0xda, 0x64, 0xdb, 0xf9, 0xae, 0x02, 0x5f, 0xe8, 0x69, 0x34, 0xfe, 0x18, 0x0d, 0x67, 0xa3, 0xc9,
	0x38, 0x59, 0x66, 0x03, 0x0e, 0xb4, 0xa2, 0x22, 0x30, 0xdd, 0x28, 0xc5, 0xfa, 0x52, 0x8f, 0xe1,
	0xa8, 0x80, 0xd2, 0x50, 0xb7, 0xa5, 0xe2, 0xef, 0x91, 0x58, 0xa5, 0xa3, 0x19, 0xf5, 0x75, 0xa8,
	0x90, 0x54, 0x8c, 0xfc, 0x05, 0x54, 0xe1, 0x59, 0x28, 0x5c, 0x52, 0x2d, 0x05, 0xd3, 0x4e, 0x4f,
	0xeb, 0x28, 0x80, 0x2e, 0x0f, 0xfc, 0x50, 0x23, 0xd9, 0x2e, 0x1d, 0xda, 0x43, 0xc5, 0xcf, 0xfa,
	0x64, 0xa7, 0x74, 0x28, 0x5e, 0xf8, 0x5c, 0xa1, 0x9b, 0x36, 0x4c, 0x49, 0xb9, 0x1a, 0x95, 0xa0,
	0x1e, 0x19, 0x9a, 0xbd, 0x6f, 0x67, 0x14, 0x0a, 0xe6, 0x97, 0x89, 0x48, 0x27, 0xd0, 0xc8, 0x8e,
	0x0a, 0xc2, 0xe6, 0xba, 0x50, 0x6f, 0xe1, 0x75, 0x39, 0xc3, 0x45, 0xa1, 0xcd, 0xc2, 0x2c, 0xfb,
	0x4b, 0x38, 0x2e, 0xa5, 0xb0, 0xb6, 0xd9, 0x29, 0xa6, 0xb7, 0x2a, 0xf6, 0x8f, 0xe0, 0x6d, 0x39,
	0x27, 0xd5, 0x34, 0xd1, 0x9e, 0x54, 0xd7, 0xab, 0x78, 0xa4, 0x09, 0x29, 0x90, 0x6c, 0x39, 0x7f,
	0xb5, 0xa0, 0xe6, 0x47, 0x0f, 0x1f, 0xe2, 0xf1, 0xac, 0x1b, 0xcf, 0x6e, 0x26, 0x57, 0x49, 0x11,
	0x6f, 0xe0, 0xd5, 0x72, 0x03, 0x75, 0x51, 0xb7, 0xa5, 0xbb, 0x5e, 0x43, 0x03, 0x0e, 0xca, 0x08,
	0x8c, 0x2a, 0x97, 0x58, 0x66, 0x69, 0x65, 0xa8, 0xcb, 0x5b, 0x5c, 0x53, 0x6f, 0xb1, 0xdb, 0x2b,
	0xf6, 0x57, 0xf0, 0xa6, 0x9c, 0xa6, 0x90, 0x69, 0x17, 0x9b, 0x5c, 0x93, 0xaa, 0xfd, 0x63, 0xf8,
	0xb2, 0x34, 0x93, 0xea, 0xfb, 0x5a, 0xb2, 0x50, 0x29, 0x14, 0xac, 0x4f, 0xb6, 0x9c, 0xff, 0x59,
	0xb0, 0x97, 0x2b, 0xc4, 0x9f, 0x4e, 0xee, 0x47, 0x57, 0xf1, 0xb4, 0x24, 0x4d, 0x72, 0xce, 0xba,
	0xa8, 0x32, 0x05, 0x9d, 0x40, 0x63, 0x13, 0xe9, 0x4c, 0xaa, 0x6e, 0xfa, 0x4c, 0x36, 0x31, 0x7c,
	0xda, 0xf7, 0xa9, 0x47, 0x2a, 0xf6, 0x0f, 0xe1, 0x64, 0x13, 0x87, 0xfa, 0xbe, 0x87, 0x3e, 0xed,
	0x93, 0x6a, 0x89, 0x3c, 0x8f, 0xac, 0x96, 0x94, 0xad, 0x94, 0xb6, 0xf5, 0x29, 0x1a, 0xed, 0xd2,
	0xf7, 0x52, 0x18, 0xda, 0xb6, 0xf3, 0x6b, 0xd8, 0xcf, 0xd5, 0xcd, 0xc7, 0x77, 0xf3, 0xd9, 0xf2,
	0x24, 0xe7, 0xc2, 0x0f, 0x75, 0xc9, 0x49, 0x9e, 0x89, 0xfb, 0xed, 0x7e, 0xc0, 0x19, 0xf5, 0x88,
	0xb5, 0x36, 0xa0, 0xc7, 0x95, 0x0e, 0x93, 0xb2, 0xea, 0x40, 0xb2, 0x03, 0x94, 0xbc, 0xe8, 0x93,
	0xaa, 0xf3, 0x37, 0x0b, 0x9e, 0xb3, 0xc9, 0x78, 0x36, 0x8d, 0x86, 0x69, 0xbe, 0x43, 0xd8, 0x63,
	0x52, 0x68, 0x45, 0x59, 0x21, 0xe5, 0x3e, 0xd8, 0x79, 0x28, 0x69, 0x3f, 0xab, 0x38, 0x64, 0x51,
	0x31, 0xa9, 0x98, 0x07, 0x9f, 0x87, 0x82, 0xb0, 0x19, 0x30, 0xc5, 0xfd, 0xa4, 0x8f, 0xb9, 0xe0,
	0x9a, 0x53, 0x2f, 0x6d, 0x90, 0x4f, 0xf0, 0x14, 0x0a, 0x3c, 0xa7, 0xe6, 0x9c, 0x38, 0x82, 0xfd,
	0x3c, 0x4f, 0x0a, 0x64, 0x1e, 0x67, 0x1d, 0xb2, 0xed, 0xfc, 0xce, 0x82, 0x5d, 0x1c, 0xdf, 0x8f,
	0xa6, 0x93, 0xb1, 0x11, 0xd2, 0x28, 0x84, 0xa2, 0xc7, 0x95, 0x14, 0x89, 0xfc, 0xab, 0x3a, 0x0e,
	0xa0, 0x9e, 0x05, 0x9a, 0x1e, 0x65, 0x9d, 0xa6, 0xbc, 0x48, 0xcf, 0xe4, 0x2c, 0xa2, 0x31, 0xd0,
	0xa9, 0x72, 0xd9, 0xa8, 0x97, 0xde, 0x7e, 0x6b, 0xd1, 0xae, 0x64, 0x1d, 0xb2, 0xe5, 0xfc, 0x16,
	0x76, 0xfd, 0xe9, 0xe4, 0x6a, 0xbe, 0x50, 0xf3, 0x00, 0xea, 0xbe, 0x92, 0x6e, 0x58, 0x14, 0x73,
	0x1d, 0x59, 0xfc, 0x21, 0x56, 0x01, 0x09, 0x50, 0xf5, 0x38, 0x33, 0xa7, 0xc5, 0x6b, 0x38, 0xcc,
	0x23, 0x19, 0x91, 0x48, 0xd5, 0xf9, 0x25, 0x3c, 0x09, 0x3a, 0x61, 0x92, 0xd7, 0x98, 0x89, 0x4e,
	0x58, 0x72, 0x11, 0x3d, 0x46, 0x7d, 0xc5, 0xbb, 0x54, 0x99, 0x73, 0xca, 0xb8, 0x89, 0x65, 0x94,
	0xba, 0xae, 0x14, 0xa4, 0x92, 0xd8, 0x8e, 0x65, 0x2c, 0xf4, 0x03, 0xf4, 0x3c, 0x52, 0x75, 0x7e,
	0x03, 0xcf, 0xdd, 0xf8, 0x76, 0x74, 0x1f, 0x4f, 0x1f, 0x96, 0xad, 0xe2, 0xa2, 0x51, 0x43, 0xf5,
	0x4b, 0x5a, 0x25, 0x0f, 0x2d, 0x5a, 0xe5, 0x08, 0xf6, 0xf3, 0xf1, 0xc7, 0xc6, 0xad, 0x14, 0xa7,
	0x5b, 0xf6, 0x6e, 0xd5, 0xf9, 0x8f, 0x05, 0x64, 0x99, 0x3a, 0x98, 0x45, 0xe3, 0xab, 0x68, 0x7a,
	0x65, 0xd4, 0x78, 0xe4, 0x07, 0x9a, 0x0a, 0x97, 0x2a, 0x37, 0x7f, 0x95, 0x15, 0xe1, 0x80, 0x76,
	0x71, 0xe0, 0x52, 0x53, 0x76, 0x29, 0x2e, 0xf0, 0x42, 0x27, 0x78, 0xa5, 0x7c, 0x7a, 0x7d, 0x2e,
	0x13, 0xb8, 0x5a, 0x0e, 0x23, 0x93, 0x42, 0x76, 0xcd, 0xbe, 0x7f, 0x05, 0x2f, 0x8b, 0xb0, 0xd4,
	0x6d, 0x34, 0x3e, 0x28, 0xab, 0xc2, 0x2a, 0xb5, 0x51, 0x68, 0xc7, 0xf9, 0xa3, 0x05, 0x4f, 0x75,
	0x3c, 0xfd, 0x90, 0x28, 0xbc, 0x07, 0x35, 0x8d, 0xaa, 0x5b, 0xa2, 0xee, 0x2a, 0x2c, 0x05, 0x0e,
	0x34, 0xef, 0x62, 0xda, 0xbe, 0xab, 0x78, 0x97, 0x0b, 0x73, 0x7b, 0x56, 0x8d, 0x03, 0x5d, 0x45,
	0xdd, 0xe4, 0x54, 0xb2, 0xe1, 0xf3, 0x55, 0xe8, 0x1c, 0xb1, 0x43, 0xb6, 0xcd, 0x23, 0xcf, 0x0c,
	0x96, 0x42, 0xb7, 0xc9, 0x4e, 0x9e, 0xd8, 0x47, 0xaa, 0xc8, 0x93, 0x7c, 0x2c, 0x59, 0xf5, 0x53,
	0xe7, 0x3b, 0x0b, 0x76, 0xcf, 0xa2, 0xd1, 0xed, 0x7c, 0x1a, 0x2f, 0xfb, 0xfe, 0x8c, 0x72, 0xcf,
	0x5c, 0x61, 0x6b, 0x6b, 0xdf, 0x83, 0x5a, 0x0e, 0x59, 0x34, 0xc6, 0x7a, 0x38, 0x90, 0x67, 0x66,
	0xeb, 0xad, 0x87, 0xdb, 0xe6, 0x6e, 0xaa, 0x1a, 0x01, 0x72, 0x61, 0x85, 0x5a, 0x99, 0xba, 0x0e,
	0x61, 0x6f, 0x2d, 0xed, 0xe2, 0xa6, 0xdf, 0x76, 0xbe, 0xaf, 0x40, 0x2d, 0x73, 0xd3, 0xab, 0xf8,
	0xe3, 0xfc, 0x76, 0xb6, 0xee, 0x77, 0x14, 0x06, 0xa1, 0xa7, 0x37, 0xfb, 0xa1, 0x05, 0x1e, 0x84,
	0xcc, 0x38, 0x56, 0x62, 0x99, 0x3b, 0xb6, 0x04, 0x77, 0xcd, 0x99, 0x24, 0xd0, 0x4d, 0xbb, 0xa8,
	0x84, 0xb0, 0x30, 0x2f, 0xd5, 0x0d, 0xf3, 0x2f, 0x5f, 0x34, 0xb6, 0xcd, 0xb9, 0xb8, 0x19, 0x7f,
	0x5c, 0x47, 0xc1, 0x04, 0x2d, 0x78, 0xa9, 0x2c, 0x4f, 0x36, 0x64, 0x59, 0x9a, 0xa4, 0xa7, 0x9b,
	0xb2, 0x50, 0x65, 0x4e, 0xe7, 0xc7, 0x2c, 0xcf, 0x36, 0xcc, 0xb3, 0x50, 0x9c, 0x80, 0xf3, 0x27,
	0x0b, 0xec, 0x5e, 0x3c, 0x1d, 0x7d, 0x3b, 0x1a, 0x46, 0x89, 0x9d, 0x4a, 0xdf, 0xaa, 0xde, 0xc0,
	0xab, 0xa4, 0x60, 0xce, 0x68, 0x6a, 0x5f, 0xd6, 0x5f, 0xb1, 0xbe, 0x82, 0x37, 0x65, 0x04, 0x21,
	0xf5, 0x80, 0xb5, 0x91, 0x75, 0xd0, 0x4d, 0xf7, 0x6b, 0x19, 0xc9, 0x38, 0xde, 0x44, 0xe9, 0x0d,
	0xb8, 0x59, 0x1d, 0x9a, 0x9e, 0x39, 0x81, 0x46, 0x19, 0x6e, 0xae, 0x13, 0x2e, 0x42, 0x63, 0xa3,
	0x7e, 0x6f, 0x41, 0x2d, 0x59, 0xfe, 0x83, 0x8a, 0x7f, 0x35, 0x8f, 0x3f, 0xce, 0x96, 0x36, 0x2a,
	0x7d, 0x5c, 0x03, 0x85, 0x5f, 0x87, 0x18, 0x14, 0x4e, 0xf2, 0xe5, 0xc4, 0xeb, 0x84, 0x95, 0x13,
	0x7c, 0x0b, 0xaf, 0xcb, 0x18, 0x59, 0x23, 0xd8, 0x80, 0x83, 0x32, 0x4a, 0xb2, 0x3b, 0xaa, 0xce,
	0x35, 0x3c, 0xf3, 0x46, 0xd1, 0xe5, 0xe8, 0x76, 0x34, 0x7b, 0x30, 0x7b, 0xc2, 0xe3, 0xb4, 0xc9,
	0x3d, 0xae, 0xfb, 0xf9, 0x8d, 0xb5, 0x0a, 0x87, 0xa2, 0x23, 0xe4, 0xb9, 0x48, 0xed, 0xc0, 0x2a,
	0x9c, 0x79, 0xaf, 0xab, 0x03, 0xc9, 0xcc, 0x12, 0x04, 0x21, 0x2a, 0x52, 0x75, 0xfe, 0x6d, 0xc1,
	0x0b, 0xff, 0x36, 0x1a, 0xc6, 0xe6, 0x06, 0x65, 0xd1, 0xdd, 0x32, 0xa7, 0x71, 0x56, 0x1e, 0x65,
	0x98, 0x5c, 0x75, 0x8c, 0xfa, 0xc5, 0xf4, 0xc6, 0x59, 0x95, 0x31, 0x8c, 0x9b, 0xcc, 0xba, 0xaf,
	0x32, 0x4e, 0x62, 0xab, 0x8c, 0x6b, 0x58, 0xf8, 0xc9, 0x32, 0x4e, 0x6a, 0xaa, 0x06, 0xa9, 0xf9,
	0x32, 0xd6, 0xb6, 0x8c, 0xb4, 0xf0, 0x70, 0x5b, 0xa6, 0x19, 0x4a, 0x09, 0x5a, 0x76, 0x50, 0x90,
	0xed, 0xe6, 0xe4, 0x1f, 0xdf, 0x1f, 0x7f, 0xf6, 0xe7, 0x7f, 0x1d, 0x5b, 0xef, 0x7f, 0x9e, 0xf9,
	0x58, 0x90, 0xf9, 0xd0, 0xb0, 0xfc, 0x4a, 0x70, 0x1b, 0x8d, 0xaf, 0x4f, 0x0b, 0x1f, 0x20, 0xfe,
	0x5e, 0xa9, 0xb1, 0x24, 0xd6, 0x1e, 0xdd, 0xc7, 0xdf, 0xb0, 0x24, 0xf6, 0xcf, 0xca, 0x51, 0x21,
	0xf6, 0x4d, 0x37, 0x9e, 0x45, 0x57, 0xd1, 0x2c, 0xba, 0xdc, 0x49, 0x26, 0xfc, 0xd9, 0xff, 0x03,
	0x00, 0x00, 0xff, 0xff, 0xab, 0x7d, 0x09, 0x98, 0xcd, 0x10, 0x00, 0x00,
}
