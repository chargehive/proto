// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: chargehive/chtype/payment_method_schema.proto

package chtype

import (
	fmt "fmt"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	golang_proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = golang_proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type PaymentMethodSchema int32

const (
	PAYMENT_METHOD_SCHEMA_INVALID        PaymentMethodSchema = 0
	PAYMENT_METHOD_SCHEMA_ENCRYPTED_CARD PaymentMethodSchema = 1
	PAYMENT_METHOD_SCHEMA_CARD           PaymentMethodSchema = 2
	PAYMENT_METHOD_SCHEMA_APPLE_PAY      PaymentMethodSchema = 3
	PAYMENT_METHOD_SCHEMA_GOOGLE_PAY     PaymentMethodSchema = 4
	PAYMENT_METHOD_SCHEMA_PAYPAL         PaymentMethodSchema = 5
	PAYMENT_METHOD_SCHEMA_DIRECT_DEBIT   PaymentMethodSchema = 6
)

var PaymentMethodSchema_name = map[int32]string{
	0: "PAYMENT_METHOD_SCHEMA_INVALID",
	1: "PAYMENT_METHOD_SCHEMA_ENCRYPTED_CARD",
	2: "PAYMENT_METHOD_SCHEMA_CARD",
	3: "PAYMENT_METHOD_SCHEMA_APPLE_PAY",
	4: "PAYMENT_METHOD_SCHEMA_GOOGLE_PAY",
	5: "PAYMENT_METHOD_SCHEMA_PAYPAL",
	6: "PAYMENT_METHOD_SCHEMA_DIRECT_DEBIT",
}

var PaymentMethodSchema_value = map[string]int32{
	"PAYMENT_METHOD_SCHEMA_INVALID":        0,
	"PAYMENT_METHOD_SCHEMA_ENCRYPTED_CARD": 1,
	"PAYMENT_METHOD_SCHEMA_CARD":           2,
	"PAYMENT_METHOD_SCHEMA_APPLE_PAY":      3,
	"PAYMENT_METHOD_SCHEMA_GOOGLE_PAY":     4,
	"PAYMENT_METHOD_SCHEMA_PAYPAL":         5,
	"PAYMENT_METHOD_SCHEMA_DIRECT_DEBIT":   6,
}

func (x PaymentMethodSchema) String() string {
	return proto.EnumName(PaymentMethodSchema_name, int32(x))
}

func (PaymentMethodSchema) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_acf1a4ab3aa467b5, []int{0}
}

type PaymentMethodSchemaApplePay struct {
	SessionUrl           string   `protobuf:"bytes,1,opt,name=session_url,json=sessionUrl,proto3" json:"session_url,omitempty"`
	InitiativeContext    string   `protobuf:"bytes,2,opt,name=initiative_context,json=initiativeContext,proto3" json:"initiative_context,omitempty"`
	Token                string   `protobuf:"bytes,3,opt,name=token,proto3" json:"token,omitempty"`
	Session              string   `protobuf:"bytes,4,opt,name=session,proto3" json:"session,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PaymentMethodSchemaApplePay) Reset()         { *m = PaymentMethodSchemaApplePay{} }
func (m *PaymentMethodSchemaApplePay) String() string { return proto.CompactTextString(m) }
func (*PaymentMethodSchemaApplePay) ProtoMessage()    {}
func (*PaymentMethodSchemaApplePay) Descriptor() ([]byte, []int) {
	return fileDescriptor_acf1a4ab3aa467b5, []int{0}
}
func (m *PaymentMethodSchemaApplePay) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PaymentMethodSchemaApplePay.Unmarshal(m, b)
}
func (m *PaymentMethodSchemaApplePay) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PaymentMethodSchemaApplePay.Marshal(b, m, deterministic)
}
func (m *PaymentMethodSchemaApplePay) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PaymentMethodSchemaApplePay.Merge(m, src)
}
func (m *PaymentMethodSchemaApplePay) XXX_Size() int {
	return xxx_messageInfo_PaymentMethodSchemaApplePay.Size(m)
}
func (m *PaymentMethodSchemaApplePay) XXX_DiscardUnknown() {
	xxx_messageInfo_PaymentMethodSchemaApplePay.DiscardUnknown(m)
}

var xxx_messageInfo_PaymentMethodSchemaApplePay proto.InternalMessageInfo

func (m *PaymentMethodSchemaApplePay) GetSessionUrl() string {
	if m != nil {
		return m.SessionUrl
	}
	return ""
}

func (m *PaymentMethodSchemaApplePay) GetInitiativeContext() string {
	if m != nil {
		return m.InitiativeContext
	}
	return ""
}

func (m *PaymentMethodSchemaApplePay) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

func (m *PaymentMethodSchemaApplePay) GetSession() string {
	if m != nil {
		return m.Session
	}
	return ""
}

type PaymentMethodSchemaGooglePay struct {
	LowValueToken        string   `protobuf:"bytes,1,opt,name=low_value_token,json=lowValueToken,proto3" json:"low_value_token,omitempty"`
	Description          string   `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	CardDetails          string   `protobuf:"bytes,3,opt,name=card_details,json=cardDetails,proto3" json:"card_details,omitempty"`
	CardNetwork          string   `protobuf:"bytes,4,opt,name=card_network,json=cardNetwork,proto3" json:"card_network,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PaymentMethodSchemaGooglePay) Reset()         { *m = PaymentMethodSchemaGooglePay{} }
func (m *PaymentMethodSchemaGooglePay) String() string { return proto.CompactTextString(m) }
func (*PaymentMethodSchemaGooglePay) ProtoMessage()    {}
func (*PaymentMethodSchemaGooglePay) Descriptor() ([]byte, []int) {
	return fileDescriptor_acf1a4ab3aa467b5, []int{1}
}
func (m *PaymentMethodSchemaGooglePay) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PaymentMethodSchemaGooglePay.Unmarshal(m, b)
}
func (m *PaymentMethodSchemaGooglePay) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PaymentMethodSchemaGooglePay.Marshal(b, m, deterministic)
}
func (m *PaymentMethodSchemaGooglePay) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PaymentMethodSchemaGooglePay.Merge(m, src)
}
func (m *PaymentMethodSchemaGooglePay) XXX_Size() int {
	return xxx_messageInfo_PaymentMethodSchemaGooglePay.Size(m)
}
func (m *PaymentMethodSchemaGooglePay) XXX_DiscardUnknown() {
	xxx_messageInfo_PaymentMethodSchemaGooglePay.DiscardUnknown(m)
}

var xxx_messageInfo_PaymentMethodSchemaGooglePay proto.InternalMessageInfo

func (m *PaymentMethodSchemaGooglePay) GetLowValueToken() string {
	if m != nil {
		return m.LowValueToken
	}
	return ""
}

func (m *PaymentMethodSchemaGooglePay) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *PaymentMethodSchemaGooglePay) GetCardDetails() string {
	if m != nil {
		return m.CardDetails
	}
	return ""
}

func (m *PaymentMethodSchemaGooglePay) GetCardNetwork() string {
	if m != nil {
		return m.CardNetwork
	}
	return ""
}

type PaymentMethodSchemaPayPal struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PaymentMethodSchemaPayPal) Reset()         { *m = PaymentMethodSchemaPayPal{} }
func (m *PaymentMethodSchemaPayPal) String() string { return proto.CompactTextString(m) }
func (*PaymentMethodSchemaPayPal) ProtoMessage()    {}
func (*PaymentMethodSchemaPayPal) Descriptor() ([]byte, []int) {
	return fileDescriptor_acf1a4ab3aa467b5, []int{2}
}
func (m *PaymentMethodSchemaPayPal) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PaymentMethodSchemaPayPal.Unmarshal(m, b)
}
func (m *PaymentMethodSchemaPayPal) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PaymentMethodSchemaPayPal.Marshal(b, m, deterministic)
}
func (m *PaymentMethodSchemaPayPal) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PaymentMethodSchemaPayPal.Merge(m, src)
}
func (m *PaymentMethodSchemaPayPal) XXX_Size() int {
	return xxx_messageInfo_PaymentMethodSchemaPayPal.Size(m)
}
func (m *PaymentMethodSchemaPayPal) XXX_DiscardUnknown() {
	xxx_messageInfo_PaymentMethodSchemaPayPal.DiscardUnknown(m)
}

var xxx_messageInfo_PaymentMethodSchemaPayPal proto.InternalMessageInfo

type PaymentMethodSchemaEncryptedCard struct {
	NameOnCard           []byte   `protobuf:"bytes,1,opt,name=name_on_card,json=nameOnCard,proto3" json:"name_on_card,omitempty"`
	Number               []byte   `protobuf:"bytes,2,opt,name=number,proto3" json:"number,omitempty"`
	ValidFromMonth       []byte   `protobuf:"bytes,3,opt,name=valid_from_month,json=validFromMonth,proto3" json:"valid_from_month,omitempty"`
	ValidFromYear        []byte   `protobuf:"bytes,4,opt,name=valid_from_year,json=validFromYear,proto3" json:"valid_from_year,omitempty"`
	ExpiryMonth          []byte   `protobuf:"bytes,5,opt,name=expiry_month,json=expiryMonth,proto3" json:"expiry_month,omitempty"`
	ExpiryYear           []byte   `protobuf:"bytes,6,opt,name=expiry_year,json=expiryYear,proto3" json:"expiry_year,omitempty"`
	IssueNumber          []byte   `protobuf:"bytes,7,opt,name=issue_number,json=issueNumber,proto3" json:"issue_number,omitempty"`
	TransportKeyId       string   `protobuf:"bytes,8,opt,name=transport_key_id,json=transportKeyId,proto3" json:"transport_key_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PaymentMethodSchemaEncryptedCard) Reset()         { *m = PaymentMethodSchemaEncryptedCard{} }
func (m *PaymentMethodSchemaEncryptedCard) String() string { return proto.CompactTextString(m) }
func (*PaymentMethodSchemaEncryptedCard) ProtoMessage()    {}
func (*PaymentMethodSchemaEncryptedCard) Descriptor() ([]byte, []int) {
	return fileDescriptor_acf1a4ab3aa467b5, []int{3}
}
func (m *PaymentMethodSchemaEncryptedCard) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PaymentMethodSchemaEncryptedCard.Unmarshal(m, b)
}
func (m *PaymentMethodSchemaEncryptedCard) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PaymentMethodSchemaEncryptedCard.Marshal(b, m, deterministic)
}
func (m *PaymentMethodSchemaEncryptedCard) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PaymentMethodSchemaEncryptedCard.Merge(m, src)
}
func (m *PaymentMethodSchemaEncryptedCard) XXX_Size() int {
	return xxx_messageInfo_PaymentMethodSchemaEncryptedCard.Size(m)
}
func (m *PaymentMethodSchemaEncryptedCard) XXX_DiscardUnknown() {
	xxx_messageInfo_PaymentMethodSchemaEncryptedCard.DiscardUnknown(m)
}

var xxx_messageInfo_PaymentMethodSchemaEncryptedCard proto.InternalMessageInfo

func (m *PaymentMethodSchemaEncryptedCard) GetNameOnCard() []byte {
	if m != nil {
		return m.NameOnCard
	}
	return nil
}

func (m *PaymentMethodSchemaEncryptedCard) GetNumber() []byte {
	if m != nil {
		return m.Number
	}
	return nil
}

func (m *PaymentMethodSchemaEncryptedCard) GetValidFromMonth() []byte {
	if m != nil {
		return m.ValidFromMonth
	}
	return nil
}

func (m *PaymentMethodSchemaEncryptedCard) GetValidFromYear() []byte {
	if m != nil {
		return m.ValidFromYear
	}
	return nil
}

func (m *PaymentMethodSchemaEncryptedCard) GetExpiryMonth() []byte {
	if m != nil {
		return m.ExpiryMonth
	}
	return nil
}

func (m *PaymentMethodSchemaEncryptedCard) GetExpiryYear() []byte {
	if m != nil {
		return m.ExpiryYear
	}
	return nil
}

func (m *PaymentMethodSchemaEncryptedCard) GetIssueNumber() []byte {
	if m != nil {
		return m.IssueNumber
	}
	return nil
}

func (m *PaymentMethodSchemaEncryptedCard) GetTransportKeyId() string {
	if m != nil {
		return m.TransportKeyId
	}
	return ""
}

type PaymentMethodSchemaCard struct {
	NameOnCard           string   `protobuf:"bytes,1,opt,name=name_on_card,json=nameOnCard,proto3" json:"name_on_card,omitempty"`
	ValidFromMonth       int32    `protobuf:"varint,2,opt,name=valid_from_month,json=validFromMonth,proto3" json:"valid_from_month,omitempty"`
	ValidFromYear        int32    `protobuf:"varint,3,opt,name=valid_from_year,json=validFromYear,proto3" json:"valid_from_year,omitempty"`
	ExpiryMonth          int32    `protobuf:"varint,4,opt,name=expiry_month,json=expiryMonth,proto3" json:"expiry_month,omitempty"`
	ExpiryYear           int32    `protobuf:"varint,5,opt,name=expiry_year,json=expiryYear,proto3" json:"expiry_year,omitempty"`
	IssueNumber          int32    `protobuf:"varint,6,opt,name=issue_number,json=issueNumber,proto3" json:"issue_number,omitempty"`
	Number               string   `protobuf:"bytes,7,opt,name=number,proto3" json:"number,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PaymentMethodSchemaCard) Reset()         { *m = PaymentMethodSchemaCard{} }
func (m *PaymentMethodSchemaCard) String() string { return proto.CompactTextString(m) }
func (*PaymentMethodSchemaCard) ProtoMessage()    {}
func (*PaymentMethodSchemaCard) Descriptor() ([]byte, []int) {
	return fileDescriptor_acf1a4ab3aa467b5, []int{4}
}
func (m *PaymentMethodSchemaCard) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PaymentMethodSchemaCard.Unmarshal(m, b)
}
func (m *PaymentMethodSchemaCard) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PaymentMethodSchemaCard.Marshal(b, m, deterministic)
}
func (m *PaymentMethodSchemaCard) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PaymentMethodSchemaCard.Merge(m, src)
}
func (m *PaymentMethodSchemaCard) XXX_Size() int {
	return xxx_messageInfo_PaymentMethodSchemaCard.Size(m)
}
func (m *PaymentMethodSchemaCard) XXX_DiscardUnknown() {
	xxx_messageInfo_PaymentMethodSchemaCard.DiscardUnknown(m)
}

var xxx_messageInfo_PaymentMethodSchemaCard proto.InternalMessageInfo

func (m *PaymentMethodSchemaCard) GetNameOnCard() string {
	if m != nil {
		return m.NameOnCard
	}
	return ""
}

func (m *PaymentMethodSchemaCard) GetValidFromMonth() int32 {
	if m != nil {
		return m.ValidFromMonth
	}
	return 0
}

func (m *PaymentMethodSchemaCard) GetValidFromYear() int32 {
	if m != nil {
		return m.ValidFromYear
	}
	return 0
}

func (m *PaymentMethodSchemaCard) GetExpiryMonth() int32 {
	if m != nil {
		return m.ExpiryMonth
	}
	return 0
}

func (m *PaymentMethodSchemaCard) GetExpiryYear() int32 {
	if m != nil {
		return m.ExpiryYear
	}
	return 0
}

func (m *PaymentMethodSchemaCard) GetIssueNumber() int32 {
	if m != nil {
		return m.IssueNumber
	}
	return 0
}

func (m *PaymentMethodSchemaCard) GetNumber() string {
	if m != nil {
		return m.Number
	}
	return ""
}

type PaymentMethodIssuerData struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Country              string   `protobuf:"bytes,2,opt,name=country,proto3" json:"country,omitempty"`
	Phone                string   `protobuf:"bytes,3,opt,name=phone,proto3" json:"phone,omitempty"`
	Url                  string   `protobuf:"bytes,4,opt,name=url,proto3" json:"url,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PaymentMethodIssuerData) Reset()         { *m = PaymentMethodIssuerData{} }
func (m *PaymentMethodIssuerData) String() string { return proto.CompactTextString(m) }
func (*PaymentMethodIssuerData) ProtoMessage()    {}
func (*PaymentMethodIssuerData) Descriptor() ([]byte, []int) {
	return fileDescriptor_acf1a4ab3aa467b5, []int{5}
}
func (m *PaymentMethodIssuerData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PaymentMethodIssuerData.Unmarshal(m, b)
}
func (m *PaymentMethodIssuerData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PaymentMethodIssuerData.Marshal(b, m, deterministic)
}
func (m *PaymentMethodIssuerData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PaymentMethodIssuerData.Merge(m, src)
}
func (m *PaymentMethodIssuerData) XXX_Size() int {
	return xxx_messageInfo_PaymentMethodIssuerData.Size(m)
}
func (m *PaymentMethodIssuerData) XXX_DiscardUnknown() {
	xxx_messageInfo_PaymentMethodIssuerData.DiscardUnknown(m)
}

var xxx_messageInfo_PaymentMethodIssuerData proto.InternalMessageInfo

func (m *PaymentMethodIssuerData) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *PaymentMethodIssuerData) GetCountry() string {
	if m != nil {
		return m.Country
	}
	return ""
}

func (m *PaymentMethodIssuerData) GetPhone() string {
	if m != nil {
		return m.Phone
	}
	return ""
}

func (m *PaymentMethodIssuerData) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

type PaymentMethodBinData struct {
	Scheme               string                   `protobuf:"bytes,1,opt,name=scheme,proto3" json:"scheme,omitempty"`
	Brand                string                   `protobuf:"bytes,2,opt,name=brand,proto3" json:"brand,omitempty"`
	SubType              string                   `protobuf:"bytes,3,opt,name=sub_type,json=subType,proto3" json:"sub_type,omitempty"`
	CardType             string                   `protobuf:"bytes,4,opt,name=card_type,json=cardType,proto3" json:"card_type,omitempty"`
	FundingType          string                   `protobuf:"bytes,5,opt,name=funding_type,json=fundingType,proto3" json:"funding_type,omitempty"`
	Issuer               *PaymentMethodIssuerData `protobuf:"bytes,6,opt,name=issuer,proto3" json:"issuer,omitempty"`
	Business             bool                     `protobuf:"varint,7,opt,name=business,proto3" json:"business,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *PaymentMethodBinData) Reset()         { *m = PaymentMethodBinData{} }
func (m *PaymentMethodBinData) String() string { return proto.CompactTextString(m) }
func (*PaymentMethodBinData) ProtoMessage()    {}
func (*PaymentMethodBinData) Descriptor() ([]byte, []int) {
	return fileDescriptor_acf1a4ab3aa467b5, []int{6}
}
func (m *PaymentMethodBinData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PaymentMethodBinData.Unmarshal(m, b)
}
func (m *PaymentMethodBinData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PaymentMethodBinData.Marshal(b, m, deterministic)
}
func (m *PaymentMethodBinData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PaymentMethodBinData.Merge(m, src)
}
func (m *PaymentMethodBinData) XXX_Size() int {
	return xxx_messageInfo_PaymentMethodBinData.Size(m)
}
func (m *PaymentMethodBinData) XXX_DiscardUnknown() {
	xxx_messageInfo_PaymentMethodBinData.DiscardUnknown(m)
}

var xxx_messageInfo_PaymentMethodBinData proto.InternalMessageInfo

func (m *PaymentMethodBinData) GetScheme() string {
	if m != nil {
		return m.Scheme
	}
	return ""
}

func (m *PaymentMethodBinData) GetBrand() string {
	if m != nil {
		return m.Brand
	}
	return ""
}

func (m *PaymentMethodBinData) GetSubType() string {
	if m != nil {
		return m.SubType
	}
	return ""
}

func (m *PaymentMethodBinData) GetCardType() string {
	if m != nil {
		return m.CardType
	}
	return ""
}

func (m *PaymentMethodBinData) GetFundingType() string {
	if m != nil {
		return m.FundingType
	}
	return ""
}

func (m *PaymentMethodBinData) GetIssuer() *PaymentMethodIssuerData {
	if m != nil {
		return m.Issuer
	}
	return nil
}

func (m *PaymentMethodBinData) GetBusiness() bool {
	if m != nil {
		return m.Business
	}
	return false
}

type PaymentMethodSchemaPcib struct {
	Tsid                 string                `protobuf:"bytes,1,opt,name=tsid,proto3" json:"tsid,omitempty"`
	Tsidk                string                `protobuf:"bytes,2,opt,name=tsidk,proto3" json:"tsidk,omitempty"`
	TokenId              string                `protobuf:"bytes,3,opt,name=token_id,json=tokenId,proto3" json:"token_id,omitempty"`
	Token                string                `protobuf:"bytes,4,opt,name=token,proto3" json:"token,omitempty"`
	TokenExpiry          int64                 `protobuf:"varint,5,opt,name=token_expiry,json=tokenExpiry,proto3" json:"token_expiry,omitempty"`
	EphemeralToken       string                `protobuf:"bytes,6,opt,name=ephemeral_token,json=ephemeralToken,proto3" json:"ephemeral_token,omitempty"`
	Bin                  string                `protobuf:"bytes,7,opt,name=bin,proto3" json:"bin,omitempty"`
	Last4                string                `protobuf:"bytes,8,opt,name=last4,proto3" json:"last4,omitempty"`
	ExpiryMonth          int64                 `protobuf:"varint,9,opt,name=expiry_month,json=expiryMonth,proto3" json:"expiry_month,omitempty"`
	ExpiryYear           int64                 `protobuf:"varint,10,opt,name=expiry_year,json=expiryYear,proto3" json:"expiry_year,omitempty"`
	NameOnCard           string                `protobuf:"bytes,11,opt,name=name_on_card,json=nameOnCard,proto3" json:"name_on_card,omitempty"`
	Pfp                  string                `protobuf:"bytes,12,opt,name=pfp,proto3" json:"pfp,omitempty"`
	BinData              *PaymentMethodBinData `protobuf:"bytes,13,opt,name=bin_data,json=binData,proto3" json:"bin_data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *PaymentMethodSchemaPcib) Reset()         { *m = PaymentMethodSchemaPcib{} }
func (m *PaymentMethodSchemaPcib) String() string { return proto.CompactTextString(m) }
func (*PaymentMethodSchemaPcib) ProtoMessage()    {}
func (*PaymentMethodSchemaPcib) Descriptor() ([]byte, []int) {
	return fileDescriptor_acf1a4ab3aa467b5, []int{7}
}
func (m *PaymentMethodSchemaPcib) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PaymentMethodSchemaPcib.Unmarshal(m, b)
}
func (m *PaymentMethodSchemaPcib) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PaymentMethodSchemaPcib.Marshal(b, m, deterministic)
}
func (m *PaymentMethodSchemaPcib) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PaymentMethodSchemaPcib.Merge(m, src)
}
func (m *PaymentMethodSchemaPcib) XXX_Size() int {
	return xxx_messageInfo_PaymentMethodSchemaPcib.Size(m)
}
func (m *PaymentMethodSchemaPcib) XXX_DiscardUnknown() {
	xxx_messageInfo_PaymentMethodSchemaPcib.DiscardUnknown(m)
}

var xxx_messageInfo_PaymentMethodSchemaPcib proto.InternalMessageInfo

func (m *PaymentMethodSchemaPcib) GetTsid() string {
	if m != nil {
		return m.Tsid
	}
	return ""
}

func (m *PaymentMethodSchemaPcib) GetTsidk() string {
	if m != nil {
		return m.Tsidk
	}
	return ""
}

func (m *PaymentMethodSchemaPcib) GetTokenId() string {
	if m != nil {
		return m.TokenId
	}
	return ""
}

func (m *PaymentMethodSchemaPcib) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

func (m *PaymentMethodSchemaPcib) GetTokenExpiry() int64 {
	if m != nil {
		return m.TokenExpiry
	}
	return 0
}

func (m *PaymentMethodSchemaPcib) GetEphemeralToken() string {
	if m != nil {
		return m.EphemeralToken
	}
	return ""
}

func (m *PaymentMethodSchemaPcib) GetBin() string {
	if m != nil {
		return m.Bin
	}
	return ""
}

func (m *PaymentMethodSchemaPcib) GetLast4() string {
	if m != nil {
		return m.Last4
	}
	return ""
}

func (m *PaymentMethodSchemaPcib) GetExpiryMonth() int64 {
	if m != nil {
		return m.ExpiryMonth
	}
	return 0
}

func (m *PaymentMethodSchemaPcib) GetExpiryYear() int64 {
	if m != nil {
		return m.ExpiryYear
	}
	return 0
}

func (m *PaymentMethodSchemaPcib) GetNameOnCard() string {
	if m != nil {
		return m.NameOnCard
	}
	return ""
}

func (m *PaymentMethodSchemaPcib) GetPfp() string {
	if m != nil {
		return m.Pfp
	}
	return ""
}

func (m *PaymentMethodSchemaPcib) GetBinData() *PaymentMethodBinData {
	if m != nil {
		return m.BinData
	}
	return nil
}

type PaymentMethodSchemaEncryptedDirectDebit struct {
	AccountNumber        []byte   `protobuf:"bytes,1,opt,name=account_number,json=accountNumber,proto3" json:"account_number,omitempty"`
	SortCode             []byte   `protobuf:"bytes,2,opt,name=sort_code,json=sortCode,proto3" json:"sort_code,omitempty"`
	AccountHoldersName   []byte   `protobuf:"bytes,3,opt,name=account_holders_name,json=accountHoldersName,proto3" json:"account_holders_name,omitempty"`
	PayerReference       []byte   `protobuf:"bytes,4,opt,name=payer_reference,json=payerReference,proto3" json:"payer_reference,omitempty"`
	TransportKeyId       string   `protobuf:"bytes,5,opt,name=transport_key_id,json=transportKeyId,proto3" json:"transport_key_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PaymentMethodSchemaEncryptedDirectDebit) Reset() {
	*m = PaymentMethodSchemaEncryptedDirectDebit{}
}
func (m *PaymentMethodSchemaEncryptedDirectDebit) String() string { return proto.CompactTextString(m) }
func (*PaymentMethodSchemaEncryptedDirectDebit) ProtoMessage()    {}
func (*PaymentMethodSchemaEncryptedDirectDebit) Descriptor() ([]byte, []int) {
	return fileDescriptor_acf1a4ab3aa467b5, []int{8}
}
func (m *PaymentMethodSchemaEncryptedDirectDebit) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PaymentMethodSchemaEncryptedDirectDebit.Unmarshal(m, b)
}
func (m *PaymentMethodSchemaEncryptedDirectDebit) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PaymentMethodSchemaEncryptedDirectDebit.Marshal(b, m, deterministic)
}
func (m *PaymentMethodSchemaEncryptedDirectDebit) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PaymentMethodSchemaEncryptedDirectDebit.Merge(m, src)
}
func (m *PaymentMethodSchemaEncryptedDirectDebit) XXX_Size() int {
	return xxx_messageInfo_PaymentMethodSchemaEncryptedDirectDebit.Size(m)
}
func (m *PaymentMethodSchemaEncryptedDirectDebit) XXX_DiscardUnknown() {
	xxx_messageInfo_PaymentMethodSchemaEncryptedDirectDebit.DiscardUnknown(m)
}

var xxx_messageInfo_PaymentMethodSchemaEncryptedDirectDebit proto.InternalMessageInfo

func (m *PaymentMethodSchemaEncryptedDirectDebit) GetAccountNumber() []byte {
	if m != nil {
		return m.AccountNumber
	}
	return nil
}

func (m *PaymentMethodSchemaEncryptedDirectDebit) GetSortCode() []byte {
	if m != nil {
		return m.SortCode
	}
	return nil
}

func (m *PaymentMethodSchemaEncryptedDirectDebit) GetAccountHoldersName() []byte {
	if m != nil {
		return m.AccountHoldersName
	}
	return nil
}

func (m *PaymentMethodSchemaEncryptedDirectDebit) GetPayerReference() []byte {
	if m != nil {
		return m.PayerReference
	}
	return nil
}

func (m *PaymentMethodSchemaEncryptedDirectDebit) GetTransportKeyId() string {
	if m != nil {
		return m.TransportKeyId
	}
	return ""
}

type PaymentMethodSchemaDirectDebit struct {
	AccountNumber        string   `protobuf:"bytes,1,opt,name=account_number,json=accountNumber,proto3" json:"account_number,omitempty"`
	SortCode             string   `protobuf:"bytes,2,opt,name=sort_code,json=sortCode,proto3" json:"sort_code,omitempty"`
	AccountHoldersName   string   `protobuf:"bytes,3,opt,name=account_holders_name,json=accountHoldersName,proto3" json:"account_holders_name,omitempty"`
	PayerReference       string   `protobuf:"bytes,4,opt,name=payer_reference,json=payerReference,proto3" json:"payer_reference,omitempty"`
	TransportKeyId       string   `protobuf:"bytes,5,opt,name=transport_key_id,json=transportKeyId,proto3" json:"transport_key_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PaymentMethodSchemaDirectDebit) Reset()         { *m = PaymentMethodSchemaDirectDebit{} }
func (m *PaymentMethodSchemaDirectDebit) String() string { return proto.CompactTextString(m) }
func (*PaymentMethodSchemaDirectDebit) ProtoMessage()    {}
func (*PaymentMethodSchemaDirectDebit) Descriptor() ([]byte, []int) {
	return fileDescriptor_acf1a4ab3aa467b5, []int{9}
}
func (m *PaymentMethodSchemaDirectDebit) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PaymentMethodSchemaDirectDebit.Unmarshal(m, b)
}
func (m *PaymentMethodSchemaDirectDebit) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PaymentMethodSchemaDirectDebit.Marshal(b, m, deterministic)
}
func (m *PaymentMethodSchemaDirectDebit) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PaymentMethodSchemaDirectDebit.Merge(m, src)
}
func (m *PaymentMethodSchemaDirectDebit) XXX_Size() int {
	return xxx_messageInfo_PaymentMethodSchemaDirectDebit.Size(m)
}
func (m *PaymentMethodSchemaDirectDebit) XXX_DiscardUnknown() {
	xxx_messageInfo_PaymentMethodSchemaDirectDebit.DiscardUnknown(m)
}

var xxx_messageInfo_PaymentMethodSchemaDirectDebit proto.InternalMessageInfo

func (m *PaymentMethodSchemaDirectDebit) GetAccountNumber() string {
	if m != nil {
		return m.AccountNumber
	}
	return ""
}

func (m *PaymentMethodSchemaDirectDebit) GetSortCode() string {
	if m != nil {
		return m.SortCode
	}
	return ""
}

func (m *PaymentMethodSchemaDirectDebit) GetAccountHoldersName() string {
	if m != nil {
		return m.AccountHoldersName
	}
	return ""
}

func (m *PaymentMethodSchemaDirectDebit) GetPayerReference() string {
	if m != nil {
		return m.PayerReference
	}
	return ""
}

func (m *PaymentMethodSchemaDirectDebit) GetTransportKeyId() string {
	if m != nil {
		return m.TransportKeyId
	}
	return ""
}

func init() {
	proto.RegisterEnum("chargehive.chtype.PaymentMethodSchema", PaymentMethodSchema_name, PaymentMethodSchema_value)
	golang_proto.RegisterEnum("chargehive.chtype.PaymentMethodSchema", PaymentMethodSchema_name, PaymentMethodSchema_value)
	proto.RegisterType((*PaymentMethodSchemaApplePay)(nil), "chargehive.chtype.PaymentMethodSchemaApplePay")
	golang_proto.RegisterType((*PaymentMethodSchemaApplePay)(nil), "chargehive.chtype.PaymentMethodSchemaApplePay")
	proto.RegisterType((*PaymentMethodSchemaGooglePay)(nil), "chargehive.chtype.PaymentMethodSchemaGooglePay")
	golang_proto.RegisterType((*PaymentMethodSchemaGooglePay)(nil), "chargehive.chtype.PaymentMethodSchemaGooglePay")
	proto.RegisterType((*PaymentMethodSchemaPayPal)(nil), "chargehive.chtype.PaymentMethodSchemaPayPal")
	golang_proto.RegisterType((*PaymentMethodSchemaPayPal)(nil), "chargehive.chtype.PaymentMethodSchemaPayPal")
	proto.RegisterType((*PaymentMethodSchemaEncryptedCard)(nil), "chargehive.chtype.PaymentMethodSchemaEncryptedCard")
	golang_proto.RegisterType((*PaymentMethodSchemaEncryptedCard)(nil), "chargehive.chtype.PaymentMethodSchemaEncryptedCard")
	proto.RegisterType((*PaymentMethodSchemaCard)(nil), "chargehive.chtype.PaymentMethodSchemaCard")
	golang_proto.RegisterType((*PaymentMethodSchemaCard)(nil), "chargehive.chtype.PaymentMethodSchemaCard")
	proto.RegisterType((*PaymentMethodIssuerData)(nil), "chargehive.chtype.PaymentMethodIssuerData")
	golang_proto.RegisterType((*PaymentMethodIssuerData)(nil), "chargehive.chtype.PaymentMethodIssuerData")
	proto.RegisterType((*PaymentMethodBinData)(nil), "chargehive.chtype.PaymentMethodBinData")
	golang_proto.RegisterType((*PaymentMethodBinData)(nil), "chargehive.chtype.PaymentMethodBinData")
	proto.RegisterType((*PaymentMethodSchemaPcib)(nil), "chargehive.chtype.PaymentMethodSchemaPcib")
	golang_proto.RegisterType((*PaymentMethodSchemaPcib)(nil), "chargehive.chtype.PaymentMethodSchemaPcib")
	proto.RegisterType((*PaymentMethodSchemaEncryptedDirectDebit)(nil), "chargehive.chtype.PaymentMethodSchemaEncryptedDirectDebit")
	golang_proto.RegisterType((*PaymentMethodSchemaEncryptedDirectDebit)(nil), "chargehive.chtype.PaymentMethodSchemaEncryptedDirectDebit")
	proto.RegisterType((*PaymentMethodSchemaDirectDebit)(nil), "chargehive.chtype.PaymentMethodSchemaDirectDebit")
	golang_proto.RegisterType((*PaymentMethodSchemaDirectDebit)(nil), "chargehive.chtype.PaymentMethodSchemaDirectDebit")
}

func init() {
	proto.RegisterFile("chargehive/chtype/payment_method_schema.proto", fileDescriptor_acf1a4ab3aa467b5)
}
func init() {
	golang_proto.RegisterFile("chargehive/chtype/payment_method_schema.proto", fileDescriptor_acf1a4ab3aa467b5)
}

var fileDescriptor_acf1a4ab3aa467b5 = []byte{
	// 1136 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x56, 0x4f, 0x6f, 0x1b, 0x45,
	0x14, 0xaf, 0xed, 0xd8, 0xb1, 0x9f, 0x9d, 0xd4, 0x1d, 0xaa, 0xe2, 0x26, 0x25, 0x4d, 0x4c, 0x69,
	0xaa, 0x4a, 0x4d, 0x10, 0xf4, 0x0b, 0x38, 0xb6, 0x69, 0x2c, 0x9a, 0xc4, 0xda, 0x9a, 0x4a, 0x41,
	0x95, 0x56, 0xb3, 0xbb, 0x13, 0x7b, 0x94, 0xf5, 0xcc, 0x6a, 0x76, 0x9c, 0x76, 0xbf, 0x03, 0x77,
	0x4e, 0xdc, 0x38, 0xf3, 0x15, 0xe0, 0xcc, 0x89, 0xaf, 0x00, 0x9c, 0xb8, 0xf2, 0x05, 0x40, 0xf3,
	0x66, 0x9c, 0xb8, 0xcd, 0x36, 0x29, 0xdc, 0xe6, 0xfd, 0xde, 0xcf, 0xef, 0xcf, 0xcf, 0xef, 0x3d,
	0x2d, 0x3c, 0x09, 0x27, 0x54, 0x8d, 0xd9, 0x84, 0x9f, 0xb1, 0xdd, 0x70, 0xa2, 0xb3, 0x84, 0xed,
	0x26, 0x34, 0x9b, 0x32, 0xa1, 0xfd, 0x29, 0xd3, 0x13, 0x19, 0xf9, 0x69, 0x38, 0x61, 0x53, 0xba,
	0x93, 0x28, 0xa9, 0x25, 0xb9, 0x75, 0x41, 0xdf, 0xb1, 0xf4, 0xb5, 0x27, 0x63, 0xae, 0x27, 0xb3,
	0x60, 0x27, 0x94, 0xd3, 0xdd, 0xb1, 0x1c, 0xcb, 0x5d, 0x64, 0x06, 0xb3, 0x13, 0xb4, 0xd0, 0xc0,
	0x97, 0x8d, 0xd0, 0xfe, 0xa1, 0x00, 0xeb, 0x43, 0x9b, 0xe1, 0x00, 0x13, 0xbc, 0xc0, 0xf8, 0x9d,
	0x24, 0x89, 0xd9, 0x90, 0x66, 0xe4, 0x3e, 0xd4, 0x53, 0x96, 0xa6, 0x5c, 0x0a, 0x7f, 0xa6, 0xe2,
	0x56, 0x61, 0xb3, 0xf0, 0xa8, 0xe6, 0x81, 0x83, 0xbe, 0x51, 0x31, 0x79, 0x02, 0x84, 0x0b, 0xae,
	0x39, 0xd5, 0xfc, 0x8c, 0xf9, 0xa1, 0x14, 0x9a, 0xbd, 0xd1, 0xad, 0x22, 0xf2, 0x6e, 0x5d, 0x78,
	0xba, 0xd6, 0x41, 0x6e, 0x43, 0x59, 0xcb, 0x53, 0x26, 0x5a, 0x25, 0x64, 0x58, 0x83, 0xb4, 0x60,
	0xd9, 0x85, 0x6c, 0x2d, 0x21, 0x3e, 0x37, 0xdb, 0x3f, 0x15, 0xe0, 0x5e, 0x4e, 0x7d, 0xcf, 0xa4,
	0x1c, 0xdb, 0x02, 0x1f, 0xc2, 0xcd, 0x58, 0xbe, 0xf6, 0xcf, 0x68, 0x3c, 0x63, 0xbe, 0x0d, 0x6d,
	0x8b, 0x5c, 0x89, 0xe5, 0xeb, 0x97, 0x06, 0x1d, 0x61, 0x8a, 0x4d, 0xa8, 0x47, 0x2c, 0x0d, 0x15,
	0x4f, 0xb4, 0x49, 0x63, 0x0b, 0x5c, 0x84, 0xc8, 0x16, 0x34, 0x42, 0xaa, 0x22, 0x3f, 0x62, 0x9a,
	0xf2, 0x38, 0x75, 0x15, 0xd6, 0x0d, 0xd6, 0xb3, 0xd0, 0x39, 0x45, 0x30, 0xfd, 0x5a, 0xaa, 0x53,
	0x57, 0x2c, 0x52, 0x0e, 0x2d, 0xd4, 0x5e, 0x87, 0xbb, 0x39, 0xf5, 0x0e, 0x69, 0x36, 0xa4, 0x71,
	0xfb, 0xe7, 0x22, 0x6c, 0xe6, 0x78, 0xfb, 0x22, 0x54, 0x59, 0xa2, 0x59, 0xd4, 0xa5, 0x2a, 0x22,
	0x9b, 0xd0, 0x10, 0x74, 0xca, 0x7c, 0x29, 0x7c, 0x13, 0x18, 0xdb, 0x69, 0x78, 0x60, 0xb0, 0x23,
	0x81, 0x8c, 0x3b, 0x50, 0x11, 0xb3, 0x69, 0xc0, 0x14, 0xb6, 0xd1, 0xf0, 0x9c, 0x45, 0x1e, 0x41,
	0xf3, 0x8c, 0xc6, 0x3c, 0xf2, 0x4f, 0x94, 0x9c, 0xfa, 0x53, 0x29, 0xf4, 0x04, 0xbb, 0x68, 0x78,
	0xab, 0x88, 0x7f, 0xa5, 0xe4, 0xf4, 0xc0, 0xa0, 0x46, 0xb5, 0x05, 0x66, 0xc6, 0xa8, 0xc2, 0x5e,
	0x1a, 0xde, 0xca, 0x39, 0xf1, 0x98, 0x51, 0x65, 0x1a, 0x66, 0x6f, 0x12, 0xae, 0x32, 0x17, 0xad,
	0x8c, 0xa4, 0xba, 0xc5, 0x6c, 0xa8, 0xfb, 0xe0, 0x4c, 0x1b, 0xa6, 0x62, 0xab, 0xb5, 0xd0, 0x3c,
	0x06, 0x4f, 0xd3, 0x19, 0xf3, 0x5d, 0xcd, 0xcb, 0x36, 0x06, 0x62, 0x87, 0xe7, 0x85, 0x6b, 0x45,
	0x45, 0x9a, 0x48, 0xa5, 0xfd, 0x53, 0x96, 0xf9, 0x3c, 0x6a, 0x55, 0x51, 0xdb, 0xd5, 0x73, 0xfc,
	0x6b, 0x96, 0x0d, 0xa2, 0xf6, 0x77, 0x45, 0xf8, 0x38, 0x47, 0xc1, 0xf7, 0x0a, 0x57, 0x7b, 0x4b,
	0xb8, 0x3c, 0x81, 0x8c, 0x84, 0xe5, 0x0f, 0x11, 0xa8, 0x84, 0xc4, 0x6b, 0x04, 0x5a, 0x42, 0xd2,
	0x55, 0x02, 0x95, 0x91, 0x71, 0x95, 0x40, 0x15, 0x1b, 0x63, 0x51, 0xa0, 0x8b, 0x7f, 0x7c, 0x19,
	0x9b, 0x72, 0x56, 0x5b, 0xbe, 0xa3, 0xc6, 0xc0, 0xfc, 0x46, 0xf5, 0xa8, 0xa6, 0x84, 0xc0, 0x92,
	0xe9, 0xdc, 0xa9, 0x80, 0x6f, 0xb3, 0x67, 0xa1, 0x9c, 0x09, 0xad, 0x32, 0xb7, 0x00, 0x73, 0xd3,
	0xec, 0x65, 0x32, 0x91, 0x82, 0xcd, 0xf7, 0x12, 0x0d, 0xd2, 0x84, 0x92, 0xd9, 0x7a, 0x3b, 0xe6,
	0xe6, 0xd9, 0xfe, 0xa7, 0x00, 0xb7, 0xdf, 0xca, 0xb8, 0xc7, 0x05, 0xa6, 0xbb, 0x03, 0x15, 0x3c,
	0x4d, 0xf3, 0x84, 0xce, 0x32, 0x81, 0x03, 0x45, 0x45, 0xe4, 0x12, 0x5a, 0x83, 0xdc, 0x85, 0x6a,
	0x3a, 0x0b, 0x7c, 0x73, 0xb1, 0x5c, 0xc6, 0xe5, 0x74, 0x16, 0x8c, 0xb2, 0x84, 0x91, 0x75, 0xa8,
	0xe1, 0x8e, 0xa1, 0xcf, 0x66, 0xae, 0x1a, 0x00, 0x9d, 0x5b, 0xd0, 0x38, 0x99, 0x89, 0x88, 0x8b,
	0xb1, 0xf5, 0x97, 0xed, 0x02, 0x3a, 0x0c, 0x29, 0x7b, 0x50, 0x41, 0xe5, 0xac, 0x8e, 0xf5, 0x2f,
	0x1e, 0xef, 0x5c, 0x3a, 0x92, 0x3b, 0xef, 0xd1, 0xcc, 0x73, 0xbf, 0x24, 0x6b, 0x50, 0x0d, 0x66,
	0x29, 0x17, 0x2c, 0x4d, 0x51, 0xf0, 0xaa, 0x77, 0x6e, 0xb7, 0x7f, 0x2c, 0xe5, 0x4e, 0xe0, 0x30,
	0xe4, 0x81, 0xd1, 0x5c, 0xa7, 0x7c, 0x3e, 0x79, 0xf8, 0xc6, 0x8b, 0x97, 0xf2, 0xe8, 0x74, 0x2e,
	0x00, 0x1a, 0x46, 0x00, 0x3c, 0x56, 0x66, 0xd2, 0x9d, 0x00, 0x68, 0x0f, 0xa2, 0x8b, 0x13, 0xb9,
	0xb4, 0x78, 0x22, 0xb7, 0xa0, 0x61, 0x7f, 0x60, 0x07, 0x07, 0x3b, 0x2f, 0x79, 0x75, 0xc4, 0xfa,
	0x08, 0x91, 0x6d, 0xb8, 0xc9, 0x12, 0x23, 0xba, 0xa2, 0xb1, 0x3b, 0x85, 0x15, 0xbb, 0x44, 0xe7,
	0xb0, 0xbd, 0x85, 0x4d, 0x28, 0x05, 0x5c, 0xb8, 0x51, 0x32, 0x4f, 0x93, 0x33, 0xa6, 0xa9, 0x7e,
	0xea, 0xb6, 0xce, 0x1a, 0x97, 0x86, 0xbb, 0x66, 0x73, 0x5e, 0x31, 0xdc, 0x80, 0x8c, 0xc5, 0xe1,
	0x7e, 0x77, 0x29, 0xeb, 0x97, 0x96, 0xb2, 0x09, 0xa5, 0xe4, 0x24, 0x69, 0x35, 0x6c, 0x35, 0xc9,
	0x49, 0x42, 0xf6, 0xa0, 0x1a, 0x70, 0xe1, 0x47, 0x54, 0xd3, 0xd6, 0x0a, 0xfe, 0x89, 0xdb, 0xd7,
	0xfd, 0x89, 0x6e, 0x0c, 0xbd, 0xe5, 0xc0, 0x3e, 0xda, 0x7f, 0x17, 0x60, 0xfb, 0xaa, 0x53, 0xdb,
	0xe3, 0x8a, 0x85, 0xba, 0xc7, 0x02, 0xae, 0xc9, 0x67, 0xb0, 0x4a, 0x43, 0xdc, 0x84, 0xf9, 0x0a,
	0xda, 0x9b, 0xbb, 0xe2, 0x50, 0xb7, 0x84, 0xeb, 0x50, 0x4b, 0xcd, 0x81, 0x0a, 0x65, 0xc4, 0xdc,
	0xe5, 0xad, 0x1a, 0xa0, 0x2b, 0x23, 0x46, 0x3e, 0x87, 0xdb, 0xf3, 0x18, 0x13, 0x19, 0x47, 0x4c,
	0xa5, 0x3e, 0xae, 0x9f, 0xbd, 0xbf, 0xc4, 0xf9, 0xf6, 0xad, 0xeb, 0xd0, 0x2c, 0xe3, 0x36, 0xdc,
	0x4c, 0x68, 0xc6, 0x94, 0xaf, 0xd8, 0x09, 0x53, 0x4c, 0x84, 0xcc, 0xdd, 0xe0, 0x55, 0x84, 0xbd,
	0x39, 0x9a, 0x7b, 0x1d, 0xcb, 0xb9, 0xd7, 0xf1, 0xaf, 0x02, 0x6c, 0xe4, 0x34, 0x7d, 0x7d, 0xaf,
	0xb5, 0x6b, 0x7b, 0xad, 0x7d, 0x60, 0xaf, 0xb5, 0xff, 0xd2, 0x6b, 0xed, 0xff, 0xf7, 0xfa, 0xf8,
	0xfb, 0x22, 0x7c, 0x94, 0xd3, 0x2b, 0xd9, 0x82, 0x4f, 0x86, 0x9d, 0xe3, 0x83, 0xfe, 0xe1, 0xc8,
	0x3f, 0xe8, 0x8f, 0xf6, 0x8f, 0x7a, 0xfe, 0x8b, 0xee, 0x7e, 0xff, 0xa0, 0xe3, 0x0f, 0x0e, 0x5f,
	0x76, 0x9e, 0x0f, 0x7a, 0xcd, 0x1b, 0xe4, 0x11, 0x3c, 0xc8, 0xa7, 0xf4, 0x0f, 0xbb, 0xde, 0xf1,
	0x70, 0xd4, 0xef, 0xf9, 0xdd, 0x8e, 0xd7, 0x6b, 0x16, 0xc8, 0x06, 0xac, 0xe5, 0x33, 0xd1, 0x5f,
	0x24, 0x9f, 0xc2, 0xfd, 0x7c, 0x7f, 0x67, 0x38, 0x7c, 0xde, 0xf7, 0x87, 0x9d, 0xe3, 0x66, 0x89,
	0x3c, 0x80, 0xcd, 0x7c, 0xd2, 0xb3, 0xa3, 0xa3, 0x67, 0x8e, 0xb5, 0x44, 0x36, 0xe1, 0x5e, 0x3e,
	0x6b, 0xd8, 0x39, 0x1e, 0x76, 0x9e, 0x37, 0xcb, 0xe4, 0x21, 0xb4, 0xf3, 0x19, 0xbd, 0x81, 0xd7,
	0xef, 0x8e, 0xfc, 0x5e, 0x7f, 0x6f, 0x30, 0x6a, 0x56, 0xf6, 0xe4, 0x6f, 0xbf, 0x6f, 0xdc, 0xf8,
	0xe5, 0xcf, 0x8d, 0xc2, 0xb7, 0x4f, 0x17, 0x3e, 0x06, 0x17, 0xbe, 0x2c, 0xe7, 0x5f, 0x81, 0x31,
	0x15, 0xe3, 0xdd, 0x4b, 0x5f, 0x9c, 0xbf, 0x16, 0x6f, 0x75, 0x11, 0xdb, 0xe7, 0x67, 0xec, 0x55,
	0x17, 0xb1, 0x3f, 0x8a, 0x6b, 0x97, 0xb0, 0x57, 0x07, 0x4c, 0x53, 0xb3, 0xa3, 0x41, 0x05, 0x03,
	0x7e, 0xf9, 0x6f, 0x00, 0x00, 0x00, 0xff, 0xff, 0xde, 0x42, 0xaf, 0xbc, 0xbe, 0x0a, 0x00, 0x00,
}
