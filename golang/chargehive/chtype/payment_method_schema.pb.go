// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        v3.21.12
// source: chargehive/chtype/payment_method_schema.proto

package chtype

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type PaymentMethodSchema int32

const (
	PaymentMethodSchema_PAYMENT_METHOD_SCHEMA_INVALID        PaymentMethodSchema = 0
	PaymentMethodSchema_PAYMENT_METHOD_SCHEMA_ENCRYPTED_CARD PaymentMethodSchema = 1
	PaymentMethodSchema_PAYMENT_METHOD_SCHEMA_CARD           PaymentMethodSchema = 2
	PaymentMethodSchema_PAYMENT_METHOD_SCHEMA_APPLE_PAY      PaymentMethodSchema = 3
	PaymentMethodSchema_PAYMENT_METHOD_SCHEMA_GOOGLE_PAY     PaymentMethodSchema = 4
	PaymentMethodSchema_PAYMENT_METHOD_SCHEMA_PAYPAL         PaymentMethodSchema = 5
	PaymentMethodSchema_PAYMENT_METHOD_SCHEMA_DIRECT_DEBIT   PaymentMethodSchema = 6
	PaymentMethodSchema_PAYMENT_METHOD_SCHEMA_PCIB           PaymentMethodSchema = 7
)

// Enum value maps for PaymentMethodSchema.
var (
	PaymentMethodSchema_name = map[int32]string{
		0: "PAYMENT_METHOD_SCHEMA_INVALID",
		1: "PAYMENT_METHOD_SCHEMA_ENCRYPTED_CARD",
		2: "PAYMENT_METHOD_SCHEMA_CARD",
		3: "PAYMENT_METHOD_SCHEMA_APPLE_PAY",
		4: "PAYMENT_METHOD_SCHEMA_GOOGLE_PAY",
		5: "PAYMENT_METHOD_SCHEMA_PAYPAL",
		6: "PAYMENT_METHOD_SCHEMA_DIRECT_DEBIT",
		7: "PAYMENT_METHOD_SCHEMA_PCIB",
	}
	PaymentMethodSchema_value = map[string]int32{
		"PAYMENT_METHOD_SCHEMA_INVALID":        0,
		"PAYMENT_METHOD_SCHEMA_ENCRYPTED_CARD": 1,
		"PAYMENT_METHOD_SCHEMA_CARD":           2,
		"PAYMENT_METHOD_SCHEMA_APPLE_PAY":      3,
		"PAYMENT_METHOD_SCHEMA_GOOGLE_PAY":     4,
		"PAYMENT_METHOD_SCHEMA_PAYPAL":         5,
		"PAYMENT_METHOD_SCHEMA_DIRECT_DEBIT":   6,
		"PAYMENT_METHOD_SCHEMA_PCIB":           7,
	}
)

func (x PaymentMethodSchema) Enum() *PaymentMethodSchema {
	p := new(PaymentMethodSchema)
	*p = x
	return p
}

func (x PaymentMethodSchema) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PaymentMethodSchema) Descriptor() protoreflect.EnumDescriptor {
	return file_chargehive_chtype_payment_method_schema_proto_enumTypes[0].Descriptor()
}

func (PaymentMethodSchema) Type() protoreflect.EnumType {
	return &file_chargehive_chtype_payment_method_schema_proto_enumTypes[0]
}

func (x PaymentMethodSchema) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PaymentMethodSchema.Descriptor instead.
func (PaymentMethodSchema) EnumDescriptor() ([]byte, []int) {
	return file_chargehive_chtype_payment_method_schema_proto_rawDescGZIP(), []int{0}
}

type PaymentMethodSchemaApplePay struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionUrl        string `protobuf:"bytes,1,opt,name=session_url,json=sessionUrl,proto3" json:"session_url,omitempty"`                      // apple pay session url issued by applePayJS used to identify merchant
	InitiativeContext string `protobuf:"bytes,2,opt,name=initiative_context,json=initiativeContext,proto3" json:"initiative_context,omitempty"` //domain that applePay is used on, must match registered apple pay domain
	Token             string `protobuf:"bytes,3,opt,name=token,proto3" json:"token,omitempty"`                                                  // token response from applePayJS
	Session           string `protobuf:"bytes,4,opt,name=session,proto3" json:"session,omitempty"`                                              // session response from apple
}

func (x *PaymentMethodSchemaApplePay) Reset() {
	*x = PaymentMethodSchemaApplePay{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chargehive_chtype_payment_method_schema_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PaymentMethodSchemaApplePay) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaymentMethodSchemaApplePay) ProtoMessage() {}

func (x *PaymentMethodSchemaApplePay) ProtoReflect() protoreflect.Message {
	mi := &file_chargehive_chtype_payment_method_schema_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaymentMethodSchemaApplePay.ProtoReflect.Descriptor instead.
func (*PaymentMethodSchemaApplePay) Descriptor() ([]byte, []int) {
	return file_chargehive_chtype_payment_method_schema_proto_rawDescGZIP(), []int{0}
}

func (x *PaymentMethodSchemaApplePay) GetSessionUrl() string {
	if x != nil {
		return x.SessionUrl
	}
	return ""
}

func (x *PaymentMethodSchemaApplePay) GetInitiativeContext() string {
	if x != nil {
		return x.InitiativeContext
	}
	return ""
}

func (x *PaymentMethodSchemaApplePay) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *PaymentMethodSchemaApplePay) GetSession() string {
	if x != nil {
		return x.Session
	}
	return ""
}

type PaymentMethodSchemaGooglePay struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LowValueToken string `protobuf:"bytes,1,opt,name=low_value_token,json=lowValueToken,proto3" json:"low_value_token,omitempty"` // low value gateway token is returned from initial call to googlepay
	Description   string `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	CardDetails   string `protobuf:"bytes,3,opt,name=card_details,json=cardDetails,proto3" json:"card_details,omitempty"`
	CardNetwork   string `protobuf:"bytes,4,opt,name=card_network,json=cardNetwork,proto3" json:"card_network,omitempty"`
}

func (x *PaymentMethodSchemaGooglePay) Reset() {
	*x = PaymentMethodSchemaGooglePay{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chargehive_chtype_payment_method_schema_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PaymentMethodSchemaGooglePay) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaymentMethodSchemaGooglePay) ProtoMessage() {}

func (x *PaymentMethodSchemaGooglePay) ProtoReflect() protoreflect.Message {
	mi := &file_chargehive_chtype_payment_method_schema_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaymentMethodSchemaGooglePay.ProtoReflect.Descriptor instead.
func (*PaymentMethodSchemaGooglePay) Descriptor() ([]byte, []int) {
	return file_chargehive_chtype_payment_method_schema_proto_rawDescGZIP(), []int{1}
}

func (x *PaymentMethodSchemaGooglePay) GetLowValueToken() string {
	if x != nil {
		return x.LowValueToken
	}
	return ""
}

func (x *PaymentMethodSchemaGooglePay) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *PaymentMethodSchemaGooglePay) GetCardDetails() string {
	if x != nil {
		return x.CardDetails
	}
	return ""
}

func (x *PaymentMethodSchemaGooglePay) GetCardNetwork() string {
	if x != nil {
		return x.CardNetwork
	}
	return ""
}

type PaymentMethodSchemaPayPal struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *PaymentMethodSchemaPayPal) Reset() {
	*x = PaymentMethodSchemaPayPal{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chargehive_chtype_payment_method_schema_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PaymentMethodSchemaPayPal) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaymentMethodSchemaPayPal) ProtoMessage() {}

func (x *PaymentMethodSchemaPayPal) ProtoReflect() protoreflect.Message {
	mi := &file_chargehive_chtype_payment_method_schema_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaymentMethodSchemaPayPal.ProtoReflect.Descriptor instead.
func (*PaymentMethodSchemaPayPal) Descriptor() ([]byte, []int) {
	return file_chargehive_chtype_payment_method_schema_proto_rawDescGZIP(), []int{2}
}

type PaymentMethodSchemaEncryptedCard struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NameOnCard     []byte `protobuf:"bytes,1,opt,name=name_on_card,json=nameOnCard,proto3" json:"name_on_card,omitempty"`
	Number         []byte `protobuf:"bytes,2,opt,name=number,proto3" json:"number,omitempty"`
	ValidFromMonth []byte `protobuf:"bytes,3,opt,name=valid_from_month,json=validFromMonth,proto3" json:"valid_from_month,omitempty"`
	ValidFromYear  []byte `protobuf:"bytes,4,opt,name=valid_from_year,json=validFromYear,proto3" json:"valid_from_year,omitempty"`
	ExpiryMonth    []byte `protobuf:"bytes,5,opt,name=expiry_month,json=expiryMonth,proto3" json:"expiry_month,omitempty"`
	ExpiryYear     []byte `protobuf:"bytes,6,opt,name=expiry_year,json=expiryYear,proto3" json:"expiry_year,omitempty"`
	IssueNumber    []byte `protobuf:"bytes,7,opt,name=issue_number,json=issueNumber,proto3" json:"issue_number,omitempty"`
	TransportKeyId string `protobuf:"bytes,8,opt,name=transport_key_id,json=transportKeyId,proto3" json:"transport_key_id,omitempty"`
}

func (x *PaymentMethodSchemaEncryptedCard) Reset() {
	*x = PaymentMethodSchemaEncryptedCard{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chargehive_chtype_payment_method_schema_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PaymentMethodSchemaEncryptedCard) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaymentMethodSchemaEncryptedCard) ProtoMessage() {}

func (x *PaymentMethodSchemaEncryptedCard) ProtoReflect() protoreflect.Message {
	mi := &file_chargehive_chtype_payment_method_schema_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaymentMethodSchemaEncryptedCard.ProtoReflect.Descriptor instead.
func (*PaymentMethodSchemaEncryptedCard) Descriptor() ([]byte, []int) {
	return file_chargehive_chtype_payment_method_schema_proto_rawDescGZIP(), []int{3}
}

func (x *PaymentMethodSchemaEncryptedCard) GetNameOnCard() []byte {
	if x != nil {
		return x.NameOnCard
	}
	return nil
}

func (x *PaymentMethodSchemaEncryptedCard) GetNumber() []byte {
	if x != nil {
		return x.Number
	}
	return nil
}

func (x *PaymentMethodSchemaEncryptedCard) GetValidFromMonth() []byte {
	if x != nil {
		return x.ValidFromMonth
	}
	return nil
}

func (x *PaymentMethodSchemaEncryptedCard) GetValidFromYear() []byte {
	if x != nil {
		return x.ValidFromYear
	}
	return nil
}

func (x *PaymentMethodSchemaEncryptedCard) GetExpiryMonth() []byte {
	if x != nil {
		return x.ExpiryMonth
	}
	return nil
}

func (x *PaymentMethodSchemaEncryptedCard) GetExpiryYear() []byte {
	if x != nil {
		return x.ExpiryYear
	}
	return nil
}

func (x *PaymentMethodSchemaEncryptedCard) GetIssueNumber() []byte {
	if x != nil {
		return x.IssueNumber
	}
	return nil
}

func (x *PaymentMethodSchemaEncryptedCard) GetTransportKeyId() string {
	if x != nil {
		return x.TransportKeyId
	}
	return ""
}

type PaymentMethodSchemaCard struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NameOnCard     string `protobuf:"bytes,1,opt,name=name_on_card,json=nameOnCard,proto3" json:"name_on_card,omitempty"`
	ValidFromMonth int32  `protobuf:"varint,2,opt,name=valid_from_month,json=validFromMonth,proto3" json:"valid_from_month,omitempty"`
	ValidFromYear  int32  `protobuf:"varint,3,opt,name=valid_from_year,json=validFromYear,proto3" json:"valid_from_year,omitempty"`
	ExpiryMonth    int32  `protobuf:"varint,4,opt,name=expiry_month,json=expiryMonth,proto3" json:"expiry_month,omitempty"`
	ExpiryYear     int32  `protobuf:"varint,5,opt,name=expiry_year,json=expiryYear,proto3" json:"expiry_year,omitempty"`
	IssueNumber    int32  `protobuf:"varint,6,opt,name=issue_number,json=issueNumber,proto3" json:"issue_number,omitempty"`
	Number         string `protobuf:"bytes,7,opt,name=number,proto3" json:"number,omitempty"`
	Scheme         string `protobuf:"bytes,8,opt,name=scheme,proto3" json:"scheme,omitempty"`
}

func (x *PaymentMethodSchemaCard) Reset() {
	*x = PaymentMethodSchemaCard{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chargehive_chtype_payment_method_schema_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PaymentMethodSchemaCard) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaymentMethodSchemaCard) ProtoMessage() {}

func (x *PaymentMethodSchemaCard) ProtoReflect() protoreflect.Message {
	mi := &file_chargehive_chtype_payment_method_schema_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaymentMethodSchemaCard.ProtoReflect.Descriptor instead.
func (*PaymentMethodSchemaCard) Descriptor() ([]byte, []int) {
	return file_chargehive_chtype_payment_method_schema_proto_rawDescGZIP(), []int{4}
}

func (x *PaymentMethodSchemaCard) GetNameOnCard() string {
	if x != nil {
		return x.NameOnCard
	}
	return ""
}

func (x *PaymentMethodSchemaCard) GetValidFromMonth() int32 {
	if x != nil {
		return x.ValidFromMonth
	}
	return 0
}

func (x *PaymentMethodSchemaCard) GetValidFromYear() int32 {
	if x != nil {
		return x.ValidFromYear
	}
	return 0
}

func (x *PaymentMethodSchemaCard) GetExpiryMonth() int32 {
	if x != nil {
		return x.ExpiryMonth
	}
	return 0
}

func (x *PaymentMethodSchemaCard) GetExpiryYear() int32 {
	if x != nil {
		return x.ExpiryYear
	}
	return 0
}

func (x *PaymentMethodSchemaCard) GetIssueNumber() int32 {
	if x != nil {
		return x.IssueNumber
	}
	return 0
}

func (x *PaymentMethodSchemaCard) GetNumber() string {
	if x != nil {
		return x.Number
	}
	return ""
}

func (x *PaymentMethodSchemaCard) GetScheme() string {
	if x != nil {
		return x.Scheme
	}
	return ""
}

type PaymentMethodSchemaRaw struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Raw []byte `protobuf:"bytes,1,opt,name=raw,proto3" json:"raw,omitempty"`
}

func (x *PaymentMethodSchemaRaw) Reset() {
	*x = PaymentMethodSchemaRaw{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chargehive_chtype_payment_method_schema_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PaymentMethodSchemaRaw) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaymentMethodSchemaRaw) ProtoMessage() {}

func (x *PaymentMethodSchemaRaw) ProtoReflect() protoreflect.Message {
	mi := &file_chargehive_chtype_payment_method_schema_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaymentMethodSchemaRaw.ProtoReflect.Descriptor instead.
func (*PaymentMethodSchemaRaw) Descriptor() ([]byte, []int) {
	return file_chargehive_chtype_payment_method_schema_proto_rawDescGZIP(), []int{5}
}

func (x *PaymentMethodSchemaRaw) GetRaw() []byte {
	if x != nil {
		return x.Raw
	}
	return nil
}

type PaymentMethodSchemaEncryptedDirectDebit struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountNumber      []byte `protobuf:"bytes,1,opt,name=account_number,json=accountNumber,proto3" json:"account_number,omitempty"`
	SortCode           []byte `protobuf:"bytes,2,opt,name=sort_code,json=sortCode,proto3" json:"sort_code,omitempty"`
	AccountHoldersName []byte `protobuf:"bytes,3,opt,name=account_holders_name,json=accountHoldersName,proto3" json:"account_holders_name,omitempty"`
	PayerReference     []byte `protobuf:"bytes,4,opt,name=payer_reference,json=payerReference,proto3" json:"payer_reference,omitempty"`
	TransportKeyId     string `protobuf:"bytes,5,opt,name=transport_key_id,json=transportKeyId,proto3" json:"transport_key_id,omitempty"`
}

func (x *PaymentMethodSchemaEncryptedDirectDebit) Reset() {
	*x = PaymentMethodSchemaEncryptedDirectDebit{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chargehive_chtype_payment_method_schema_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PaymentMethodSchemaEncryptedDirectDebit) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaymentMethodSchemaEncryptedDirectDebit) ProtoMessage() {}

func (x *PaymentMethodSchemaEncryptedDirectDebit) ProtoReflect() protoreflect.Message {
	mi := &file_chargehive_chtype_payment_method_schema_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaymentMethodSchemaEncryptedDirectDebit.ProtoReflect.Descriptor instead.
func (*PaymentMethodSchemaEncryptedDirectDebit) Descriptor() ([]byte, []int) {
	return file_chargehive_chtype_payment_method_schema_proto_rawDescGZIP(), []int{6}
}

func (x *PaymentMethodSchemaEncryptedDirectDebit) GetAccountNumber() []byte {
	if x != nil {
		return x.AccountNumber
	}
	return nil
}

func (x *PaymentMethodSchemaEncryptedDirectDebit) GetSortCode() []byte {
	if x != nil {
		return x.SortCode
	}
	return nil
}

func (x *PaymentMethodSchemaEncryptedDirectDebit) GetAccountHoldersName() []byte {
	if x != nil {
		return x.AccountHoldersName
	}
	return nil
}

func (x *PaymentMethodSchemaEncryptedDirectDebit) GetPayerReference() []byte {
	if x != nil {
		return x.PayerReference
	}
	return nil
}

func (x *PaymentMethodSchemaEncryptedDirectDebit) GetTransportKeyId() string {
	if x != nil {
		return x.TransportKeyId
	}
	return ""
}

type PaymentMethodSchemaDirectDebit struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountNumber      string `protobuf:"bytes,1,opt,name=account_number,json=accountNumber,proto3" json:"account_number,omitempty"`
	SortCode           string `protobuf:"bytes,2,opt,name=sort_code,json=sortCode,proto3" json:"sort_code,omitempty"`
	AccountHoldersName string `protobuf:"bytes,3,opt,name=account_holders_name,json=accountHoldersName,proto3" json:"account_holders_name,omitempty"`
	PayerReference     string `protobuf:"bytes,4,opt,name=payer_reference,json=payerReference,proto3" json:"payer_reference,omitempty"`
	TransportKeyId     string `protobuf:"bytes,5,opt,name=transport_key_id,json=transportKeyId,proto3" json:"transport_key_id,omitempty"`
}

func (x *PaymentMethodSchemaDirectDebit) Reset() {
	*x = PaymentMethodSchemaDirectDebit{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chargehive_chtype_payment_method_schema_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PaymentMethodSchemaDirectDebit) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaymentMethodSchemaDirectDebit) ProtoMessage() {}

func (x *PaymentMethodSchemaDirectDebit) ProtoReflect() protoreflect.Message {
	mi := &file_chargehive_chtype_payment_method_schema_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaymentMethodSchemaDirectDebit.ProtoReflect.Descriptor instead.
func (*PaymentMethodSchemaDirectDebit) Descriptor() ([]byte, []int) {
	return file_chargehive_chtype_payment_method_schema_proto_rawDescGZIP(), []int{7}
}

func (x *PaymentMethodSchemaDirectDebit) GetAccountNumber() string {
	if x != nil {
		return x.AccountNumber
	}
	return ""
}

func (x *PaymentMethodSchemaDirectDebit) GetSortCode() string {
	if x != nil {
		return x.SortCode
	}
	return ""
}

func (x *PaymentMethodSchemaDirectDebit) GetAccountHoldersName() string {
	if x != nil {
		return x.AccountHoldersName
	}
	return ""
}

func (x *PaymentMethodSchemaDirectDebit) GetPayerReference() string {
	if x != nil {
		return x.PayerReference
	}
	return ""
}

func (x *PaymentMethodSchemaDirectDebit) GetTransportKeyId() string {
	if x != nil {
		return x.TransportKeyId
	}
	return ""
}

var File_chargehive_chtype_payment_method_schema_proto protoreflect.FileDescriptor

var file_chargehive_chtype_payment_method_schema_proto_rawDesc = []byte{
	0x0a, 0x2d, 0x63, 0x68, 0x61, 0x72, 0x67, 0x65, 0x68, 0x69, 0x76, 0x65, 0x2f, 0x63, 0x68, 0x74,
	0x79, 0x70, 0x65, 0x2f, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x6d, 0x65, 0x74, 0x68,
	0x6f, 0x64, 0x5f, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x11, 0x63, 0x68, 0x61, 0x72, 0x67, 0x65, 0x68, 0x69, 0x76, 0x65, 0x2e, 0x63, 0x68, 0x74, 0x79,
	0x70, 0x65, 0x22, 0x9d, 0x01, 0x0a, 0x1b, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65,
	0x74, 0x68, 0x6f, 0x64, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x41, 0x70, 0x70, 0x6c, 0x65, 0x50,
	0x61, 0x79, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x75, 0x72,
	0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x55, 0x72, 0x6c, 0x12, 0x2d, 0x0a, 0x12, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x74, 0x69, 0x76,
	0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x11, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x74, 0x69, 0x76, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x65,
	0x78, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x65, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x22, 0xae, 0x01, 0x0a, 0x1c, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65,
	0x74, 0x68, 0x6f, 0x64, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x50, 0x61, 0x79, 0x12, 0x26, 0x0a, 0x0f, 0x6c, 0x6f, 0x77, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6c, 0x6f,
	0x77, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x21, 0x0a,
	0x0c, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x61, 0x72, 0x64, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73,
	0x12, 0x21, 0x0a, 0x0c, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x61, 0x72, 0x64, 0x4e, 0x65, 0x74, 0x77,
	0x6f, 0x72, 0x6b, 0x22, 0x1b, 0x0a, 0x19, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65,
	0x74, 0x68, 0x6f, 0x64, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x50, 0x61, 0x79, 0x50, 0x61, 0x6c,
	0x22, 0xbf, 0x02, 0x0a, 0x20, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x74, 0x68,
	0x6f, 0x64, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x45, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x65,
	0x64, 0x43, 0x61, 0x72, 0x64, 0x12, 0x20, 0x0a, 0x0c, 0x6e, 0x61, 0x6d, 0x65, 0x5f, 0x6f, 0x6e,
	0x5f, 0x63, 0x61, 0x72, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a, 0x6e, 0x61, 0x6d,
	0x65, 0x4f, 0x6e, 0x43, 0x61, 0x72, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12,
	0x28, 0x0a, 0x10, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x5f, 0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x6d, 0x6f,
	0x6e, 0x74, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0e, 0x76, 0x61, 0x6c, 0x69, 0x64,
	0x46, 0x72, 0x6f, 0x6d, 0x4d, 0x6f, 0x6e, 0x74, 0x68, 0x12, 0x26, 0x0a, 0x0f, 0x76, 0x61, 0x6c,
	0x69, 0x64, 0x5f, 0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x79, 0x65, 0x61, 0x72, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x0d, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x46, 0x72, 0x6f, 0x6d, 0x59, 0x65, 0x61,
	0x72, 0x12, 0x21, 0x0a, 0x0c, 0x65, 0x78, 0x70, 0x69, 0x72, 0x79, 0x5f, 0x6d, 0x6f, 0x6e, 0x74,
	0x68, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0b, 0x65, 0x78, 0x70, 0x69, 0x72, 0x79, 0x4d,
	0x6f, 0x6e, 0x74, 0x68, 0x12, 0x1f, 0x0a, 0x0b, 0x65, 0x78, 0x70, 0x69, 0x72, 0x79, 0x5f, 0x79,
	0x65, 0x61, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a, 0x65, 0x78, 0x70, 0x69, 0x72,
	0x79, 0x59, 0x65, 0x61, 0x72, 0x12, 0x21, 0x0a, 0x0c, 0x69, 0x73, 0x73, 0x75, 0x65, 0x5f, 0x6e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0b, 0x69, 0x73, 0x73,
	0x75, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x28, 0x0a, 0x10, 0x74, 0x72, 0x61, 0x6e,
	0x73, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x6b, 0x65, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x4b, 0x65, 0x79,
	0x49, 0x64, 0x22, 0xa4, 0x02, 0x0a, 0x17, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65,
	0x74, 0x68, 0x6f, 0x64, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x43, 0x61, 0x72, 0x64, 0x12, 0x20,
	0x0a, 0x0c, 0x6e, 0x61, 0x6d, 0x65, 0x5f, 0x6f, 0x6e, 0x5f, 0x63, 0x61, 0x72, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6e, 0x61, 0x6d, 0x65, 0x4f, 0x6e, 0x43, 0x61, 0x72, 0x64,
	0x12, 0x28, 0x0a, 0x10, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x5f, 0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x6d,
	0x6f, 0x6e, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x76, 0x61, 0x6c, 0x69,
	0x64, 0x46, 0x72, 0x6f, 0x6d, 0x4d, 0x6f, 0x6e, 0x74, 0x68, 0x12, 0x26, 0x0a, 0x0f, 0x76, 0x61,
	0x6c, 0x69, 0x64, 0x5f, 0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x79, 0x65, 0x61, 0x72, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0d, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x46, 0x72, 0x6f, 0x6d, 0x59, 0x65,
	0x61, 0x72, 0x12, 0x21, 0x0a, 0x0c, 0x65, 0x78, 0x70, 0x69, 0x72, 0x79, 0x5f, 0x6d, 0x6f, 0x6e,
	0x74, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x65, 0x78, 0x70, 0x69, 0x72, 0x79,
	0x4d, 0x6f, 0x6e, 0x74, 0x68, 0x12, 0x1f, 0x0a, 0x0b, 0x65, 0x78, 0x70, 0x69, 0x72, 0x79, 0x5f,
	0x79, 0x65, 0x61, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x65, 0x78, 0x70, 0x69,
	0x72, 0x79, 0x59, 0x65, 0x61, 0x72, 0x12, 0x21, 0x0a, 0x0c, 0x69, 0x73, 0x73, 0x75, 0x65, 0x5f,
	0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x69, 0x73,
	0x73, 0x75, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x6e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x65, 0x22, 0x2a, 0x0a, 0x16, 0x50, 0x61, 0x79,
	0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61,
	0x52, 0x61, 0x77, 0x12, 0x10, 0x0a, 0x03, 0x72, 0x61, 0x77, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x03, 0x72, 0x61, 0x77, 0x22, 0xf2, 0x01, 0x0a, 0x27, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e,
	0x74, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x45, 0x6e, 0x63,
	0x72, 0x79, 0x70, 0x74, 0x65, 0x64, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x44, 0x65, 0x62, 0x69,
	0x74, 0x12, 0x25, 0x0a, 0x0e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x6e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0d, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x6f, 0x72, 0x74,
	0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08, 0x73, 0x6f, 0x72,
	0x74, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x30, 0x0a, 0x14, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x5f, 0x68, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x73, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x12, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x48, 0x6f, 0x6c, 0x64,
	0x65, 0x72, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x70, 0x61, 0x79, 0x65, 0x72,
	0x5f, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x0e, 0x70, 0x61, 0x79, 0x65, 0x72, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65,
	0x12, 0x28, 0x0a, 0x10, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x6b, 0x65,
	0x79, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x74, 0x72, 0x61, 0x6e,
	0x73, 0x70, 0x6f, 0x72, 0x74, 0x4b, 0x65, 0x79, 0x49, 0x64, 0x22, 0xe9, 0x01, 0x0a, 0x1e, 0x50,
	0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x53, 0x63, 0x68, 0x65,
	0x6d, 0x61, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x44, 0x65, 0x62, 0x69, 0x74, 0x12, 0x25, 0x0a,
	0x0e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x6f, 0x72, 0x74, 0x5f, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x6f, 0x72, 0x74, 0x43, 0x6f, 0x64,
	0x65, 0x12, 0x30, 0x0a, 0x14, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x68, 0x6f, 0x6c,
	0x64, 0x65, 0x72, 0x73, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x12, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x48, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x73, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x70, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x72, 0x65, 0x66,
	0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x70, 0x61,
	0x79, 0x65, 0x72, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x28, 0x0a, 0x10,
	0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x6b, 0x65, 0x79, 0x5f, 0x69, 0x64,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72,
	0x74, 0x4b, 0x65, 0x79, 0x49, 0x64, 0x2a, 0xb7, 0x02, 0x0a, 0x13, 0x50, 0x61, 0x79, 0x6d, 0x65,
	0x6e, 0x74, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x12, 0x21,
	0x0a, 0x1d, 0x50, 0x41, 0x59, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x4d, 0x45, 0x54, 0x48, 0x4f, 0x44,
	0x5f, 0x53, 0x43, 0x48, 0x45, 0x4d, 0x41, 0x5f, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x10,
	0x00, 0x12, 0x28, 0x0a, 0x24, 0x50, 0x41, 0x59, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x4d, 0x45, 0x54,
	0x48, 0x4f, 0x44, 0x5f, 0x53, 0x43, 0x48, 0x45, 0x4d, 0x41, 0x5f, 0x45, 0x4e, 0x43, 0x52, 0x59,
	0x50, 0x54, 0x45, 0x44, 0x5f, 0x43, 0x41, 0x52, 0x44, 0x10, 0x01, 0x12, 0x1e, 0x0a, 0x1a, 0x50,
	0x41, 0x59, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x4d, 0x45, 0x54, 0x48, 0x4f, 0x44, 0x5f, 0x53, 0x43,
	0x48, 0x45, 0x4d, 0x41, 0x5f, 0x43, 0x41, 0x52, 0x44, 0x10, 0x02, 0x12, 0x23, 0x0a, 0x1f, 0x50,
	0x41, 0x59, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x4d, 0x45, 0x54, 0x48, 0x4f, 0x44, 0x5f, 0x53, 0x43,
	0x48, 0x45, 0x4d, 0x41, 0x5f, 0x41, 0x50, 0x50, 0x4c, 0x45, 0x5f, 0x50, 0x41, 0x59, 0x10, 0x03,
	0x12, 0x24, 0x0a, 0x20, 0x50, 0x41, 0x59, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x4d, 0x45, 0x54, 0x48,
	0x4f, 0x44, 0x5f, 0x53, 0x43, 0x48, 0x45, 0x4d, 0x41, 0x5f, 0x47, 0x4f, 0x4f, 0x47, 0x4c, 0x45,
	0x5f, 0x50, 0x41, 0x59, 0x10, 0x04, 0x12, 0x20, 0x0a, 0x1c, 0x50, 0x41, 0x59, 0x4d, 0x45, 0x4e,
	0x54, 0x5f, 0x4d, 0x45, 0x54, 0x48, 0x4f, 0x44, 0x5f, 0x53, 0x43, 0x48, 0x45, 0x4d, 0x41, 0x5f,
	0x50, 0x41, 0x59, 0x50, 0x41, 0x4c, 0x10, 0x05, 0x12, 0x26, 0x0a, 0x22, 0x50, 0x41, 0x59, 0x4d,
	0x45, 0x4e, 0x54, 0x5f, 0x4d, 0x45, 0x54, 0x48, 0x4f, 0x44, 0x5f, 0x53, 0x43, 0x48, 0x45, 0x4d,
	0x41, 0x5f, 0x44, 0x49, 0x52, 0x45, 0x43, 0x54, 0x5f, 0x44, 0x45, 0x42, 0x49, 0x54, 0x10, 0x06,
	0x12, 0x1e, 0x0a, 0x1a, 0x50, 0x41, 0x59, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x4d, 0x45, 0x54, 0x48,
	0x4f, 0x44, 0x5f, 0x53, 0x43, 0x48, 0x45, 0x4d, 0x41, 0x5f, 0x50, 0x43, 0x49, 0x42, 0x10, 0x07,
	0x42, 0x67, 0x5a, 0x34, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x63,
	0x68, 0x61, 0x72, 0x67, 0x65, 0x68, 0x69, 0x76, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f,
	0x67, 0x6f, 0x6c, 0x61, 0x6e, 0x67, 0x2f, 0x63, 0x68, 0x61, 0x72, 0x67, 0x65, 0x68, 0x69, 0x76,
	0x65, 0x2f, 0x63, 0x68, 0x74, 0x79, 0x70, 0x65, 0xca, 0x02, 0x11, 0x43, 0x68, 0x61, 0x72, 0x67,
	0x65, 0x48, 0x69, 0x76, 0x65, 0x5c, 0x43, 0x68, 0x74, 0x79, 0x70, 0x65, 0xe2, 0x02, 0x1a, 0x43,
	0x68, 0x61, 0x72, 0x67, 0x65, 0x48, 0x69, 0x76, 0x65, 0x5c, 0x43, 0x68, 0x74, 0x79, 0x70, 0x65,
	0x5c, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_chargehive_chtype_payment_method_schema_proto_rawDescOnce sync.Once
	file_chargehive_chtype_payment_method_schema_proto_rawDescData = file_chargehive_chtype_payment_method_schema_proto_rawDesc
)

func file_chargehive_chtype_payment_method_schema_proto_rawDescGZIP() []byte {
	file_chargehive_chtype_payment_method_schema_proto_rawDescOnce.Do(func() {
		file_chargehive_chtype_payment_method_schema_proto_rawDescData = protoimpl.X.CompressGZIP(file_chargehive_chtype_payment_method_schema_proto_rawDescData)
	})
	return file_chargehive_chtype_payment_method_schema_proto_rawDescData
}

var file_chargehive_chtype_payment_method_schema_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_chargehive_chtype_payment_method_schema_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_chargehive_chtype_payment_method_schema_proto_goTypes = []interface{}{
	(PaymentMethodSchema)(0),                        // 0: chargehive.chtype.PaymentMethodSchema
	(*PaymentMethodSchemaApplePay)(nil),             // 1: chargehive.chtype.PaymentMethodSchemaApplePay
	(*PaymentMethodSchemaGooglePay)(nil),            // 2: chargehive.chtype.PaymentMethodSchemaGooglePay
	(*PaymentMethodSchemaPayPal)(nil),               // 3: chargehive.chtype.PaymentMethodSchemaPayPal
	(*PaymentMethodSchemaEncryptedCard)(nil),        // 4: chargehive.chtype.PaymentMethodSchemaEncryptedCard
	(*PaymentMethodSchemaCard)(nil),                 // 5: chargehive.chtype.PaymentMethodSchemaCard
	(*PaymentMethodSchemaRaw)(nil),                  // 6: chargehive.chtype.PaymentMethodSchemaRaw
	(*PaymentMethodSchemaEncryptedDirectDebit)(nil), // 7: chargehive.chtype.PaymentMethodSchemaEncryptedDirectDebit
	(*PaymentMethodSchemaDirectDebit)(nil),          // 8: chargehive.chtype.PaymentMethodSchemaDirectDebit
}
var file_chargehive_chtype_payment_method_schema_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_chargehive_chtype_payment_method_schema_proto_init() }
func file_chargehive_chtype_payment_method_schema_proto_init() {
	if File_chargehive_chtype_payment_method_schema_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_chargehive_chtype_payment_method_schema_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PaymentMethodSchemaApplePay); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chargehive_chtype_payment_method_schema_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PaymentMethodSchemaGooglePay); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chargehive_chtype_payment_method_schema_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PaymentMethodSchemaPayPal); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chargehive_chtype_payment_method_schema_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PaymentMethodSchemaEncryptedCard); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chargehive_chtype_payment_method_schema_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PaymentMethodSchemaCard); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chargehive_chtype_payment_method_schema_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PaymentMethodSchemaRaw); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chargehive_chtype_payment_method_schema_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PaymentMethodSchemaEncryptedDirectDebit); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chargehive_chtype_payment_method_schema_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PaymentMethodSchemaDirectDebit); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_chargehive_chtype_payment_method_schema_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_chargehive_chtype_payment_method_schema_proto_goTypes,
		DependencyIndexes: file_chargehive_chtype_payment_method_schema_proto_depIdxs,
		EnumInfos:         file_chargehive_chtype_payment_method_schema_proto_enumTypes,
		MessageInfos:      file_chargehive_chtype_payment_method_schema_proto_msgTypes,
	}.Build()
	File_chargehive_chtype_payment_method_schema_proto = out.File
	file_chargehive_chtype_payment_method_schema_proto_rawDesc = nil
	file_chargehive_chtype_payment_method_schema_proto_goTypes = nil
	file_chargehive_chtype_payment_method_schema_proto_depIdxs = nil
}
