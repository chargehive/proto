// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: chargehive/chtype/transaction.proto

package chtype

import (
	fmt "fmt"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	golang_proto "github.com/golang/protobuf/proto"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = golang_proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type Transaction struct {
	TokenId                   string                 `protobuf:"bytes,1,opt,name=token_id,json=tokenId,proto3" json:"token_id,omitempty"`
	TransactionId             string                 `protobuf:"bytes,2,opt,name=transaction_id,json=transactionId,proto3" json:"transaction_id,omitempty"`
	Details                   []*TransactionDetail   `protobuf:"bytes,3,rep,name=details,proto3" json:"details,omitempty"`
	PaymentType               PaymentMethodType      `protobuf:"varint,4,opt,name=payment_type,json=paymentType,proto3,enum=chargehive.chtype.PaymentMethodType" json:"payment_type,omitempty"`
	PaymentScheme             string                 `protobuf:"bytes,5,opt,name=payment_scheme,json=paymentScheme,proto3" json:"payment_scheme,omitempty"`
	TransactionType           TransactionType        `protobuf:"varint,6,opt,name=transaction_type,json=transactionType,proto3,enum=chargehive.chtype.TransactionType" json:"transaction_type,omitempty"`
	RequestAmount             *Amount                `protobuf:"bytes,7,opt,name=request_amount,json=requestAmount,proto3" json:"request_amount,omitempty"`
	TransactedAmount          *Amount                `protobuf:"bytes,8,opt,name=transacted_amount,json=transactedAmount,proto3" json:"transacted_amount,omitempty"`
	Contract                  ContractType           `protobuf:"varint,9,opt,name=contract,proto3,enum=chargehive.chtype.ContractType" json:"contract,omitempty"`
	StatementDescriptor       string                 `protobuf:"bytes,10,opt,name=statement_descriptor,json=statementDescriptor,proto3" json:"statement_descriptor,omitempty"`
	Result                    TransactionResult      `protobuf:"varint,11,opt,name=result,proto3,enum=chargehive.chtype.TransactionResult" json:"result,omitempty"`
	VerifyRequest             *VerifyRequestData     `protobuf:"bytes,12,opt,name=verify_request,json=verifyRequest,proto3" json:"verify_request,omitempty"`
	FailureType               FailureType            `protobuf:"varint,13,opt,name=failure_type,json=failureType,proto3,enum=chargehive.chtype.FailureType" json:"failure_type,omitempty"`
	Arn                       string                 `protobuf:"bytes,14,opt,name=arn,proto3" json:"arn,omitempty"`
	Verified                  VerificationStatus     `protobuf:"varint,15,opt,name=verified,proto3,enum=chargehive.chtype.VerificationStatus" json:"verified,omitempty"`
	Liability                 Liability              `protobuf:"varint,16,opt,name=liability,proto3,enum=chargehive.chtype.Liability" json:"liability,omitempty"`
	AttemptDetail             *AttemptDetail         `protobuf:"bytes,17,opt,name=attempt_detail,json=attemptDetail,proto3" json:"attempt_detail,omitempty"`
	FraudResults              []*FraudResult         `protobuf:"bytes,18,rep,name=fraud_results,json=fraudResults,proto3" json:"fraud_results,omitempty"`
	Response                  *ResponseDetail        `protobuf:"bytes,19,opt,name=response,proto3" json:"response,omitempty"`
	SourceTransactionId       string                 `protobuf:"bytes,20,opt,name=source_transaction_id,json=sourceTransactionId,proto3" json:"source_transaction_id,omitempty"`
	PaymentMethodId           string                 `protobuf:"bytes,21,opt,name=payment_method_id,json=paymentMethodId,proto3" json:"payment_method_id,omitempty"`
	TransactionSubType        TransactionSubType     `protobuf:"varint,22,opt,name=transaction_sub_type,json=transactionSubType,proto3,enum=chargehive.chtype.TransactionSubType" json:"transaction_sub_type,omitempty"`
	AncillaryTransactions     []*Transaction         `protobuf:"bytes,23,rep,name=ancillary_transactions,json=ancillaryTransactions,proto3" json:"ancillary_transactions,omitempty"`
	RequestedConnectorId      string                 `protobuf:"bytes,24,opt,name=requested_connector_id,json=requestedConnectorId,proto3" json:"requested_connector_id,omitempty"`
	RequestedConnectorLibrary string                 `protobuf:"bytes,25,opt,name=requested_connector_library,json=requestedConnectorLibrary,proto3" json:"requested_connector_library,omitempty"`
	TransactionTime           *timestamppb.Timestamp `protobuf:"bytes,26,opt,name=transaction_time,json=transactionTime,proto3" json:"transaction_time,omitempty"`
	PaymentProvider           PaymentMethodProvider  `protobuf:"varint,27,opt,name=payment_provider,json=paymentProvider,proto3,enum=chargehive.chtype.PaymentMethodProvider" json:"payment_provider,omitempty"`
	PaymentInputType          PaymentMethodInputType `protobuf:"varint,28,opt,name=payment_input_type,json=paymentInputType,proto3,enum=chargehive.chtype.PaymentMethodInputType" json:"payment_input_type,omitempty"`
	AuthCode                  string                 `protobuf:"bytes,29,opt,name=auth_code,json=authCode,proto3" json:"auth_code,omitempty"`
	XXX_NoUnkeyedLiteral      struct{}               `json:"-"`
	XXX_unrecognized          []byte                 `json:"-"`
	XXX_sizecache             int32                  `json:"-"`
}

func (m *Transaction) Reset()         { *m = Transaction{} }
func (m *Transaction) String() string { return proto.CompactTextString(m) }
func (*Transaction) ProtoMessage()    {}
func (*Transaction) Descriptor() ([]byte, []int) {
	return fileDescriptor_7bf8aa08fd543022, []int{0}
}
func (m *Transaction) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Transaction.Unmarshal(m, b)
}
func (m *Transaction) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Transaction.Marshal(b, m, deterministic)
}
func (m *Transaction) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Transaction.Merge(m, src)
}
func (m *Transaction) XXX_Size() int {
	return xxx_messageInfo_Transaction.Size(m)
}
func (m *Transaction) XXX_DiscardUnknown() {
	xxx_messageInfo_Transaction.DiscardUnknown(m)
}

var xxx_messageInfo_Transaction proto.InternalMessageInfo

func (m *Transaction) GetTokenId() string {
	if m != nil {
		return m.TokenId
	}
	return ""
}

func (m *Transaction) GetTransactionId() string {
	if m != nil {
		return m.TransactionId
	}
	return ""
}

func (m *Transaction) GetDetails() []*TransactionDetail {
	if m != nil {
		return m.Details
	}
	return nil
}

func (m *Transaction) GetPaymentType() PaymentMethodType {
	if m != nil {
		return m.PaymentType
	}
	return PAYMENT_METHOD_TYPE_INVALID
}

func (m *Transaction) GetPaymentScheme() string {
	if m != nil {
		return m.PaymentScheme
	}
	return ""
}

func (m *Transaction) GetTransactionType() TransactionType {
	if m != nil {
		return m.TransactionType
	}
	return TRANSACTION_TYPE_INVALID
}

func (m *Transaction) GetRequestAmount() *Amount {
	if m != nil {
		return m.RequestAmount
	}
	return nil
}

func (m *Transaction) GetTransactedAmount() *Amount {
	if m != nil {
		return m.TransactedAmount
	}
	return nil
}

func (m *Transaction) GetContract() ContractType {
	if m != nil {
		return m.Contract
	}
	return CONTRACT_TYPE_INVALID
}

func (m *Transaction) GetStatementDescriptor() string {
	if m != nil {
		return m.StatementDescriptor
	}
	return ""
}

func (m *Transaction) GetResult() TransactionResult {
	if m != nil {
		return m.Result
	}
	return TRANSACTION_RESULT_INVALID
}

func (m *Transaction) GetVerifyRequest() *VerifyRequestData {
	if m != nil {
		return m.VerifyRequest
	}
	return nil
}

func (m *Transaction) GetFailureType() FailureType {
	if m != nil {
		return m.FailureType
	}
	return FAILURE_TYPE_INVALID
}

func (m *Transaction) GetArn() string {
	if m != nil {
		return m.Arn
	}
	return ""
}

func (m *Transaction) GetVerified() VerificationStatus {
	if m != nil {
		return m.Verified
	}
	return VERIFICATION_STATUS_INVALID
}

func (m *Transaction) GetLiability() Liability {
	if m != nil {
		return m.Liability
	}
	return LIABILITY_INVALID
}

func (m *Transaction) GetAttemptDetail() *AttemptDetail {
	if m != nil {
		return m.AttemptDetail
	}
	return nil
}

func (m *Transaction) GetFraudResults() []*FraudResult {
	if m != nil {
		return m.FraudResults
	}
	return nil
}

func (m *Transaction) GetResponse() *ResponseDetail {
	if m != nil {
		return m.Response
	}
	return nil
}

func (m *Transaction) GetSourceTransactionId() string {
	if m != nil {
		return m.SourceTransactionId
	}
	return ""
}

func (m *Transaction) GetPaymentMethodId() string {
	if m != nil {
		return m.PaymentMethodId
	}
	return ""
}

func (m *Transaction) GetTransactionSubType() TransactionSubType {
	if m != nil {
		return m.TransactionSubType
	}
	return TRANSACTION_SUB_TYPE_INVALID
}

func (m *Transaction) GetAncillaryTransactions() []*Transaction {
	if m != nil {
		return m.AncillaryTransactions
	}
	return nil
}

func (m *Transaction) GetRequestedConnectorId() string {
	if m != nil {
		return m.RequestedConnectorId
	}
	return ""
}

func (m *Transaction) GetRequestedConnectorLibrary() string {
	if m != nil {
		return m.RequestedConnectorLibrary
	}
	return ""
}

func (m *Transaction) GetTransactionTime() *timestamppb.Timestamp {
	if m != nil {
		return m.TransactionTime
	}
	return nil
}

func (m *Transaction) GetPaymentProvider() PaymentMethodProvider {
	if m != nil {
		return m.PaymentProvider
	}
	return PAYMENT_METHOD_PROVIDER_INVALID
}

func (m *Transaction) GetPaymentInputType() PaymentMethodInputType {
	if m != nil {
		return m.PaymentInputType
	}
	return INPUT_TYPE_INVALID
}

func (m *Transaction) GetAuthCode() string {
	if m != nil {
		return m.AuthCode
	}
	return ""
}

type TransactionDetail struct {
	ActorId              string                 `protobuf:"bytes,1,opt,name=actor_id,json=actorId,proto3" json:"actor_id,omitempty"`
	ActorVersion         string                 `protobuf:"bytes,2,opt,name=actor_version,json=actorVersion,proto3" json:"actor_version,omitempty"`
	ActorType            ActorType              `protobuf:"varint,3,opt,name=actor_type,json=actorType,proto3,enum=chargehive.chtype.ActorType" json:"actor_type,omitempty"`
	TransactionId        string                 `protobuf:"bytes,4,opt,name=transaction_id,json=transactionId,proto3" json:"transaction_id,omitempty"`
	RequestedAmount      *Amount                `protobuf:"bytes,5,opt,name=requested_amount,json=requestedAmount,proto3" json:"requested_amount,omitempty"`
	ProcessedAmount      *Amount                `protobuf:"bytes,6,opt,name=processed_amount,json=processedAmount,proto3" json:"processed_amount,omitempty"`
	FeeEstimate          *Amount                `protobuf:"bytes,7,opt,name=fee_estimate,json=feeEstimate,proto3" json:"fee_estimate,omitempty"`
	FeeActual            *Amount                `protobuf:"bytes,8,opt,name=fee_actual,json=feeActual,proto3" json:"fee_actual,omitempty"`
	StartTime            *timestamppb.Timestamp `protobuf:"bytes,9,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	EndTime              *timestamppb.Timestamp `protobuf:"bytes,10,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
	WasSuccessful        bool                   `protobuf:"varint,11,opt,name=was_successful,json=wasSuccessful,proto3" json:"was_successful,omitempty"`
	Environment          Environment            `protobuf:"varint,13,opt,name=environment,proto3,enum=chargehive.chtype.Environment" json:"environment,omitempty"`
	Response             *ResponseDetail        `protobuf:"bytes,14,opt,name=response,proto3" json:"response,omitempty"`
	VerificationResult   *VerificationResult    `protobuf:"bytes,15,opt,name=verification_result,json=verificationResult,proto3" json:"verification_result,omitempty"`
	AdditionalData       map[string]string      `protobuf:"bytes,16,rep,name=additional_data,json=additionalData,proto3" json:"additional_data,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	AuthorizationCode    string                 `protobuf:"bytes,17,opt,name=authorization_code,json=authorizationCode,proto3" json:"authorization_code,omitempty"`
	Liability            Liability              `protobuf:"varint,18,opt,name=liability,proto3,enum=chargehive.chtype.Liability" json:"liability,omitempty"`
	ConnectorLibrary     string                 `protobuf:"bytes,19,opt,name=connector_library,json=connectorLibrary,proto3" json:"connector_library,omitempty"`
	ConnectorId          string                 `protobuf:"bytes,20,opt,name=connector_id,json=connectorId,proto3" json:"connector_id,omitempty"`
	Primary              bool                   `protobuf:"varint,21,opt,name=primary,proto3" json:"primary,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *TransactionDetail) Reset()         { *m = TransactionDetail{} }
func (m *TransactionDetail) String() string { return proto.CompactTextString(m) }
func (*TransactionDetail) ProtoMessage()    {}
func (*TransactionDetail) Descriptor() ([]byte, []int) {
	return fileDescriptor_7bf8aa08fd543022, []int{1}
}
func (m *TransactionDetail) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TransactionDetail.Unmarshal(m, b)
}
func (m *TransactionDetail) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TransactionDetail.Marshal(b, m, deterministic)
}
func (m *TransactionDetail) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TransactionDetail.Merge(m, src)
}
func (m *TransactionDetail) XXX_Size() int {
	return xxx_messageInfo_TransactionDetail.Size(m)
}
func (m *TransactionDetail) XXX_DiscardUnknown() {
	xxx_messageInfo_TransactionDetail.DiscardUnknown(m)
}

var xxx_messageInfo_TransactionDetail proto.InternalMessageInfo

func (m *TransactionDetail) GetActorId() string {
	if m != nil {
		return m.ActorId
	}
	return ""
}

func (m *TransactionDetail) GetActorVersion() string {
	if m != nil {
		return m.ActorVersion
	}
	return ""
}

func (m *TransactionDetail) GetActorType() ActorType {
	if m != nil {
		return m.ActorType
	}
	return ACTOR_TYPE_INVALID
}

func (m *TransactionDetail) GetTransactionId() string {
	if m != nil {
		return m.TransactionId
	}
	return ""
}

func (m *TransactionDetail) GetRequestedAmount() *Amount {
	if m != nil {
		return m.RequestedAmount
	}
	return nil
}

func (m *TransactionDetail) GetProcessedAmount() *Amount {
	if m != nil {
		return m.ProcessedAmount
	}
	return nil
}

func (m *TransactionDetail) GetFeeEstimate() *Amount {
	if m != nil {
		return m.FeeEstimate
	}
	return nil
}

func (m *TransactionDetail) GetFeeActual() *Amount {
	if m != nil {
		return m.FeeActual
	}
	return nil
}

func (m *TransactionDetail) GetStartTime() *timestamppb.Timestamp {
	if m != nil {
		return m.StartTime
	}
	return nil
}

func (m *TransactionDetail) GetEndTime() *timestamppb.Timestamp {
	if m != nil {
		return m.EndTime
	}
	return nil
}

func (m *TransactionDetail) GetWasSuccessful() bool {
	if m != nil {
		return m.WasSuccessful
	}
	return false
}

func (m *TransactionDetail) GetEnvironment() Environment {
	if m != nil {
		return m.Environment
	}
	return ENVIRONMENT_INVALID
}

func (m *TransactionDetail) GetResponse() *ResponseDetail {
	if m != nil {
		return m.Response
	}
	return nil
}

func (m *TransactionDetail) GetVerificationResult() *VerificationResult {
	if m != nil {
		return m.VerificationResult
	}
	return nil
}

func (m *TransactionDetail) GetAdditionalData() map[string]string {
	if m != nil {
		return m.AdditionalData
	}
	return nil
}

func (m *TransactionDetail) GetAuthorizationCode() string {
	if m != nil {
		return m.AuthorizationCode
	}
	return ""
}

func (m *TransactionDetail) GetLiability() Liability {
	if m != nil {
		return m.Liability
	}
	return LIABILITY_INVALID
}

func (m *TransactionDetail) GetConnectorLibrary() string {
	if m != nil {
		return m.ConnectorLibrary
	}
	return ""
}

func (m *TransactionDetail) GetConnectorId() string {
	if m != nil {
		return m.ConnectorId
	}
	return ""
}

func (m *TransactionDetail) GetPrimary() bool {
	if m != nil {
		return m.Primary
	}
	return false
}

type VerifyRequestData struct {
	Type                 VerifyRequestType `protobuf:"varint,1,opt,name=type,proto3,enum=chargehive.chtype.VerifyRequestType" json:"type,omitempty"`
	Data                 map[string]string `protobuf:"bytes,2,rep,name=data,proto3" json:"data,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	ConnectorLibrary     string            `protobuf:"bytes,3,opt,name=connector_library,json=connectorLibrary,proto3" json:"connector_library,omitempty"`
	Environment          Environment       `protobuf:"varint,4,opt,name=environment,proto3,enum=chargehive.chtype.Environment" json:"environment,omitempty"`
	Required             bool              `protobuf:"varint,5,opt,name=required,proto3" json:"required,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *VerifyRequestData) Reset()         { *m = VerifyRequestData{} }
func (m *VerifyRequestData) String() string { return proto.CompactTextString(m) }
func (*VerifyRequestData) ProtoMessage()    {}
func (*VerifyRequestData) Descriptor() ([]byte, []int) {
	return fileDescriptor_7bf8aa08fd543022, []int{2}
}
func (m *VerifyRequestData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VerifyRequestData.Unmarshal(m, b)
}
func (m *VerifyRequestData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VerifyRequestData.Marshal(b, m, deterministic)
}
func (m *VerifyRequestData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VerifyRequestData.Merge(m, src)
}
func (m *VerifyRequestData) XXX_Size() int {
	return xxx_messageInfo_VerifyRequestData.Size(m)
}
func (m *VerifyRequestData) XXX_DiscardUnknown() {
	xxx_messageInfo_VerifyRequestData.DiscardUnknown(m)
}

var xxx_messageInfo_VerifyRequestData proto.InternalMessageInfo

func (m *VerifyRequestData) GetType() VerifyRequestType {
	if m != nil {
		return m.Type
	}
	return VERIFY_REQUEST_TYPE_INVALID
}

func (m *VerifyRequestData) GetData() map[string]string {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *VerifyRequestData) GetConnectorLibrary() string {
	if m != nil {
		return m.ConnectorLibrary
	}
	return ""
}

func (m *VerifyRequestData) GetEnvironment() Environment {
	if m != nil {
		return m.Environment
	}
	return ENVIRONMENT_INVALID
}

func (m *VerifyRequestData) GetRequired() bool {
	if m != nil {
		return m.Required
	}
	return false
}

type ThreeDSResult struct {
	Eci                  string                 `protobuf:"bytes,1,opt,name=eci,proto3" json:"eci,omitempty"`
	Cavv                 string                 `protobuf:"bytes,2,opt,name=cavv,proto3" json:"cavv,omitempty"`
	Xid                  string                 `protobuf:"bytes,3,opt,name=xid,proto3" json:"xid,omitempty"`
	Enrollment           string                 `protobuf:"bytes,4,opt,name=enrollment,proto3" json:"enrollment,omitempty"`
	Result               string                 `protobuf:"bytes,5,opt,name=result,proto3" json:"result,omitempty"`
	SignatureStatus      string                 `protobuf:"bytes,6,opt,name=signature_status,json=signatureStatus,proto3" json:"signature_status,omitempty"`
	ServerTransactionId  string                 `protobuf:"bytes,7,opt,name=server_transaction_id,json=serverTransactionId,proto3" json:"server_transaction_id,omitempty"`
	Status               string                 `protobuf:"bytes,8,opt,name=status,proto3" json:"status,omitempty"`
	MajorVersion         int32                  `protobuf:"varint,9,opt,name=major_version,json=majorVersion,proto3" json:"major_version,omitempty"`
	Version              string                 `protobuf:"bytes,10,opt,name=version,proto3" json:"version,omitempty"`
	PaReq                string                 `protobuf:"bytes,11,opt,name=pa_req,json=paReq,proto3" json:"pa_req,omitempty"`
	AcsUrl               string                 `protobuf:"bytes,12,opt,name=acs_url,json=acsUrl,proto3" json:"acs_url,omitempty"`
	PaRes                string                 `protobuf:"bytes,13,opt,name=pa_res,json=paRes,proto3" json:"pa_res,omitempty"`
	Id                   string                 `protobuf:"bytes,14,opt,name=id,proto3" json:"id,omitempty"`
	Timestamp            *timestamppb.Timestamp `protobuf:"bytes,15,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Liability            Liability              `protobuf:"varint,16,opt,name=liability,proto3,enum=chargehive.chtype.Liability" json:"liability,omitempty"`
	SdkResponse          string                 `protobuf:"bytes,17,opt,name=sdk_response,json=sdkResponse,proto3" json:"sdk_response,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *ThreeDSResult) Reset()         { *m = ThreeDSResult{} }
func (m *ThreeDSResult) String() string { return proto.CompactTextString(m) }
func (*ThreeDSResult) ProtoMessage()    {}
func (*ThreeDSResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_7bf8aa08fd543022, []int{3}
}
func (m *ThreeDSResult) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ThreeDSResult.Unmarshal(m, b)
}
func (m *ThreeDSResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ThreeDSResult.Marshal(b, m, deterministic)
}
func (m *ThreeDSResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ThreeDSResult.Merge(m, src)
}
func (m *ThreeDSResult) XXX_Size() int {
	return xxx_messageInfo_ThreeDSResult.Size(m)
}
func (m *ThreeDSResult) XXX_DiscardUnknown() {
	xxx_messageInfo_ThreeDSResult.DiscardUnknown(m)
}

var xxx_messageInfo_ThreeDSResult proto.InternalMessageInfo

func (m *ThreeDSResult) GetEci() string {
	if m != nil {
		return m.Eci
	}
	return ""
}

func (m *ThreeDSResult) GetCavv() string {
	if m != nil {
		return m.Cavv
	}
	return ""
}

func (m *ThreeDSResult) GetXid() string {
	if m != nil {
		return m.Xid
	}
	return ""
}

func (m *ThreeDSResult) GetEnrollment() string {
	if m != nil {
		return m.Enrollment
	}
	return ""
}

func (m *ThreeDSResult) GetResult() string {
	if m != nil {
		return m.Result
	}
	return ""
}

func (m *ThreeDSResult) GetSignatureStatus() string {
	if m != nil {
		return m.SignatureStatus
	}
	return ""
}

func (m *ThreeDSResult) GetServerTransactionId() string {
	if m != nil {
		return m.ServerTransactionId
	}
	return ""
}

func (m *ThreeDSResult) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *ThreeDSResult) GetMajorVersion() int32 {
	if m != nil {
		return m.MajorVersion
	}
	return 0
}

func (m *ThreeDSResult) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

func (m *ThreeDSResult) GetPaReq() string {
	if m != nil {
		return m.PaReq
	}
	return ""
}

func (m *ThreeDSResult) GetAcsUrl() string {
	if m != nil {
		return m.AcsUrl
	}
	return ""
}

func (m *ThreeDSResult) GetPaRes() string {
	if m != nil {
		return m.PaRes
	}
	return ""
}

func (m *ThreeDSResult) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *ThreeDSResult) GetTimestamp() *timestamppb.Timestamp {
	if m != nil {
		return m.Timestamp
	}
	return nil
}

func (m *ThreeDSResult) GetLiability() Liability {
	if m != nil {
		return m.Liability
	}
	return LIABILITY_INVALID
}

func (m *ThreeDSResult) GetSdkResponse() string {
	if m != nil {
		return m.SdkResponse
	}
	return ""
}

type VerificationResult struct {
	AddressVerificationResult string         `protobuf:"bytes,1,opt,name=address_verification_result,json=addressVerificationResult,proto3" json:"address_verification_result,omitempty"`
	CvvVerificationResult     string         `protobuf:"bytes,2,opt,name=cvv_verification_result,json=cvvVerificationResult,proto3" json:"cvv_verification_result,omitempty"`
	FraudResult               string         `protobuf:"bytes,3,opt,name=fraud_result,json=fraudResult,proto3" json:"fraud_result,omitempty"`
	ThreedsResult             *ThreeDSResult `protobuf:"bytes,5,opt,name=threeds_result,json=threedsResult,proto3" json:"threeds_result,omitempty"`
	XXX_NoUnkeyedLiteral      struct{}       `json:"-"`
	XXX_unrecognized          []byte         `json:"-"`
	XXX_sizecache             int32          `json:"-"`
}

func (m *VerificationResult) Reset()         { *m = VerificationResult{} }
func (m *VerificationResult) String() string { return proto.CompactTextString(m) }
func (*VerificationResult) ProtoMessage()    {}
func (*VerificationResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_7bf8aa08fd543022, []int{4}
}
func (m *VerificationResult) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VerificationResult.Unmarshal(m, b)
}
func (m *VerificationResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VerificationResult.Marshal(b, m, deterministic)
}
func (m *VerificationResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VerificationResult.Merge(m, src)
}
func (m *VerificationResult) XXX_Size() int {
	return xxx_messageInfo_VerificationResult.Size(m)
}
func (m *VerificationResult) XXX_DiscardUnknown() {
	xxx_messageInfo_VerificationResult.DiscardUnknown(m)
}

var xxx_messageInfo_VerificationResult proto.InternalMessageInfo

func (m *VerificationResult) GetAddressVerificationResult() string {
	if m != nil {
		return m.AddressVerificationResult
	}
	return ""
}

func (m *VerificationResult) GetCvvVerificationResult() string {
	if m != nil {
		return m.CvvVerificationResult
	}
	return ""
}

func (m *VerificationResult) GetFraudResult() string {
	if m != nil {
		return m.FraudResult
	}
	return ""
}

func (m *VerificationResult) GetThreedsResult() *ThreeDSResult {
	if m != nil {
		return m.ThreedsResult
	}
	return nil
}

type AttemptDetail struct {
	ChargeTransactionNumber  int64    `protobuf:"varint,1,opt,name=ChargeTransactionNumber,proto3" json:"ChargeTransactionNumber,omitempty"`
	ChargeAttemptNumber      int64    `protobuf:"varint,2,opt,name=ChargeAttemptNumber,proto3" json:"ChargeAttemptNumber,omitempty"`
	AttemptTransactionNumber int64    `protobuf:"varint,3,opt,name=AttemptTransactionNumber,proto3" json:"AttemptTransactionNumber,omitempty"`
	AttemptMethodCascade     int64    `protobuf:"varint,4,opt,name=AttemptMethodCascade,proto3" json:"AttemptMethodCascade,omitempty"`
	AttemptConnectorCascade  int64    `protobuf:"varint,5,opt,name=AttemptConnectorCascade,proto3" json:"AttemptConnectorCascade,omitempty"`
	IsPrimaryMethod          bool     `protobuf:"varint,6,opt,name=IsPrimaryMethod,proto3" json:"IsPrimaryMethod,omitempty"`
	XXX_NoUnkeyedLiteral     struct{} `json:"-"`
	XXX_unrecognized         []byte   `json:"-"`
	XXX_sizecache            int32    `json:"-"`
}

func (m *AttemptDetail) Reset()         { *m = AttemptDetail{} }
func (m *AttemptDetail) String() string { return proto.CompactTextString(m) }
func (*AttemptDetail) ProtoMessage()    {}
func (*AttemptDetail) Descriptor() ([]byte, []int) {
	return fileDescriptor_7bf8aa08fd543022, []int{5}
}
func (m *AttemptDetail) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AttemptDetail.Unmarshal(m, b)
}
func (m *AttemptDetail) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AttemptDetail.Marshal(b, m, deterministic)
}
func (m *AttemptDetail) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AttemptDetail.Merge(m, src)
}
func (m *AttemptDetail) XXX_Size() int {
	return xxx_messageInfo_AttemptDetail.Size(m)
}
func (m *AttemptDetail) XXX_DiscardUnknown() {
	xxx_messageInfo_AttemptDetail.DiscardUnknown(m)
}

var xxx_messageInfo_AttemptDetail proto.InternalMessageInfo

func (m *AttemptDetail) GetChargeTransactionNumber() int64 {
	if m != nil {
		return m.ChargeTransactionNumber
	}
	return 0
}

func (m *AttemptDetail) GetChargeAttemptNumber() int64 {
	if m != nil {
		return m.ChargeAttemptNumber
	}
	return 0
}

func (m *AttemptDetail) GetAttemptTransactionNumber() int64 {
	if m != nil {
		return m.AttemptTransactionNumber
	}
	return 0
}

func (m *AttemptDetail) GetAttemptMethodCascade() int64 {
	if m != nil {
		return m.AttemptMethodCascade
	}
	return 0
}

func (m *AttemptDetail) GetAttemptConnectorCascade() int64 {
	if m != nil {
		return m.AttemptConnectorCascade
	}
	return 0
}

func (m *AttemptDetail) GetIsPrimaryMethod() bool {
	if m != nil {
		return m.IsPrimaryMethod
	}
	return false
}

func init() {
	proto.RegisterType((*Transaction)(nil), "chargehive.chtype.Transaction")
	golang_proto.RegisterType((*Transaction)(nil), "chargehive.chtype.Transaction")
	proto.RegisterType((*TransactionDetail)(nil), "chargehive.chtype.TransactionDetail")
	golang_proto.RegisterType((*TransactionDetail)(nil), "chargehive.chtype.TransactionDetail")
	proto.RegisterMapType((map[string]string)(nil), "chargehive.chtype.TransactionDetail.AdditionalDataEntry")
	golang_proto.RegisterMapType((map[string]string)(nil), "chargehive.chtype.TransactionDetail.AdditionalDataEntry")
	proto.RegisterType((*VerifyRequestData)(nil), "chargehive.chtype.VerifyRequestData")
	golang_proto.RegisterType((*VerifyRequestData)(nil), "chargehive.chtype.VerifyRequestData")
	proto.RegisterMapType((map[string]string)(nil), "chargehive.chtype.VerifyRequestData.DataEntry")
	golang_proto.RegisterMapType((map[string]string)(nil), "chargehive.chtype.VerifyRequestData.DataEntry")
	proto.RegisterType((*ThreeDSResult)(nil), "chargehive.chtype.ThreeDSResult")
	golang_proto.RegisterType((*ThreeDSResult)(nil), "chargehive.chtype.ThreeDSResult")
	proto.RegisterType((*VerificationResult)(nil), "chargehive.chtype.VerificationResult")
	golang_proto.RegisterType((*VerificationResult)(nil), "chargehive.chtype.VerificationResult")
	proto.RegisterType((*AttemptDetail)(nil), "chargehive.chtype.AttemptDetail")
	golang_proto.RegisterType((*AttemptDetail)(nil), "chargehive.chtype.AttemptDetail")
}

func init() {
	proto.RegisterFile("chargehive/chtype/transaction.proto", fileDescriptor_7bf8aa08fd543022)
}
func init() {
	golang_proto.RegisterFile("chargehive/chtype/transaction.proto", fileDescriptor_7bf8aa08fd543022)
}

var fileDescriptor_7bf8aa08fd543022 = []byte{
	// 1719 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x58, 0xdd, 0x72, 0x23, 0x47,
	0x15, 0x46, 0x92, 0x6d, 0x49, 0x47, 0x3f, 0x96, 0xda, 0x3f, 0x3b, 0xd6, 0x6e, 0x36, 0x5e, 0x87,
	0xa5, 0x1c, 0xa8, 0xc8, 0xb0, 0x04, 0x30, 0x9b, 0x40, 0xc5, 0xb1, 0x37, 0xc1, 0x45, 0x96, 0xda,
	0x1a, 0x3b, 0x9b, 0x2a, 0x2a, 0x55, 0xaa, 0xd6, 0x4c, 0x4b, 0x6a, 0x76, 0x34, 0xa3, 0xed, 0xee,
	0x99, 0x20, 0x9e, 0x81, 0xd7, 0xa0, 0x8a, 0xc7, 0xe0, 0x9a, 0x1b, 0xb8, 0xe1, 0x01, 0x80, 0x97,
	0xe0, 0x92, 0xea, 0xd3, 0x3d, 0xa3, 0x91, 0x35, 0x5a, 0x65, 0xe1, 0x6e, 0xfa, 0x9c, 0xef, 0x3b,
	0xd3, 0x3f, 0xa7, 0xbf, 0x73, 0x66, 0xe0, 0x3d, 0x6f, 0x42, 0xc5, 0x98, 0x4d, 0x78, 0xc2, 0xce,
	0xbc, 0x89, 0x9a, 0xcf, 0xd8, 0x99, 0x12, 0x34, 0x94, 0xd4, 0x53, 0x3c, 0x0a, 0xfb, 0x33, 0x11,
	0xa9, 0x88, 0x74, 0x17, 0xa0, 0xbe, 0x01, 0xf5, 0x3e, 0x18, 0x73, 0x35, 0x89, 0x87, 0x7d, 0x2f,
	0x9a, 0x9e, 0x8d, 0xa3, 0x71, 0x74, 0x86, 0xc8, 0x61, 0x3c, 0xc2, 0x11, 0x0e, 0xf0, 0xc9, 0x44,
	0xe8, 0xbd, 0xbb, 0xfa, 0x9a, 0x31, 0x0b, 0x99, 0xe0, 0x9e, 0x05, 0x3c, 0x58, 0x05, 0xb0, 0x30,
	0x9e, 0x5a, 0xef, 0x3b, 0xab, 0xde, 0x91, 0xa0, 0xb1, 0x6f, 0xdd, 0xdf, 0x5b, 0x75, 0x0b, 0x26,
	0x67, 0x51, 0x28, 0xd9, 0xc0, 0x8b, 0x7c, 0x26, 0xd3, 0x59, 0x8c, 0xa3, 0x68, 0x1c, 0xb0, 0xc5,
	0x5c, 0x15, 0x9f, 0x32, 0xa9, 0xe8, 0x74, 0x66, 0x00, 0x27, 0x7f, 0x6c, 0x43, 0xe3, 0x76, 0xb1,
	0x7c, 0x72, 0x04, 0x35, 0x15, 0xbd, 0x62, 0xe1, 0x80, 0xfb, 0x4e, 0xe9, 0xb8, 0x74, 0x5a, 0x77,
	0xab, 0x38, 0xbe, 0xf6, 0xc9, 0x63, 0x68, 0xe7, 0x36, 0x4a, 0x03, 0xca, 0x08, 0x68, 0xe5, 0xac,
	0xd7, 0x3e, 0xf9, 0x25, 0x54, 0x7d, 0xa6, 0x28, 0x0f, 0xa4, 0x53, 0x39, 0xae, 0x9c, 0x36, 0x9e,
	0x7c, 0xb7, 0xbf, 0xb2, 0x99, 0xfd, 0xdc, 0x2b, 0xaf, 0x10, 0xec, 0xa6, 0x24, 0xf2, 0x39, 0x34,
	0x67, 0x74, 0x3e, 0x65, 0xa1, 0x1a, 0x68, 0xa8, 0xb3, 0x75, 0x5c, 0x3a, 0x6d, 0x17, 0x06, 0x79,
	0x61, 0x60, 0xcf, 0x99, 0x9a, 0x44, 0xfe, 0xed, 0x7c, 0xc6, 0xdc, 0x86, 0x65, 0xea, 0x81, 0x9e,
	0x6f, 0x1a, 0x48, 0x7a, 0x13, 0x36, 0x65, 0xce, 0xb6, 0x99, 0xaf, 0xb5, 0xde, 0xa0, 0x91, 0x3c,
	0x87, 0x4e, 0x7e, 0x59, 0xf8, 0xce, 0x1d, 0x7c, 0xe7, 0xc9, 0x9b, 0x27, 0x8e, 0x6f, 0xdc, 0x55,
	0xcb, 0x06, 0xf2, 0x09, 0xb4, 0x05, 0x7b, 0x1d, 0x33, 0xa9, 0x06, 0x74, 0x1a, 0xc5, 0xa1, 0x72,
	0xaa, 0xc7, 0xa5, 0xd3, 0xc6, 0x93, 0xa3, 0x82, 0x60, 0x17, 0x08, 0x70, 0x5b, 0x96, 0x60, 0x86,
	0xe4, 0x33, 0xe8, 0xa6, 0x41, 0x99, 0x9f, 0x06, 0xa9, 0x6d, 0x0a, 0xd2, 0x59, 0x70, 0x6c, 0x9c,
	0x8f, 0xa0, 0xe6, 0x45, 0xa1, 0x12, 0xd4, 0x53, 0x4e, 0x1d, 0x17, 0xf4, 0x6e, 0x01, 0xfd, 0xd2,
	0x42, 0x70, 0x35, 0x19, 0x81, 0xfc, 0x08, 0xf6, 0xa5, 0xa2, 0x8a, 0xe1, 0xf6, 0xf9, 0x4c, 0x7a,
	0x82, 0xcf, 0x54, 0x24, 0x1c, 0xc0, 0x2d, 0xdc, 0xcb, 0x7c, 0x57, 0x99, 0x8b, 0x7c, 0x0c, 0x3b,
	0x82, 0xc9, 0x38, 0x50, 0x4e, 0x63, 0xed, 0x91, 0xe5, 0xb6, 0xcf, 0x45, 0xac, 0x6b, 0x39, 0xe4,
	0xd7, 0xd0, 0x4e, 0x98, 0xe0, 0xa3, 0xf9, 0xc0, 0xee, 0x86, 0xd3, 0xc4, 0x25, 0x17, 0x45, 0x79,
	0x89, 0x40, 0xd7, 0xe0, 0xae, 0xa8, 0xa2, 0x6e, 0x2b, 0xc9, 0x9b, 0xc8, 0x05, 0x34, 0x47, 0x94,
	0x07, 0xb1, 0x60, 0xe6, 0x3c, 0x5b, 0x38, 0xa1, 0x87, 0x05, 0xa1, 0x3e, 0x33, 0x30, 0x93, 0x3d,
	0xa3, 0xc5, 0x80, 0x74, 0xa0, 0x42, 0x45, 0xe8, 0xb4, 0x71, 0xbd, 0xfa, 0x91, 0x5c, 0x40, 0x0d,
	0xdf, 0xc2, 0x99, 0xef, 0xec, 0x62, 0xc0, 0xc7, 0xeb, 0xe6, 0xc6, 0x3d, 0xaa, 0x97, 0x78, 0xa3,
	0xa8, 0x8a, 0xa5, 0x9b, 0xd1, 0xc8, 0x53, 0xa8, 0x07, 0x9c, 0x0e, 0x79, 0xc0, 0xd5, 0xdc, 0xe9,
	0x60, 0x8c, 0x07, 0x05, 0x31, 0xbe, 0x48, 0x31, 0xee, 0x02, 0x4e, 0x3e, 0x87, 0x36, 0x55, 0x8a,
	0x4d, 0x67, 0xfa, 0x3c, 0xf4, 0x55, 0x71, 0xba, 0xb8, 0x41, 0xc7, 0x45, 0x39, 0x61, 0x80, 0xf6,
	0x6a, 0xb5, 0x68, 0x7e, 0x48, 0x2e, 0xa1, 0x85, 0x52, 0x32, 0x30, 0x3b, 0x2f, 0x1d, 0x82, 0xd7,
	0xb4, 0x70, 0x77, 0x34, 0xce, 0x1e, 0x54, 0x73, 0xb4, 0x18, 0x48, 0xf2, 0x0b, 0xa8, 0xa5, 0x82,
	0xe3, 0xec, 0xe1, 0x3c, 0x1e, 0x15, 0xf0, 0x5d, 0x0b, 0xb1, 0x13, 0xc9, 0x28, 0xe4, 0x09, 0x1c,
	0xc8, 0x28, 0x16, 0x1e, 0x1b, 0xdc, 0x91, 0x94, 0x7d, 0x9b, 0x5f, 0xe8, 0xbc, 0x5d, 0x12, 0x96,
	0xef, 0x43, 0x37, 0xbd, 0xcf, 0x53, 0xbc, 0xf2, 0x1a, 0x7f, 0x80, 0xf8, 0xdd, 0x59, 0x5e, 0x0a,
	0xae, 0x7d, 0xf2, 0x15, 0xec, 0xe7, 0x03, 0xcb, 0x78, 0x68, 0x12, 0xe1, 0x70, 0xed, 0xb9, 0xe5,
	0xde, 0x75, 0x13, 0x0f, 0x31, 0x1f, 0x88, 0x5a, 0xb1, 0x91, 0x2f, 0xe1, 0x90, 0x86, 0x1e, 0x0f,
	0x02, 0x2a, 0xe6, 0xf9, 0xb9, 0x4b, 0xe7, 0xde, 0xda, 0x5d, 0xcc, 0x27, 0xfd, 0x41, 0xc6, 0xce,
	0x59, 0x25, 0xf9, 0x10, 0x0e, 0x6d, 0xda, 0x33, 0x7f, 0xe0, 0x45, 0x61, 0xc8, 0x3c, 0x15, 0x09,
	0xbd, 0x40, 0x07, 0x17, 0xb8, 0x9f, 0x79, 0x2f, 0x53, 0x27, 0x4a, 0xed, 0xfd, 0x22, 0x56, 0xc0,
	0x87, 0x82, 0x8a, 0xb9, 0x73, 0x84, 0xd4, 0xa3, 0x55, 0xea, 0x17, 0x06, 0x40, 0x9e, 0xdd, 0x91,
	0x3e, 0x3e, 0x65, 0x4e, 0x0f, 0x0f, 0xb3, 0xd7, 0x37, 0x85, 0xa3, 0x9f, 0x16, 0x8e, 0xfe, 0x6d,
	0x5a, 0x38, 0x96, 0x25, 0x8f, 0x4f, 0x19, 0xb9, 0x81, 0x4e, 0x7a, 0x30, 0x33, 0x11, 0x25, 0xdc,
	0x67, 0xc2, 0xb9, 0x8f, 0x1b, 0x7d, 0xba, 0x49, 0xb5, 0x5f, 0x58, 0x7c, 0x76, 0x82, 0xa9, 0x81,
	0x7c, 0x05, 0x24, 0x0d, 0xca, 0xc3, 0x59, 0x6c, 0x8b, 0xc1, 0x03, 0x0c, 0xfb, 0xfe, 0xa6, 0xb0,
	0xd7, 0x9a, 0x81, 0x67, 0x98, 0xce, 0x2c, 0xb3, 0x90, 0xfb, 0x50, 0xa7, 0xb1, 0x9a, 0x60, 0x99,
	0x74, 0xde, 0xc1, 0x2d, 0xaa, 0x69, 0xc3, 0x65, 0xe4, 0xb3, 0x93, 0x3f, 0xd7, 0xa1, 0xbb, 0x52,
	0x9b, 0x74, 0x51, 0xa4, 0xe9, 0x79, 0xd8, 0xa2, 0x48, 0xed, 0x11, 0xbc, 0x07, 0x2d, 0xe3, 0x4a,
	0x98, 0x90, 0x3c, 0x0a, 0x6d, 0x4d, 0x6c, 0xa2, 0xf1, 0xa5, 0xb1, 0x91, 0x8f, 0x00, 0x0c, 0x08,
	0xd7, 0x50, 0x59, 0x7b, 0xef, 0x2f, 0x34, 0x08, 0xa7, 0x5d, 0xa7, 0xe9, 0x63, 0x41, 0xd9, 0xdd,
	0x2a, 0x2a, 0xbb, 0x57, 0xd0, 0x59, 0xe4, 0x82, 0x2d, 0x1a, 0xdb, 0x9b, 0x8a, 0xc6, 0x6e, 0x46,
	0xb1, 0x35, 0xe3, 0x0a, 0x3a, 0x33, 0x11, 0x79, 0x4c, 0xca, 0x45, 0x94, 0x9d, 0x8d, 0x51, 0x32,
	0x8a, 0x8d, 0xf2, 0x31, 0x34, 0x47, 0x8c, 0x0d, 0x98, 0x54, 0x7c, 0x4a, 0x15, 0xdb, 0x5c, 0x01,
	0x1b, 0x23, 0xc6, 0x9e, 0x59, 0x34, 0x39, 0x07, 0xd0, 0x6c, 0xea, 0xa9, 0x98, 0x06, 0x9b, 0x0b,
	0x5f, 0x7d, 0xc4, 0xd8, 0x05, 0x62, 0xc9, 0xcf, 0x01, 0xa4, 0xa2, 0x42, 0x99, 0x4c, 0xae, 0x6f,
	0xcc, 0xe4, 0x3a, 0xa2, 0x31, 0x87, 0x7f, 0x02, 0x35, 0x16, 0xfa, 0x86, 0x08, 0x1b, 0x89, 0x55,
	0x16, 0xfa, 0x48, 0x7b, 0x0c, 0xed, 0x6f, 0xa8, 0x1c, 0xc8, 0xd8, 0xd3, 0x1b, 0x30, 0x8a, 0x03,
	0xac, 0x7d, 0x35, 0xb7, 0xf5, 0x0d, 0x95, 0x37, 0x99, 0x91, 0x7c, 0x02, 0x0d, 0x16, 0x26, 0x5c,
	0x44, 0xa1, 0xce, 0xc5, 0x37, 0x94, 0xa3, 0x67, 0x0b, 0x94, 0x9b, 0xa7, 0x2c, 0xe9, 0x6d, 0xfb,
	0xed, 0xf5, 0xf6, 0x25, 0xec, 0x25, 0xb9, 0xc2, 0x64, 0xa5, 0x1f, 0xcb, 0x58, 0x63, 0x63, 0x19,
	0xb3, 0x05, 0x80, 0x24, 0x2b, 0x36, 0x42, 0x61, 0x97, 0xfa, 0x3e, 0xd7, 0x16, 0x1a, 0x0c, 0x7c,
	0xaa, 0xa8, 0xd3, 0x41, 0x1d, 0x3c, 0xff, 0x36, 0x4d, 0x5f, 0xff, 0x22, 0xe3, 0xea, 0x2a, 0xfe,
	0x2c, 0x54, 0x62, 0xee, 0xb6, 0xe9, 0x92, 0x91, 0x7c, 0x00, 0x44, 0x5f, 0xcf, 0x48, 0xf0, 0x3f,
	0x98, 0xb9, 0xe3, 0xc5, 0xed, 0xe2, 0x1d, 0xe8, 0x2e, 0x79, 0xf4, 0x0d, 0x5e, 0x2e, 0xb1, 0xe4,
	0xed, 0x4a, 0xec, 0x0f, 0xa0, 0xbb, 0xaa, 0xa2, 0x7b, 0xf8, 0xa6, 0x8e, 0x77, 0x57, 0x3c, 0x1f,
	0x41, 0x73, 0x49, 0xa8, 0x4d, 0xe5, 0x6a, 0x78, 0x39, 0x7d, 0x76, 0xa0, 0x3a, 0x13, 0x7c, 0xaa,
	0xa3, 0x1c, 0x60, 0x5a, 0xa4, 0xc3, 0xde, 0x05, 0xec, 0x15, 0xac, 0x5d, 0x37, 0x1d, 0xaf, 0xd8,
	0xdc, 0x6a, 0x8c, 0x7e, 0x24, 0xfb, 0xb0, 0x9d, 0xd0, 0x20, 0x66, 0x56, 0x57, 0xcc, 0xe0, 0x69,
	0xf9, 0xbc, 0x74, 0xf2, 0x8f, 0x32, 0x74, 0x57, 0x1a, 0x21, 0x72, 0x0e, 0x5b, 0x28, 0x32, 0xa5,
	0xb5, 0x2d, 0xd8, 0x12, 0x07, 0xc5, 0x06, 0x19, 0xe4, 0x53, 0xd8, 0xc2, 0xf3, 0x2b, 0xe3, 0xf9,
	0xf5, 0xbf, 0x4d, 0xdb, 0xd5, 0x5f, 0x9c, 0x1a, 0x72, 0x8b, 0x37, 0xb0, 0xb2, 0x66, 0x03, 0xef,
	0x5c, 0x8a, 0xad, 0xb7, 0xbf, 0x14, 0x3d, 0x7d, 0x29, 0x5e, 0xc7, 0x5c, 0x30, 0x1f, 0xb5, 0xae,
	0xe6, 0x66, 0xe3, 0xde, 0xcf, 0xa0, 0xfe, 0xbf, 0xed, 0xeb, 0x9f, 0xb6, 0xa0, 0x75, 0x3b, 0x11,
	0x8c, 0x5d, 0xdd, 0xd8, 0x24, 0xef, 0x40, 0x85, 0x79, 0x3c, 0x65, 0x33, 0x8f, 0x13, 0x02, 0x5b,
	0x1e, 0x4d, 0x12, 0x4b, 0xc6, 0x67, 0x8d, 0xfa, 0x3d, 0xf7, 0xed, 0x6a, 0xf5, 0x23, 0x79, 0x08,
	0xc0, 0x42, 0x11, 0x05, 0x41, 0xb6, 0xbe, 0xba, 0x9b, 0xb3, 0x90, 0xc3, 0xac, 0x61, 0x36, 0x1f,
	0x26, 0x69, 0x2b, 0xfc, 0x3e, 0x74, 0x24, 0x1f, 0x87, 0x54, 0xe9, 0xfe, 0x55, 0x62, 0x0f, 0x89,
	0x22, 0x5c, 0x77, 0x77, 0x33, 0xbb, 0x69, 0x2d, 0xb1, 0x8f, 0x62, 0x22, 0x61, 0xe2, 0x6e, 0x1f,
	0x55, 0xb5, 0x7d, 0x14, 0x3a, 0x97, 0xfb, 0xa8, 0x43, 0xd8, 0xb1, 0x41, 0x6b, 0xe6, 0xb5, 0x66,
	0xa4, 0x4b, 0xd9, 0x94, 0xfe, 0x2e, 0x57, 0xca, 0xb4, 0x80, 0x6e, 0xbb, 0x4d, 0x34, 0xa6, 0xa5,
	0xcc, 0x81, 0x6a, 0xea, 0x36, 0x9f, 0x02, 0xe9, 0x90, 0x1c, 0xc0, 0xce, 0x8c, 0xea, 0xe6, 0x1d,
	0x25, 0xb0, 0xee, 0x6e, 0xcf, 0xa8, 0xcb, 0x5e, 0x93, 0x7b, 0x50, 0xa5, 0x9e, 0x1c, 0xc4, 0x22,
	0xc0, 0x86, 0xbe, 0xee, 0xee, 0x50, 0x4f, 0x7e, 0x29, 0x82, 0x0c, 0x2f, 0x51, 0x0e, 0x2d, 0x5e,
	0x92, 0x36, 0x94, 0xb9, 0x6f, 0xdb, 0xee, 0x32, 0xf7, 0xc9, 0x39, 0xd4, 0xb3, 0x6f, 0x56, 0xab,
	0x57, 0x6f, 0x94, 0xf4, 0x0c, 0xfc, 0x7f, 0x35, 0xdb, 0x8f, 0xa0, 0x29, 0xfd, 0x57, 0x83, 0x4c,
	0x72, 0x8d, 0xdc, 0x34, 0xa4, 0xff, 0x2a, 0x95, 0xd8, 0x93, 0xff, 0x94, 0x80, 0xac, 0xaa, 0xa4,
	0xee, 0xc9, 0xa8, 0xef, 0x0b, 0x26, 0xe5, 0xa0, 0x48, 0x71, 0x4d, 0x12, 0x1d, 0x59, 0x48, 0x01,
	0xff, 0xa7, 0x70, 0xcf, 0x4b, 0x92, 0x42, 0xae, 0xc9, 0xb6, 0x03, 0x2f, 0x49, 0x0a, 0x78, 0x8f,
	0xa0, 0x99, 0xef, 0xea, 0x6d, 0x1e, 0x36, 0x72, 0x4d, 0xbb, 0xfe, 0x82, 0x50, 0x3a, 0xb1, 0x7d,
	0x39, 0xc8, 0xe5, 0x5d, 0xf1, 0x17, 0xc4, 0xd2, 0x0d, 0x70, 0x5b, 0x96, 0x67, 0x86, 0x27, 0x7f,
	0x2b, 0x43, 0x6b, 0xe9, 0x13, 0x83, 0x9c, 0xc3, 0xbd, 0x4b, 0x8c, 0x91, 0x4b, 0xb5, 0xdf, 0xc4,
	0xd3, 0x21, 0x13, 0xb8, 0xe2, 0x8a, 0xbb, 0xce, 0x4d, 0x7e, 0x08, 0x7b, 0xc6, 0x65, 0x03, 0x5a,
	0x56, 0x19, 0x59, 0x45, 0x2e, 0xf2, 0x14, 0x1c, 0x6b, 0x58, 0x7d, 0x59, 0x05, 0x69, 0x6b, 0xfd,
	0xe4, 0x09, 0xec, 0x5b, 0x9f, 0x69, 0x14, 0x2f, 0xa9, 0xf4, 0xa8, 0x6f, 0x7e, 0x32, 0x54, 0xdc,
	0x42, 0x9f, 0x5e, 0x9b, 0xb5, 0x67, 0x0d, 0x74, 0x4a, 0xdb, 0x36, 0x6b, 0x5b, 0xe3, 0x26, 0xa7,
	0xb0, 0x7b, 0x2d, 0x5f, 0x18, 0xc9, 0x37, 0x31, 0xf1, 0x1e, 0xd7, 0xdc, 0xbb, 0xe6, 0x4f, 0xa3,
	0xbf, 0xff, 0xf3, 0xe1, 0x77, 0xfe, 0xf2, 0xef, 0x87, 0xa5, 0xdf, 0x7e, 0x98, 0xfb, 0xcd, 0x94,
	0xfb, 0xc9, 0x93, 0xfe, 0x5f, 0x0a, 0x68, 0x38, 0x3e, 0x5b, 0xf9, 0xf9, 0xf3, 0xd7, 0x72, 0xd7,
	0xec, 0xd4, 0xaf, 0x78, 0xc2, 0xbe, 0xbe, 0x44, 0xdb, 0xbf, 0xca, 0xbd, 0x15, 0xdb, 0xd7, 0xcf,
	0x99, 0xa2, 0x5a, 0xa9, 0x87, 0x3b, 0x18, 0xf0, 0xc7, 0xff, 0x0d, 0x00, 0x00, 0xff, 0xff, 0xca,
	0x83, 0xef, 0x39, 0x0e, 0x13, 0x00, 0x00,
}
